/**
 * Bundled by jsDelivr using Rollup v2.79.1 and Terser v5.19.2.
 * Original file: /npm/bertin@1.8.5/src/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import*as t from"../d3-geo@3.1.0/+esm.js";import{geoPath as e,geoBounds as r,geoEquirectangularRaw as l,geoAzimuthalEquidistant as a,geoProjection as i,geoOrthographic as o,geoEquirectangular as s,geoIdentity as n,geoArea as c,geoCircle as p,geoGraticule as d,geoCentroid as g,geoMercator as f}from"../d3-geo@3.1.0/+esm.js";import{pointers as u,select as y,create as h}from"../d3-selection@3.0.0/+esm.js";import{transition as k}from"../d3-transition@3.0.1/+esm.js";import{feature as m,neighbors as _,mesh as x}from"../topojson-client@3.1.0/+esm.js";import*as b from"../d3-geo-projection@4.0.0/+esm.js";import{geoHufnagel as v,geoProject as O}from"../d3-geo-projection@4.0.0/+esm.js";import S from"../proj4@2.10.0/+esm.js";import{drag as j}from"../d3-drag@3.0.0/+esm.js";import{scaleSqrt as w,scaleOrdinal as $,scaleThreshold as z,scaleLinear as A,scaleSequentialQuantile as W}from"../d3-scale@4.0.2/+esm.js";import*as M from"../d3-array@3.2.4/+esm.js";import{max as P,descending as N,reverse as L,sort as C,min as D,range as E,rollup as J,ascending as q,blur2 as F,sum as G,mean as B,flatGroup as I,index as R}from"../d3-array@3.2.4/+esm.js";import*as T from"../d3-scale-chromatic@3.0.0/+esm.js";import*as Y from"../statsbreaks@1.0.6/+esm.js";import{quantize as U,interpolate as X}from"../d3-interpolate@3.0.1/+esm.js";import{forceX as H,forceY as Q,forceCollide as K,forceSimulation as V}from"../d3-force@3.0.0/+esm.js";import{quadtree as Z}from"../d3-quadtree@3.0.1/+esm.js";import{symbol as tt,symbolCircle as et,symbolDiamond as rt,symbolCross as lt,symbolSquare as at,symbolStar as it,symbolTriangle as ot,symbolWye as st}from"../d3-shape@3.2.0/+esm.js";import nt from"../@turf/boolean-point-in-polygon@6.5.0/+esm.js";import ct from"../@turf/bbox@6.5.0/+esm.js";import pt from"../@turf/intersect@6.5.0/+esm.js";import dt from"../rbush@3.0.1/+esm.js";import{contourDensity as gt}from"../d3-contour@4.0.2/+esm.js";import ft from"../jsts@2.11.0/org/locationtech/jts/io/GeoJSONReader.js/+esm.js";import ut from"../jsts@2.11.0/org/locationtech/jts/io/GeoJSONWriter.js/+esm.js";import yt from"../jsts@2.11.0/org/locationtech/jts/operation/union/UnionOp.js/+esm.js";import ht from"../jsts@2.11.0/org/locationtech/jts/operation/buffer/BufferOp.js/+esm.js";import*as kt from"../d3-geo-scale-bar@1.2.5/+esm.js";import{randomPosition as mt}from"../@turf/random@6.5.0/+esm.js";import{tile as _t}from"../d3-tile@1.0.0/+esm.js";import{topology as xt}from"../topojson-server@3.0.1/+esm.js";const bt=Object.assign({},{geoPath:e,geoBounds:r});const vt=Object.assign({},{feature:m});function Ot(t){return"Topology"!=(t=JSON.parse(JSON.stringify(t))).type||Array.isArray(t)?"FeatureCollection"!=t.type||Array.isArray(t)?Array.isArray(t)&&null!=t[0].type&&null!=t[0].properties&&null!=t[0].geometry?{type:"FeatureCollection",features:t}:Array.isArray(t)&&null!=t[0].type&&null!=t[0].coordinates?{type:"FeatureCollection",features:t.map((t=>({type:"Feature",properties:{},geometry:t})))}:"object"==typeof t&&["Point","LineString","Polygon","MultiPoint","MultiLineString","MultiPolygon"].includes(t.type)?{type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:t}]}:"object"==typeof t&&"Feature"==t.type?{type:"FeatureCollection",features:[t]}:t:t:vt.feature(t,Object.keys(t.objects)[0])}const St=Object.assign({},{geoEquirectangularRaw:l,geoBounds:r});function jt(t){let e;e=Array.isArray(t)?t:St.geoBounds(Ot(t));let r=e[0][0],l=e[0][1],a=e[1][0],i=e[1][1];const o={type:"FeatureCollection",features:[{type:"Feature",properties:{id:1},geometry:{type:"Polygon",coordinates:-90===l?[[[r,i],[a,i]]]:[[[r,l],[r,i],[a+=360*(a<r),i],[a,l],[r,l]]]}}]};return wt(St.geoEquirectangularRaw,.02)(o)}const wt=(t,e)=>{const r=Math.PI/180,l=Math.tan(r*e/2)**2,a=function(e,r,i,o,s,n,c){if(n--){var p=zt(e,i),d=t.invert(...p),g=Wt(d),f=Mt(g,r),u=Mt(g,o);$t(g,r,o)*(1+.25*s)*(1+.25*s)/(l*s)+(f-u)/s*2*((f-u)/s)>1&f+u>l|f+u>.25&&(a(e,r,p,g,f,n,c),c.push(d),a(p,g,i,o,u,n,c))}},i=e=>{let r=[],l=e[0],i=t.invert(...l),o=Wt(i);r.push(i);for(var s=1,n=e.length;s<n;s++){let i=e[s],n=t.invert(...i),c=Wt(n);a(l,o,i,c,Mt(o,c),16,r),r.push(n),l=i,o=c}return r};let o,s=e=>t.invert(...e),n=t=>e=>e.forEach(((r,l)=>e[l]=t(r))),c={Point:t=>t.coordinates=s(t.coordinates),MultiPoint:t=>n(s)(t.coordinates),LineString:t=>t.coordinates=i(t.coordinates),Polygon:t=>n(i)(t.coordinates),MultiLineString:t=>n(i)(t.coordinates),MultiPolygon:t=>t.coordinates.forEach(n(i)),Feature:t=>o(t.geometry),GeometryCollection:t=>t.geometries.forEach(o),FeatureCollection:t=>t.features.forEach(o)};return o=t=>(c[t.type](t),t),function(t){return t=JSON.parse(JSON.stringify(t)),o(t)}},$t=([t,e,r],[l,a,i],[o,s,n])=>{var c=t*((a-e)*(n-r)-(s-e)*(i-r))+e*((i-r)*(o-t)-(n-r)*(l-t))+r*((l-t)*(s-e)-(o-t)*(a-e)),p=(t+o)*(t+l)+(e+s)*(e+a)+(r+n)*(r+i);return(c*c+!(p*p))/(p*p)},zt=([t,e],[r,l])=>[.5*(t+r),.5*(e+l)],At=Math.PI/180,Wt=([t,e])=>[Math.cos(At*e)*Math.cos(At*t),Math.cos(At*e)*Math.sin(At*t),Math.sin(At*e)],Mt=([t,e,r],[l,a,i])=>{var o=t*(a-e)-(l-t)*e,s=e*(i-r)-(a-e)*r,n=r*(l-t)-(i-r)*t,c=t*(l+t)+e*(a+e)+r*(i+r);return(o*o+s*s+n*n+!(c*c))/(c*c)},Pt=Object.assign({},t,b);const Nt=Object.assign({},{geoAzimuthalEquidistant:a});const Lt=Object.assign({},{geoHufnagel:v});const Ct=Object.assign({},{geoProjection:i});function Dt(t,e){const{abs:r,atan:l,ln:a,PI:i,sin:o,sqrt:s}=Math,n=1e-5,c=o(t);let p=s(1-e),d=c*c;if(d>=1||r(t)===i/2){if(p<=n)return c<0?-1/0:1/0;for(d=e=1,e+=p;r(d-p)>.001*e;)p=s(d*p),d=e/=2,e+=p;return c<0?-i/e:i/e}{if(p<=n)return a((1+c)/(1-c))/2;let t,o,g,f,u;for(o=0,t=e=1,g=e*p,e+=p,u=s((1-d)/d),r(u-=g/u)<=0&&(u=1e-9*s(g));r(t-p)>.001*t;)p=2*s(g),o+=o,u<0&&(o+=1),g=e*p,t=e,e+=p,r(u-=g/u)<=0&&(u=1e-9*s(g));return u<0&&(o+=1),f=(l(e/u)+i*o)/e,c<0?-f:f}}const{abs:Et,max:Jt,min:qt,sin:Ft,cos:Gt,asin:Bt,acos:It,tan:Rt}=Math;function Tt(t,e){let r,l,a,i;const o=Rt(.5*e);return r=Gt(Bt(o))*Ft(.5*t),a=o+r<0,i=o-r<0,l=It(o),r=It(r),function(t,e,r,l){let a=Math.asin(Math.sqrt(1+Math.min(0,Math.cos(t+e))));r&&(a=-a);let i=Math.asin(Math.sqrt(Math.abs(1-Math.max(0,Math.cos(t-e)))));return l&&(i=-i),[Dt(a,.5),Dt(i,.5)]}(r,l,a,i)}const Yt=Object.assign({},{geoOrthographic:o});const Ut=Object.assign({},{geoProjection:i});S.defs([["epsg:2154","+title=France Lambert93 +proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs"]]),S.defs([["epsg:3035","+title=Europa (ETRS89/LAEA) +proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs"]]),S.defs([["epsg:3857","+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs"]]),S.defs([["epsg:27700","+title=British National Grid -- United Kingdom +proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +ellps=airy +towgs84=446.448,-125.157,542.06,0.15,0.247,0.842,-20.489 +units=m +no_defs"]]),S.defs([["epsg:42304","+title=NAD83 / NRCan LCC Canada +proj=lcc +lat_1=49 +lat_2=77 +lat_0=49 +lon_0=-95 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs "]]);const Xt=Object.assign({},{geoEquirectangular:s,geoIdentity:n});function Ht(t){if(null==t||""===t)return Xt.geoEquirectangular();if("function"==typeof t)return t;if("string"==typeof t){if("globe"==(t=t.replace(/\s/g,"")).substring(0,5).toLowerCase())return e=t,Yt.geoOrthographic().rotate(function(t){if(t&&"globe"==t.substring(0,5).toLowerCase())return(t=t.match(/\((.*)\)/))?t.pop().split(",").map((t=>+t)):[0,0]}(e));if("polar"==t.toLowerCase())return Nt.geoAzimuthalEquidistant().scale(190).rotate([0,-90]).clipAngle(150);if("hoaxiaoguang"==t.toLowerCase())return Lt.geoHufnagel().a(.8).b(.35).psiMax(50).ratio(1.6).angle(90).rotate([110,-200,90]);if("spilhaus"==t.toLowerCase())return Ct.geoProjection(Tt).rotate([-66.94970198,49.56371678,40.17823482]);if("user"===t)return Xt.geoIdentity().reflectY(!0);if("+proj"===t.substring(0,5)||"epsg:"===t.substring(0,5))return function(t){let e;+t==t&&(e=S("epsg:"+t)),e||(e=S(t));const r=180/Math.PI,l=1/r,a=function(t,l){return e.forward([t*r,l*r])};a.invert=function(t,r){return e.inverse([t,r]).map((function(t){return t*l}))};const i=Ut.geoProjection(a).scale(1);return i.raw=e,i}(t);if("user"!==t&&"+proj"!==t.substring(0,5)&&"epsg:"!==t.substring(0,5))return function(t){let e=t;return e=e.replace(/\s/g,""),"d3.geo"!==e.substring(0,6)&&(-1===e.indexOf(".")?e+="()":e=e.replace(".","()."),e="d3.geo"+e),new Function("d3",`return (${e})`)(Pt)}(t)}var e}function Qt(t){let e=["z","l","p"],r=t.features.map((t=>t.geometry.type));r=Array.from(new Set(r));let l=(-1!==r.indexOf("Polygon")||-1!==r.indexOf("MultiPolygon")?e[0]:"")+(-1!==r.indexOf("LineString")||-1!==r.indexOf("MultiLineString")?e[1]:"")+(-1!==r.indexOf("Point")||-1!==r.indexOf("MultiPoint")?e[2]:"");return 1==l.length?l:"composite"}function Kt(t,e,r){let l=JSON.parse(JSON.stringify(t)),a=e;if(null==e&&null==r&&null==a){let t=["coords","Coords","coord","Coords","Coordinates","coordinates","Coordinate","coordinate"],i=["lat","Lat","LAT","Latitude","latitude"],o=["lon","Lon","LON","lng","Lng","LNG","Longitude","longitude"],s=[];l.forEach((t=>s.push(Object.keys(t)))),s=Array.from(new Set(s.flat())),e=i.filter((t=>s.includes(t)))[0],r=o.filter((t=>s.includes(t)))[0],a=t.filter((t=>s.includes(t)))[0]}if(e&&r){let l=e,a=r;return{type:"FeatureCollection",features:t.map((t=>({type:"Feature",properties:t,geometry:{type:"Point",coordinates:[+t[a],+t[l]]}})))}}return a?{type:"FeatureCollection",features:t.map((t=>{return{type:"Feature",properties:t,geometry:{type:"Point",coordinates:(e=t[a],e?e.toLowerCase().includes("point")?Zt(e):Vt(e):null).reverse()}};var e}))}:a}function Vt(t,e=","){let r=(t=t.replace(/[ ]+/g,"")).split(e).map((t=>t.replace(",","."))).map((t=>t.replace(/[^\d.-]/g,""))).map((t=>+t));return 2!=r.length&&(r=[void 0,void 0]),r}function Zt(t){let e=t.match(/\(([^)]+)\)/g);return null===e?[void 0,void 0]:e[0].replace(/\s\s+/g," ").replace("(","").replace(")","").trimStart().trimEnd().split(" ").map((t=>t.replace(",","."))).map((t=>+t))}function te(t,e){if(0!==t.length){ee(t[0],e);for(let r=1;r<t.length;r++)ee(t[r],!e)}}function ee(t,e){let r=0,l=0;for(let e=0,a=t.length,i=a-1;e<a;i=e++){const a=(t[e][0]-t[i][0])*(t[i][1]+t[e][1]),o=r+a;l+=Math.abs(r)>=Math.abs(a)?r-o+a:a-o+r,r=o}r+l>=0!=!!e&&t.reverse()}function re(t){t=Ot(t);let e=[];t.features.forEach((t=>{e.push(function(t){let e=[];t.geometry.type.includes("Multi")?t.geometry.coordinates.forEach((r=>{e.push({type:"Feature",properties:t.properties,geometry:{type:t.geometry.type.replace("Multi",""),coordinates:r}})})):e.push({...t});const r=c(t);return e.forEach((t=>t.__share=c(t)/r)),JSON.parse(JSON.stringify(e))}(t))}));const r=Object.keys(t).filter((t=>"features"!=t)),l={};return r.forEach((e=>{l[e]=t[e]})),l.features=e.flat(),l}function le(t,e={rewind:!1}){if(Array.isArray(t)&&"object"!=typeof t[0].geometry&&"object"!=typeof t[0].coordinates)return Kt(t);let r=Ot(t),l=Qt(r);return"z"==l&&!0===e.rewind&&function(t,e={}){let r=!1!==e.outer,l=!0==(!1!==e.mutate)?t:JSON.parse(JSON.stringify(t));for(let t=0;t<l.features.length;t++)if("Polygon"===l.features[t].geometry.type)te(l.features[t].geometry.coordinates,r);else if("MultiPolygon"===l.features[t].geometry.type)for(let e=0;e<l.features[t].geometry.coordinates.length;e++)te(l.features[t].geometry.coordinates[e],r)}(r,{mutate:!0}),"p"==l&&(r=re(r)),r}function ae(t,e,r){let l=function(t,e){if(!t||!e)return;var r=t[0],l=t[1],a=t[2],i=t[3],o=e[0],s=e[1],n=e[2],c=e[3];return[r*o-l*s-a*n-i*c,l*o+r*s+a*c-i*n,r*n-l*c+a*o+i*s,r*c+l*n-a*s+i*o]}(function(t){if(!t)return;let e=.5*t[0]*Math.PI/180,r=.5*t[1]*Math.PI/180,l=.5*t[2]*Math.PI/180,a=Math.sin(e),i=Math.cos(e),o=Math.sin(r),s=Math.cos(r),n=Math.sin(l),c=Math.cos(l),p=a*s*c-i*o*n,d=i*o*c+a*s*n,g=i*s*n-a*o*c,f=i*s*c+a*o*n;return[f,p,d,g]}(r),function(t,e){if(t&&e){let r=function(t,e){return[t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]]}(t,e),l=Math.sqrt(oe(r,r));if(0==l)return;let a=.5*Math.acos(Math.max(-1,Math.min(1,oe(t,e)))),i=r[2]*Math.sin(a)/l,o=-r[1]*Math.sin(a)/l,s=r[0]*Math.sin(a)/l,n=Math.cos(a);return a&&[n,i,o,s]}}(ie(t),ie(e)));return function(t){if(!t)return;return[180*Math.atan2(2*(t[0]*t[1]+t[2]*t[3]),1-2*(t[1]*t[1]+t[2]*t[2]))/Math.PI,180*Math.asin(Math.max(-1,Math.min(1,2*(t[0]*t[2]-t[3]*t[1]))))/Math.PI,180*Math.atan2(2*(t[0]*t[3]+t[1]*t[2]),1-2*(t[2]*t[2]+t[3]*t[3]))/Math.PI]}(l)}function ie(t){let e=t[0]*Math.PI/180,r=t[1]*Math.PI/180;return[Math.cos(r)*Math.cos(e),Math.cos(r)*Math.sin(e),Math.sin(r)]}function oe(t,e){for(var r=0,l=0;t.length>r;++r)l+=t[r]*e[r];return l}const se=Object.assign({},{geoPath:e,drag:j,pointers:u});function ne(t,e){let r,l;let a=se.drag().on("start",(function(t){r=e.invert(se.pointers(t,this)[0]),l=e.rotate()})).on("drag",(function(a){l=e.rotate();var i=e.invert(se.pointers(a,this)[0]),o=ae(r,i,l);e.rotate(o),t.selectAll(".onglobe").attr("d",se.geoPath(e)),t.selectAll(".onglobe_coords").attr("cx",(t=>se.geoPath(e).centroid(t.geometry)[0])).attr("cy",(t=>se.geoPath(e).centroid(t.geometry)[1])).attr("x",(t=>se.geoPath(e).centroid(t.geometry)[0])).attr("y",(t=>se.geoPath(e).centroid(t.geometry)[1])).attr("visibility",(t=>isNaN(se.geoPath(e).centroid(t.geometry)[0])?"hidden":"visible")),t.selectAll(".onglobe_translate").attr("transform",(t=>`translate(\n         ${se.geoPath(e).centroid(t.geometry)[0]},\n         ${se.geoPath(e).centroid(t.geometry)[1]})`)).attr("visibility",(t=>isNaN(se.geoPath(e).centroid(t.geometry)[0])?"hidden":"visible"))}));t.call(a)}function ce(t){let e=new Map([["strokeOpacity","stroke-opacity"],["strokeWidth","stroke-width"],["fillOpacity","fill-opacity"],["strokeDasharray","stroke-dasharray"],["strokeLinecap","stroke-linecap"],["strokeLinejoin","stroke-linejoin"]]).get(t);return e||t}function pe(t){const e=p().center((t=>t)).radius(t/4).precision(10),r=[];for(let l=-80;l<=80;l+=t)for(let a=-180;a<180;a+=t)r.push({type:"Feature",properties:{},geometry:{type:"MultiPolygon",coordinates:[e([a,l]).coordinates]}});return{type:"FeatureCollection",features:r}}function de(t){let e=[];for(let r=0;r<t;r++)e[r]=360/t*r*(Math.PI/180);return e}function ge(t,e){let r;return e>=0&&(r=+t.toFixed(e)),e<0&&(r=Math.round(t/+(1+"0".repeat(Math.abs(e))))*+(1+"0".repeat(Math.abs(e)))),null==e&&(r=t),r}const fe=Object.assign({},{scaleSqrt:w,max:P,descending:N});function ue(t,e,r={},l=0,a=0){let i=r.values,o=r.k?r.k:50,s=r.stroke?r.stroke:"black",n=r.fill?r.fill:"none",c=r.strokeWidth?r.strokeWidth:.8,p=r.txtcol?r.txtcol:"#363636",d=r.x?r.x:null,g=r.y?r.y:null,f=r.title?r.title:"Title, year\n(units)",u=r.fontSize?r.fontSize:14,y=r.fontSize2?r.fontSize2:10,h=null!=r.round?r.round:void 0,k=null!=r.divisor?r.divisor:1,m=r.fixmax;const _=null!=m?m:fe.max(i);let x=fe.scaleSqrt([0,_],[0,o]),b=x(fe.max(i));if(null!=d&&null!=g){let r=t.append("g").attr("class","bertinlegend").attr("class","legcircle_"+e);0!=a&&r.attr("opacity",0).transition().delay(l).duration(a).attr("opacity",1),r.selectAll("circle").data(i.sort(fe.descending)).join("circle").attr("r",(t=>x(t))).attr("fill",n).attr("stroke",s).attr("stroke-width",c).attr("transform",(t=>`translate(${d+b},${g-x(t)+2*b+(f.split("\n").length+1)*u})`)),r.selectAll("line").data(i).join("line").attr("x1",d+b).attr("y1",(t=>g+2*b-2*x(t)+(f.split("\n").length+1)*u)).attr("x2",d+2*b+u).attr("y2",(t=>g+2*b-2*x(t)+(f.split("\n").length+1)*u)).attr("stroke",s).attr("stroke-width",c).attr("stroke-dasharray",2),r.append("g").selectAll("text").data(f.split("\n")).join("text").attr("x",d).attr("y",g).attr("font-size",`${u}px`).attr("dy",((t,e)=>e*u)).attr("text-anchor","start").attr("dominant-baseline","hanging").attr("fill",p).text((t=>t)),r.append("g").selectAll("text").data(i).join("text").attr("x",d+2*b+u+y/2).attr("y",(t=>g+2*b-2*x(t)+(f.split("\n").length+1)*u)).attr("font-size",y).attr("dominant-baseline","central").attr("fill",p).text((t=>ge(t/k,h)))}}const ye=Object.assign({},{reverse:L});function he(t,e={},r=0,l=0){let a=e.x?e.x:null,i=e.y?e.y:null,o=e.w?e.w:30,s=e.h?e.h:20,n=e.title?e.title:null,c=e.fontSize?e.fontSize:14,p=e.fontSize2?e.fontSize2:10,d=e.stroke?e.stroke:"black",g=e.fillOpacity?e.fillOpacity:1,f=e.strokeWidth?e.strokeWidth:.5,u=e.txtcol?e.txtcol:"#363636",y=e.breaks,h=e.colors,k=e.missing;const m=null!=k?h.length:-1,_=null==k?ye.reverse(y):[ye.reverse(y),k[0]].flat(),x=null==k?ye.reverse(h):[ye.reverse(h),k[1]].flat();if(null!=a&&null!=i){let y=t.append("g").attr("class","bertinlegend").attr("class",e.id);0!=l&&y.attr("opacity",0).transition().delay(r).duration(l).attr("opacity",1);let h=0;null!=n&&(h=(n.split("\n").length+1)*c,y.append("g").selectAll("text").data(n.split("\n")).join("text").attr("x",a).attr("y",i).attr("font-size",`${c}px`).attr("dy",((t,e)=>e*c)).attr("text-anchor","start").attr("dominant-baseline","hanging").attr("fill",u).text((t=>t))),y.selectAll("rect").data(x).join("rect").attr("x",a).attr("y",((t,e)=>i+h+(s+0)*e+(e===m?s/2:0))).attr("height",s).attr("width",o).attr("stroke",d).attr("stroke-width",f).attr("fill-opacity",g).attr("fill",(t=>t)),y.append("g").selectAll("text").data(_).join("text").attr("x",a+o+p/2).attr("y",i+h).attr("font-size",`${p}px`).attr("fill",u).attr("dy",((t,e)=>(s+0)*e)).attr("text-anchor","start").attr("dominant-baseline","central").text((t=>t))}}const ke=Object.assign({},{scaleOrdinal:$});function me(t,e={},r=0,l=0){let a=e.x?e.x:null,i=e.y?e.y:null,o=e.w?e.w:30,s=e.h?e.h:20,n=e.title?e.title:null,c=e.fontSize?e.fontSize:14,p=e.fontSize2?e.fontSize2:10,d=e.stroke?e.stroke:"black",g=e.fillOpacity?e.fillOpacity:1,f=e.strokeWidth?e.strokeWidth:.5,u=e.txtcol?e.txtcol:"#363636",y=e.types,h=e.colors,k=ke.scaleOrdinal().domain(y).range(h);if(console.log(l),console.log(r),null!=a&&null!=i){console.log("legtypo2");let h=t.append("g").attr("class","bertinlegend").attr("class",e.id);0!=l&&h.attr("opacity",0).transition().delay(r).duration(l).attr("opacity",1);let m=0;null!=n&&(m=(n.split("\n").length+1)*c,h.append("g").selectAll("text").data(n.split("\n")).join("text").attr("x",a).attr("y",i).attr("font-size",`${c}px`).attr("dy",((t,e)=>e*c)).attr("text-anchor","start").attr("dominant-baseline","hanging").attr("fill",u).text((t=>t))),h.selectAll("rect").data(y).join("rect").attr("x",a).attr("y",((t,e)=>i+m+(s+3)*e)).attr("height",s).attr("width",o).attr("fill",(t=>k(t))).attr("stroke",d).attr("stroke-width",f).attr("fill-opacity",g),h.append("g").selectAll("text").data(y).join("text").attr("x",a+o+p/2).attr("y",i+m+s/2).attr("font-size",`${p}px`).attr("fill",u).attr("dy",((t,e)=>(s+3)*e)).attr("text-anchor","start").attr("dominant-baseline","central").text((t=>t))}}const _e=Object.assign({},{reverse:L});const xe=Object.assign({},{reverse:L});const be=Object.assign({},T,{sort:C,scaleThreshold:z,scaleOrdinal:$});function ve(t,e){if("string"==typeof e)return{getcol:t=>e};if(t=null==t[0].properties?t:t.map((t=>t.properties)),"object"==typeof e&&"choro"==e.type){let r=e.values,l=e.colors?e.colors:"Blues",a=null!=e.nbreaks?e.nbreaks:5,i=e.breaks?e.breaks:null,o=null!=e.k?e.k:1,s=1==e.middle,n=e.method?e.method:"quantile",c=e.col_missing?e.col_missing:"#f5f5f5",p=e.txt_missing?e.txt_missing:"No data",d=void 0!==e.leg_round?e.leg_round:void 0;"q6"==n&&(a=6);const g=t.map((t=>t[r])),f=g.filter((t=>void 0!==t)).filter((t=>null!==t)).filter((t=>!isNaN(+t))).filter((t=>""!==t)),u=g.length===f.length?null:[p,c];i=null==i?Y.breaks(f,{method:n,nb:a,k:o,middle:s,precision:d}):be.sort(i),Array.isArray(l)||(l=be[`scheme${l}`][i.length-1]);let y=[...i];return y.pop(),y.shift(),{getcol:function(t){return""===t||isNaN(+t)?c:be.scaleThreshold(y,l).unknown(c)(t)},breaks:i,colors:l,missing:u}}if("object"==typeof e&&"typo"==e.type){let r=e.values,l=e.colors?e.colors:"Tableau10",a=e.col_missing?e.col_missing:"#f5f5f5",i=e.txt_missing?e.txt_missing:"No data";const o=null!=e.order?e.order:Array.from(new Set(t.map((t=>t[r]))));let s=null!=e.types?e.types:o.filter((t=>""!==t&&null!=t&&null!=t));return Array.isArray(l)?l.slice(0,s.length):l=be[`scheme${l}`].slice(0,s.length),{getcol:be.scaleOrdinal().domain(s).range(l).unknown(a),types:s.length==o.length?s:[s,i].flat(),colors:s.length==o.length?l:[l,a].flat()}}if("object"==typeof e&&"split"==e.type){let r=e.values,l=null!=e.split?e.split:0,a=e.colors?e.colors:["#F25842","#4a7cd9"],i=e.col_missing?e.col_missing:"#f5f5f5",o=e.txt_missing?e.txt_missing:"No data";const s=t.map((t=>t[r])),n=s.filter((t=>""!==t&&null!=t&&null!=t));return{getcol:t=>t>=l?a[0]:t<l?a[1]:null==t||""===t?i:void 0,types:s.length==n.length?[`>= ${l}`,`< ${l}`]:[[`>= ${l}`,`< ${l}`],o].flat(),colors:s.length==n.length?a:[a,i].flat()}}}const Oe=Object.assign({},{min:D,max:P,scaleLinear:A,scaleOrdinal:$,scaleThreshold:z,quantize:U,interpolate:X});function Se(t,e){const r=e.type?e.type:"linear";if("number"==typeof e||"string"==typeof e)return{getthickness:()=>+e};if(0==t.length)return{getthickness:()=>0,valmax:0,sizemax:0};if("number"!=typeof e&&"string"!=typeof e&&"linear"==r){let l=null!=e.k?e.k:10,a=e.values,i=null!=e.fixmax?e.fixmax:void 0,o=null!=e.fixmin?e.fixmin:0;if("geometry"in t[0]&&"properties"in t[0]&&(t=t.map((t=>t.properties))),"string"==typeof e||"number"==typeof e)return{getcol:t=>e};1==o&&(o=Oe.min(t.map((t=>Math.abs(+t[a])))));const s=null==i?Oe.max(t.map((t=>Math.abs(+t[a])))):i,n=Oe.max(t.map((t=>Math.abs(+t[a]))));return{type:r,getthickness:Oe.scaleLinear().domain([o,s]).range([0,l]),valmax:n,valmin:o,sizemax:Oe.scaleLinear().domain([o,s]).range([0,l])(n)}}if("number"!=typeof e&&"string"!=typeof e&&"quali"==r){const t=e.categories,l=null!=e.k?e.k:10,a=e.sizes?e.sizes:Oe.quantize(Oe.interpolate(1,l),t.length);return{type:r,categories:t,sizes:a,getthickness:Oe.scaleOrdinal().domain(t).range(a).unknown(0)}}if("number"!=typeof e&&"string"!=typeof e&&"discr"==r){const l=e.values;let a=e.sizes,i=null!=e.nbreaks?e.nbreaks:5,o=e.breaks?e.breaks:null,s=null!=e.k?e.k:10,n=null!=e.nbsd?e.nbsd:1,c=1==e.middle,p=e.method?e.method:"quantile";"q6"==p&&(i=6);const d=t.map((t=>+t.properties[l])).filter((t=>null!=t&&null!=t&&""!=t));o=null==o?Y.breaks(d,{method:p,nb:i,k:n,middle:c}):Oe.sort(o),null==a&&(a=Oe.quantize(Oe.interpolate(1,s),o.length-1));let g=[...o];return g.pop(),g.shift(),{type:r,breaks:o,sizes:a,getthickness:Oe.scaleThreshold(g,a).unknown(0)}}}function je(t,e,r,l,a,i,o,s){"object"==typeof r&&"choro"==r.type&&he(e,{x:r.leg_x,y:r.leg_y,w:r.leg_w,h:r.leg_h,stroke:r.leg_stroke,fillOpacity:r.leg_fillOpacity,strokeWidth:r.leg_strokeWidth,txtcol:r.leg_txtcol,title:r.leg_title?r.leg_title:r.values,fontSize:r.leg_fontSize,fontSize2:r.leg_fontSize2,breaks:ve(t.features,r).breaks,colors:ve(t.features,r).colors,missing:ve(t.features,r).missing,id:"legboxfill_"+i},o,s),"object"==typeof l&&"choro"==l.type&&he(e,{x:l.leg_x,y:l.leg_y,w:l.leg_w,h:l.leg_h,stroke:l.leg_stroke,fillOpacity:l.leg_fillOpacity,strokeWidth:l.leg_strokeWidth,txtcol:l.leg_txtcol,title:l.leg_title?l.leg_title:l.values,fontSize:l.leg_fontSize,fontSize2:l.leg_fontSize2,breaks:ve(t.features,l).breaks,colors:ve(t.features,l).colors,missing:ve(t.features,l).missing,id:"legboxstroke_"+i},o,s),"object"!=typeof r||"typo"!=r.type&&"split"!=r.type||me(e,{x:r.leg_x,y:r.leg_y,w:r.leg_w,h:r.leg_h,stroke:r.leg_stroke,fillOpacity:r.leg_fillOpacity,strokeWidth:r.leg_strokeWidth,txtcol:r.leg_txtcol,title:r.leg_title?r.leg_title:r.values,fontSize:r.leg_fontSize,fontSize2:r.leg_fontSize2,types:ve(t.features,r).types,colors:ve(t.features,r).colors,id:"legboxfill_"+i},o,s),"object"!=typeof l||"typo"!=l.type&&"split"!=l.type||me(e,{x:l.leg_x,y:l.leg_y,w:l.leg_w,h:l.leg_h,stroke:l.leg_stroke,fillOpacity:l.leg_fillOpacity,strokeWidth:l.leg_strokeWidth,txtcol:l.leg_txtcol,title:l.leg_title?l.leg_title:l.values,fontSize:l.leg_fontSize,fontSize2:l.leg_fontSize2,types:ve(t.features,l).types,colors:ve(t.features,l).colors,id:"legboxstroke_"+i},o,s),"object"!=typeof a||null==a.values||"linear"!=a.type&&null!=a.type||function(t,e={},r=0,l=0){let a=null!=e.x?e.x:null,i=null!=e.y?e.y:null,o=e.valmax,s=e.valmin,n=e.sizemax,c=e.title?e.title:null,p=null!=e.fontSize?e.fontSize:14,d=null!=e.fontSize2?e.fontSize2:10,g=e.fill?e.fill:"none",f=e.stroke?e.stroke:"black",u=null!=e.strokeWidth?e.strokeWidth:.4,y=null!=e.fillOpacity?e.fillOpacity:1,h=e.txtcol?e.txtcol:"#363636",k=null!=e.w?e.w:75,m=null!=e.round?e.round:void 0;if(null!=a&&null!=i){let _=t.append("g").attr("class","bertinlegend").attr("class",e.id);0!=l&&_.attr("opacity",0).transition().delay(r).duration(l).attr("opacity",1);let x=0;null!=c&&(x=(c.split("\n").length+1)*p,_.append("g").selectAll("text").data(c.split("\n")).join("text").attr("x",a).attr("y",i).attr("font-size",`${p}px`).attr("dy",((t,e)=>e*p)).attr("text-anchor","start").attr("dominant-baseline","hanging").attr("fill",h).text((t=>t))),_.append("path").attr("d",`M ${a},${i+x+n/2} ${a+k},${i+x} ${a+k},${i+x+n} Z `).attr("stroke",f).attr("fill",g).attr("stroke-width",u).attr("fill-opacity",y),_.append("text").attr("font-size",`${d}px`).attr("fill",h).attr("text-anchor","start").attr("dominant-baseline","hanging").attr("x",a).attr("y",i+x+n/2+d/2).text(ge(s,m)),_.append("text").attr("font-size",`${d}px`).attr("fill",h).attr("text-anchor","end").attr("dominant-baseline","hanging").attr("x",a+k).attr("y",i+x+n+d/2).text(ge(o,m))}}(e,{x:a.leg_x,y:a.leg_y,valmax:Se(t.features,a).valmax,valmin:Se(t.features,a).valmin,sizemax:Se(t.features,a).sizemax,title:a.leg_title?a.leg_title:a.values,fontSize:a.leg_fontSize,fontSize2:a.leg_fontSize2,fill:a.stroke,fillOpacity:a.fillOpacity,txtcol:a.leg_txtcol,w:a.leg_w,round:a.leg_round,id:"legthickness_"+i},o,s),"object"==typeof a&&null!=a.values&&"discr"==a.type&&function(t,e={},r=0,l=0){let a=e.x?e.x:null,i=e.y?e.y:null,o=e.w?e.w:30,s=e.title?e.title:null,n=null!=e.fontSize?e.fontSize:14,c=null!=e.fontSize2?e.fontSize2:10,p=e.stroke?e.stroke:"black",d=null!=e.strokeOpacity?e.strokeOpacity:1,g=e.txtcol?e.txtcol:"#363636",f=e.breaks,u=e.sizes,y=void 0!==e.round?e.round:void 0;if(u=_e.reverse(u),f=_e.reverse(f),null!=a&&null!=i){let h=t.append("g").attr("class","bertinlegend").attr("class",e.id);0!=l&&h.attr("opacity",0).transition().delay(r).duration(l).attr("opacity",1);let k=0;null!=s&&(k=(s.split("\n").length+1)*n,h.append("g").selectAll("text").data(s.split("\n")).join("text").attr("x",a).attr("y",i).attr("font-size",`${n}px`).attr("dy",((t,e)=>e*n)).attr("text-anchor","start").attr("dominant-baseline","hanging").attr("fill",g).text((t=>t)));const m=10;let _=[],x=0;for(let t=0;t<u.length;t++)_.push(i+k+x+u[t]/2+t*m),x+=u[t];let b=[];x=0;for(let t=0;t<f.length;t++)b.push(i+k+x-m/2),x+=u[t]+m;h.selectAll("line").data(u).join("line").attr("x1",a).attr("y1",((t,e)=>_[e])).attr("x2",a+o).attr("y2",((t,e)=>_[e])).attr("stroke",p).attr("stroke-opacity",d).attr("stroke-width",(t=>t)),h.append("g").selectAll("text").data(f).join("text").attr("x",a+o+c/2).attr("y",((t,e)=>b[e])).attr("font-size",`${c}px`).attr("fill",g).attr("text-anchor","start").attr("dominant-baseline","central").text((t=>ge(t,y)))}}(e,{x:a.leg_x,y:a.leg_y,breaks:Se(t.features,a).breaks,sizes:Se(t.features,a).sizes,w:a.leg_w,title:a.leg_title?a.leg_title:a.values,fontSize:a.leg_fontSize,fontSize2:a.leg_fontSize2,stroke:a.stroke,strokeOpacity:a.strokeOpacity,txtcol:a.leg_txtcol,round:a.leg_round,id:"legthickness_"+i},o,s),"object"==typeof a&&null!=a.values&&"quali"==a.type&&function(t,e={},r=0,l=0){let a=e.x?e.x:null,i=e.y?e.y:null,o=e.w?e.w:30,s=e.title?e.title:null,n=e.fontSize?e.fontSize:14,c=e.fontSize2?e.fontSize2:10,p=e.stroke?e.stroke:"black",d=e.strokeOpacity?e.strokeOpacity:1,g=e.txtcol?e.txtcol:"#363636",f=e.categories,u=e.sizes;if(u=xe.reverse(u),f=xe.reverse(f),null!=a&&null!=i){let y=t.append("g").attr("class","bertinlegend").attr("class",e.id);0!=l&&y.attr("opacity",0).transition().delay(r).duration(l).attr("opacity",1);let h=0;null!=s&&(h=(s.split("\n").length+1)*n,y.append("g").selectAll("text").data(s.split("\n")).join("text").attr("x",a).attr("y",i).attr("font-size",`${n}px`).attr("dy",((t,e)=>e*n)).attr("text-anchor","start").attr("dominant-baseline","hanging").attr("fill",g).text((t=>t)));const k=10;let m=[],_=0;for(let t=0;t<u.length;t++)m.push(i+h+_+u[t]/2+t*k),_+=u[t];y.selectAll("line").data(u).join("line").attr("x1",a).attr("y1",((t,e)=>m[e])).attr("x2",a+o).attr("y2",((t,e)=>m[e])).attr("stroke",p).attr("stroke-opacity",d).attr("stroke-width",(t=>t)),y.append("g").selectAll("text").data(f).join("text").attr("x",a+o+c/2).attr("y",((t,e)=>m[e])).attr("font-size",`${c}px`).attr("fill",g).attr("text-anchor","start").attr("dominant-baseline","central").text((t=>t))}}(e,{x:a.leg_x,y:a.leg_y,categories:Se(t.features,a).categories,sizes:Se(t.features,a).sizes,w:a.leg_w,title:a.leg_title?a.leg_title:"Catégories",fontSize:a.leg_fontSize,fontSize2:a.leg_fontSize2,stroke:a.stroke,strokeOpacity:a.strokeOpacity,txtcol:a.leg_txtcol,id:"legthickness_"+i},o,s)}const we=Object.assign({},{forceX:H,forceY:Q,forceCollide:K,forceSimulation:V});function $e(t,e,r,l,a){return we.forceSimulation(t).force("x",we.forceX((t=>a(t.geometry.coordinates)[0]))).force("y",we.forceY((t=>a(t.geometry.coordinates)[1]))).force("collide",we.forceCollide((a=>l(Math.abs(a.properties[e]))+Se(t,r).getthickness(a.properties[r.values]||0)/2)))}const ze=Object.assign({},{min:D,max:P,scaleSqrt:w});const Ae=Object.assign({},{scaleSqrt:w,max:P,descending:N});function We(t,e={},r,l=0,a=0){let i=e.values,o=e.k?e.k:50,s=e.stroke?e.stroke:"black",n=e.fill?e.fill:"none",c=e.strokeWidth?e.strokeWidth:.8,p=e.txtcol?e.txtcol:"#363636",d=e.x?e.x:null,g=e.y?e.y:null,f=e.title?e.title:"Title, year\n  (units)",u=e.fontSize?e.fontSize:14,y=e.fontSize2?e.fontSize2:10,h=null!=e.round?e.round:void 0,k=null!=e.divisor?e.divisor:1,m=e.fixmax;const _=null!=m?m:Ae.max(i);let x=Ae.scaleSqrt([0,_],[0,1.77*o]),b=x(Ae.max(i));if(null!=d&&null!=g){let e=t.append("g").attr("class","bertinlegend").attr("class","legsquare_"+r);0!=a&&e.attr("opacity",0).transition().delay(l).duration(a).attr("opacity",1),e.selectAll("rect").data(i.sort(Ae.descending)).join("rect").attr("width",(t=>x(t))).attr("height",(t=>x(t))).attr("fill",n).attr("stroke",s).attr("stroke-width",c).attr("transform",(t=>`translate(${d+b-x(t)},${g-x(t)+b+(f.split("\n").length+1)*u})`)),e.selectAll("line").data(i).join("line").attr("x1",d+b).attr("y1",(t=>g+b-x(t)+(f.split("\n").length+1)*u)).attr("x2",d+b+u).attr("y2",(t=>g+b-x(t)+(f.split("\n").length+1)*u)).attr("stroke",s).attr("stroke-width",c).attr("stroke-dasharray",2),e.append("g").selectAll("text").data(f.split("\n")).join("text").attr("x",d).attr("y",g).attr("font-size",`${u}px`).attr("dy",((t,e)=>e*u)).attr("text-anchor","start").attr("dominant-baseline","hanging").attr("fill",p).text((t=>t)),e.append("g").selectAll("text").data(i).join("text").attr("x",d+b+u+y/2).attr("y",(t=>g+b-x(t)+(f.split("\n").length+1)*u)).attr("font-size",y).attr("dominant-baseline","central").attr("fill",p).text((t=>ge(t/k,h)))}}const Me=Object.assign({},{quadtree:Z,forceX:H,forceY:Q,forceCollide:K,forceSimulation:V});function Pe(t){return Me.forceSimulation(t).force("_x",Me.forceX((t=>t._x))).force("_y",Me.forceY((t=>t._y))).force("collide",function(){let t;function e(e){const r=Me.quadtree(t,(t=>t._x),(t=>t._y));for(const e of t)r.visit(((t,r,l,a,i)=>{let o=!1;if(t.data&&t.data!==e){let r,l,a,i=e._x-t.data._x,s=e._y-t.data._y,n=e._padding+(t.data._size+e._size)/2,c=e._padding+(t.data._size+e._size)/2,p=Math.abs(i),d=Math.abs(s);p<n&&d<c&&(r=Math.sqrt(i*i+s*s),l=(p-n)/r,a=(d-c)/r,Math.abs(l)>Math.abs(a)?l=0:a=0,e._x-=i*=l,e._y-=s*=a,t.data.x+=i,t.data.y+=s,o=!0)}return o}))}return e.initialize=e=>t=e,e}())}const Ne=Object.assign({},{min:D,max:P,scaleSqrt:w});const Le=Object.assign({},{symbol:tt,symbolCircle:et,symbolDiamond:rt,symbolCross:lt,symbolSquare:at,symbolStar:it,symbolTriangle:ot,symbolWye:st});function Ce(t,e={},r,l=0,a=0){let i=e.type?e.type:"box",o=e.x?e.x:null,s=e.y?e.y:null,n=null!=e.w?e.w:30,c=null!=e.h?e.h:20,p=e.title?e.title:null,d=e.text?e.text:"leg_text",g=null!=e.fontSize?e.fontSize:14,f=null!=e.fontSize2?e.fontSize2:10,u=e.stroke?e.stroke:"black",y=e.fill?e.fill:"#CCCCCC",h=null!=e.fillOpacity?e.fillOpacity:1,k=null!=e.strokeWidth?e.strokeWidth:.5,m=e.txtcol?e.txtcol:"#363636";if(null!=o&&null!=s){let _=t.append("g").attr("class","bertinlegend").attr("class","legbox_"+r);0!=a&&_.attr("opacity",0).transition().delay(l).duration(a).attr("opacity",1);let x=0;null!=p&&(x=(p.split("\n").length+1)*g,_.append("g").selectAll("text").data(p.split("\n")).join("text").attr("x",o).attr("y",s).attr("font-size",`${g}px`).attr("dy",((t,e)=>e*g)).attr("text-anchor","start").attr("dominant-baseline","hanging").attr("fill",m).text((t=>t))),"box"==i&&(_.append("rect").attr("x",o).attr("y",s+x).attr("height",c).attr("width",n).attr("fill",y).attr("stroke",u).attr("stroke-width",k).attr("fill-opacity",h),_.append("g").selectAll("text").data(d.split("\n")).join("text").attr("x",o+n+f/2).attr("y",s+c/2-f*d.split("\n").length/2+x).attr("font-size",`${f}px`).attr("dy",((t,e)=>e*f)).attr("fill",m).attr("text-anchor","start").attr("dominant-baseline","hanging").text((t=>t)));const b=new Map([["circle",Le.symbolCircle],["cross",Le.symbolCross],["diamond",Le.symbolDiamond],["square",Le.symbolSquare],["star",Le.symbolStar],["triangle",Le.symbolTriangle],["wye",Le.symbolWye]]);if(b.has(i)){const t=e.symbol_size;_.append("path").attr("x",o).attr("y",s+x).attr("d",Le.symbol().size(t).type(b.get(i))).attr("transform",`translate(${o+Math.sqrt(t)},${s+x})`).attr("fill",y).attr("stroke",u).attr("stroke-width",k).attr("fill-opacity",h),_.append("g").selectAll("text").data(d.split("\n")).join("text").attr("x",o+2*Math.sqrt(t)+f/2).attr("y",s+x).attr("font-size",`${f}px`).attr("dy",((t,e)=>e*f)).attr("fill",m).attr("text-anchor","start").attr("dominant-baseline","middle").text((t=>t))}}}const De=Object.assign({},{min:D,max:P,symbol:tt,symbolCircle:et,symbolDiamond:rt,symbolCross:lt,symbolSquare:at,symbolStar:it,symbolTriangle:ot,symbolWye:st});const Ee=Object.assign({},{descending:N,scaleLinear:A});function Je(t,e={},r,l=0,a=0){if(console.log(e),null!=e.leg_x&&null!=e.leg_y){const i=Ee.scaleLinear().domain([0,e.legval[3]]).range([0,e.k]);let o=t.append("g").attr("class","bertinlegend").attr("class","legspike_"+r);0!=a&&o.attr("opacity",0).transition().delay(l).duration(a).attr("opacity",1),null!=e.leg_title&&(e.leg_title.split("\n").length,e.leg_fontSize,o.append("g").selectAll("text").data(e.leg_title.split("\n")).join("text").attr("x",e.leg_x).attr("y",e.leg_y).attr("font-size",`${e.leg_fontSize}px`).attr("dy",((t,r)=>r*e.leg_fontSize)).attr("text-anchor","start").attr("dominant-baseline","hanging").attr("fill",e.leg_txtcol).text((t=>t))),o.append("g").selectAll("path").data(e.legval.sort(Ee.descending)).join("path").attr("d",(t=>`M ${-e.w/2},0 0,${-i(t)} ${e.w/2},0`)).attr("fill","object"==typeof e.leg_fill?"white":e.leg_fill).attr("fill-opacity",e.leg_fillOpacity).attr("stroke","object"==typeof e.leg_stroke?"black":e.leg_stroke).attr("stroke-width",1).attr("transform",((t,r)=>`translate(${e.leg_x+e.w/2+(e.w+5)*r},${e.leg_y+e.k+(e.leg_title?e.leg_title.split("\n").length+1:1)*e.leg_fontSize})`)),o.append("g").selectAll("text").data(e.legval.sort(Ee.descending)).join("text").attr("text-anchor","start").attr("dominant-baseline","middle").attr("transform",((t,r)=>`translate(${e.leg_x+e.w/2+(e.w+5)*r},${e.leg_y+e.k+(e.leg_title?e.leg_title.split("\n").length+1:1)*e.leg_fontSize+e.leg_fontSize2/2}) rotate(90)`)).attr("font-size",`${e.leg_fontSize2}px`).attr("fill",e.leg_txtcol).text((t=>ge(t,e.leg_round)))}}const qe=Object.assign({},{min:D,max:P,scaleLinear:A,geoPath:e});const Fe=Object.assign({},{geoPath:e,max:P,scaleLinear:A});function Ge({svg:t,projection:r,width:l,height:a,id:i=null,attr:o=null,value:s=null,legend:n=null,duration:c=0,delay:p=0}={}){if("visibility"==o){(s?1:0)?t.selectAll(`g.${i}, #info_${i}, g.legbox_${i}, g.legboxfill_${i}, g.legboxstroke_${i}, g.legthickness_${i}, g.legcircle_${i}, g.legsquare_${i}, g.legspike_${i}, g.legmushroom_${i}, info_${i},  g.legdotcartogram_${i}`).attr("visibility","visible").transition().delay(p).duration(c).style("opacity",1).attr("opacity",1):t.selectAll(`g.${i}, #info_${i}, g.legbox_${i}, g.legboxfill_${i}, g.legboxstroke_${i}, g.legthickness_${i}, g.legcircle_${i}, g.legsquare_${i}, g.legspike_${i}, g.legmushroom_${i}, info_${i},  g.legdotcartogram_${i}`).transition().delay(p).duration(c).style("opacity",0).attr("opacity",0).transition().attr("visibility","hidden")}else{switch(JSON.parse(t.select(`g.${i}`).attr("data-layer"))._type){case"tissot":console.log("update tissot"),function({svg:t,projection:r,id:l=null,attr:a=null,value:i=null,duration:o=0,delay:s=0}={}){let n=t.select(`g.${l}`);"step"==a?n.selectAll("path").datum(pe(i)).transition().delay(s).duration(o).attr("d",e(r)):n.transition().delay(s).duration(o).attr(ce(a),i).style(ce(a),i)}({svg:t,projection:r,id:i,attr:o,value:s,duration:c,delay:p});break;case"rhumbs":console.log("update rhumbs"),function({svg:t,id:e=null,width:r,height:l,attr:a=null,value:i=null,duration:o=0,delay:s=0}={}){let n=t.select(`g.${e}`),c=Math.max(r,l);if("nb"==a){let t=n.selectAll("polyline").nodes()[0].animatedPoints[0];n.selectAll("polyline").data(de(i)).join("polyline").transition().delay(s).duration(o).attr("points",(function(e,r){let l=t.x+Math.cos(e)*c,a=t.y+Math.sin(e)*c;return t.x+","+t.y+" "+l+","+a}))}else"position"==a?n.selectAll("polyline").data(de(n.selectAll("polyline").size())).join("polyline").transition().delay(s).duration(o).attr("points",(function(t,e){let r=i[0]+Math.cos(t)*c,l=i[1]+Math.sin(t)*c;return i[0]+","+i[1]+" "+r+","+l})):n.transition().delay(s).duration(o).attr(ce(a),i).style(ce(a),i)}({svg:t,id:i,attr:o,width:l,height:a,value:s,duration:c,delay:p});break;case"bubble":console.log("update bubble"),function({svg:t,id:e=null,attr:r=null,value:l=null,legend:a=null,projection:i,duration:o=0,delay:s=0}={}){let n=t.select(`g.${e}`),c=JSON.parse(n.attr("data-layer"));if(l="object"==typeof l&&"object"==typeof c[r]?{...c[r],...l}:l,c[r]=l,t.select(`g.${e}`).attr("data-layer",JSON.stringify(c)),"dorling"==r){let t=ze.scaleSqrt([0,c.valmax],[0,c.k]),e=n.selectAll("circle").data();if(l){const r=$e(e,c.values,c.strokeWidth,t,i);for(let t=0;t<c.iteration;t++)r.tick();n.selectAll("circle").transition().delay(s).duration(o).attr("cx",(t=>t.x)).attr("cy",(t=>t.y))}else n.selectAll("circle").transition().delay(s).duration(o).attr("cx",(t=>i(t.geometry.coordinates)[0])).attr("cy",(t=>i(t.geometry.coordinates)[1]))}else if("values"==r){let r=n.selectAll("circle").data().map((t=>+t.properties[l]));c.valmax=null!=c.fixmax?c.fixmax:ze.max(r);let p=ze.scaleSqrt([0,c.valmax],[0,c.k]);if(c.legval=[ze.min(r),p.invert(p(ze.max(r))/3),p.invert(p(ze.max(r))/1.5),ze.max(r)],t.select(`g.${e}`).attr("data-layer",JSON.stringify(c)),1==c.dorling){const t=$e(n.selectAll("circle").data(),c.values,c.strokeWidth,p,i);for(let e=0;e<c.iteration;e++)t.tick();n.selectAll("circle").transition().delay(s).duration(o).attr("cx",(t=>t.x)).attr("cy",(t=>t.y)).attr("r",(t=>p(Math.abs(t.properties[c.values]))))}else n.selectAll("circle").transition().delay(s).duration(o).attr("r",(t=>p(Math.abs(t.properties[c.values]))));t.select(`g.legcircle_${e}`).remove(),ue(t,e,{x:c.leg_x,y:c.leg_y,round:void 0!==c.leg_round?c.leg_round:void 0,divisor:c.leg_divisor,k:c.k,fixmax:c.fixmax,stroke:c.leg_stroke,fill:c.leg_fill,strokeWidth:c.leg_strokeWidth,txtcol:c.leg_txtcol,title:c.leg_title,fontSize:c.leg_fontSize,fontSize2:c.leg_fontSize2,title:a||(c.leg_title?c.leg_title:c.values),values:c.legval},s+o/2,o/2)}else if("k"==r){let r=ze.scaleSqrt([0,c.valmax],[0,c.k]);if(1==c.dorling){const t=$e(n.selectAll("circle").data(),c.values,c.strokeWidth,r,i);for(let e=0;e<c.iteration;e++)t.tick();n.selectAll("circle").transition().delay(s).duration(o).attr("cx",(t=>t.x)).attr("cy",(t=>t.y)).attr("r",(t=>r(Math.abs(t.properties[c.values]))))}else n.selectAll("circle").transition().delay(s).duration(o).attr("r",(t=>r(Math.abs(t.properties[c.values]))));t.selectAll(`g.legcircle_${e}`).remove(),ue(t,e,{x:c.leg_x,y:c.leg_y,round:void 0!==c.leg_round?c.leg_round:void 0,divisor:c.leg_divisor,k:l,fixmax:c.fixmax,stroke:c.leg_stroke,fill:c.leg_fill,strokeWidth:c.leg_strokeWidth,txtcol:c.leg_txtcol,title:c.leg_title,fontSize:c.leg_fontSize,fontSize2:c.leg_fontSize2,title:a||(c.leg_title?c.leg_title:c.values),values:c.legval},s+o/2,o/2)}else if("fill"==r||"stroke"==r)switch(t.selectAll(`g.legbox${r}_${e}`).remove(),typeof l){case"string":n.selectAll("circle").transition().delay(s).duration(o).style(r,l);break;case"object":n.selectAll("circle").transition().delay(s).duration(o).style(r,(t=>ve(n.selectAll("circle").data(),l).getcol(t.properties[l.values]))),"object"==typeof l&&je({type:"FeatureCollection",features:n.selectAll("circle").data()},t,"fill"==r?l:void 0,"stroke"==r?l:void 0,void 0,e,s,o)}else if("strokeWidth"==r){if(t.selectAll(`g.legthickness_${e}`).remove(),1==c.dorling){const t=$e(n.selectAll("circle").data(),c.values,c.strokeWidth,ze.scaleSqrt([0,c.valmax],[0,c.k]),i);for(let e=0;e<c.iteration;e++)t.tick();n.selectAll("circle").transition().delay(s).duration(o).attr("cx",(t=>t.x)).attr("cy",(t=>t.y)).style("stroke-width",(t=>Se(n.selectAll("circle").data(),l).getthickness(t.properties[l.values]||void 0))).attr("stroke-width",(t=>Se(n.selectAll("circle").data(),l).getthickness(t.properties[l.values]||void 0)))}else n.selectAll("circle").transition().delay(s).duration(o).style("stroke-width",(t=>Se(n.selectAll("circle").data(),l).getthickness(t.properties[l.values]||void 0))).attr("stroke-width",(t=>Se(n.selectAll("circle").data(),l).getthickness(t.properties[l.values]||void 0)));"object"==typeof l&&je({type:"FeatureCollection",features:n.selectAll("circle").data()},t,void 0,void 0,l,e,s,o)}}({svg:t,id:i,attr:o,width:l,height:a,value:s,legend:n,projection:r,duration:c,delay:p});break;case"square":console.log("update square"),function({svg:t,id:e=null,attr:r=null,value:l=null,legend:a=null,duration:i=0,delay:o=0}={}){let s=t.select(`g.${e}`),n=JSON.parse(s.attr("data-layer"));if(l="object"==typeof l&&"object"==typeof n[r]?{...n[r],...l}:l,n[r]=l,t.select(`g.${e}`).attr("data-layer",JSON.stringify(n)),"dorling"==r||"demers"==r)if(l){const t=Pe(s.selectAll("rect").data());for(let e=0;e<n.iteration;e++)t.tick();s.selectAll("rect").transition().delay(o).duration(i).attr("x",(t=>t._x-t._size/2)).attr("y",(t=>t._y-t._size/2))}else s.selectAll("rect").transition().delay(o).duration(i).attr("x",(t=>t.ctrx-t._size/2)).attr("y",(t=>t.ctry-t._size/2));else if("values"==r){let r=s.selectAll("rect").data().map((t=>+t[l]));n.valmax=null!=n.fixmax?n.fixmax:Ne.max(r);let c=Ne.scaleSqrt([0,n.valmax],[0,1.77*n.k]);if(n.legval=[Ne.min(r),c.invert(c(Ne.max(r))/3),c.invert(c(Ne.max(r))/1.5),Ne.max(r)],s.attr("data-layer",JSON.stringify(n)),1==n.dorling||1==n.demers){let t=s.selectAll("rect").data();t.forEach((t=>{t._size=c(Math.abs(t[n.values]))}));const e=Pe(t);for(let t=0;t<n.iteration;t++)e.tick();s.selectAll("rect").transition().delay(o).duration(i).attr("x",(t=>t._x-c(Math.abs(t[n.values]))/2)).attr("y",(t=>t._y-c(Math.abs(t[n.values]))/2)).attr("width",(t=>c(Math.abs(t[n.values])))).attr("height",(t=>c(Math.abs(t[n.values]))))}else s.selectAll("rect").transition().delay(o).duration(i).attr("x",(t=>t.ctrx-c(Math.abs(t[n.values]))/2)).attr("y",(t=>t.ctry-c(Math.abs(t[n.values]))/2)).attr("width",(t=>c(Math.abs(t[n.values])))).attr("height",(t=>c(Math.abs(t[n.values]))));t.select(`g.legsquare_${e}`).remove(),We(t,{x:n.leg_x,y:n.leg_y,round:void 0!==n.leg_round?n.leg_round:void 0,divisor:n.leg_divisor,k:n.k,fixmax:n.fixmax,stroke:n.leg_stroke,fill:n.leg_fill,strokeWidth:n.leg_strokeWidth,txtcol:n.leg_txtcol,title:n.leg_title,fontSize:n.leg_fontSize,fontSize2:n.leg_fontSize2,title:a||(n.leg_title?n.leg_title:n.values),values:n.legval},e,o+i/2,i/2)}else if("k"==r){let r=Ne.scaleSqrt([0,n.valmax],[0,1.77*n.k]);if(1==n.dorling||1==n.demers){let t=s.selectAll("rect").data();t.forEach((t=>{t._size=r(Math.abs(t[n.values])),t.x=t.ctrx,t.y=t.ctry,t._x=t.ctrx,t._y=t.ctry}));const e=Pe(t);for(let t=0;t<n.iteration;t++)e.tick();s.join(t).selectAll("rect").transition().delay(o).duration(i).attr("x",(t=>t._x-r(Math.abs(t[n.values]))/2)).attr("y",(t=>t._y-r(Math.abs(t[n.values]))/2)).attr("width",(t=>r(Math.abs(t[n.values])))).attr("height",(t=>r(Math.abs(t[n.values]))))}else s.selectAll("rect").transition().delay(o).duration(i).attr("x",(t=>t.ctrx-r(Math.abs(t[n.values]))/2)).attr("y",(t=>t.ctry-r(Math.abs(t[n.values]))/2)).attr("width",(t=>r(Math.abs(t[n.values])))).attr("height",(t=>r(Math.abs(t[n.values]))));t.select(`g.legsquare_${e}`).remove(),We(t,{x:n.leg_x,y:n.leg_y,round:void 0!==n.leg_round?n.leg_round:void 0,divisor:n.leg_divisor,k:l,fixmax:n.fixmax,stroke:n.leg_stroke,fill:n.leg_fill,strokeWidth:n.leg_strokeWidth,txtcol:n.leg_txtcol,title:n.leg_title,fontSize:n.leg_fontSize,fontSize2:n.leg_fontSize2,title:a||(n.leg_title?n.leg_title:n.values),values:n.legval},e,o+i/2,i/2)}else if("fill"==r||"stroke"==r)switch(t.selectAll(`g.legbox${r}_${e}`).remove(),typeof l){case"string":s.selectAll("rect").transition().delay(o).duration(i).style(r,l);break;case"object":s.selectAll("rect").transition().delay(o).duration(i).style(r,(t=>ve(s.selectAll("rect").data(),l).getcol(t[l.values]))),"object"==typeof l&&je({type:"FeatureCollection",features:s.selectAll("rect").data()},t,"fill"==r?l:void 0,"stroke"==r?l:void 0,void 0,e,o,i)}else if("strokeWidth"==r){t.selectAll(`g.legthickness_${e}`).remove();let r=s.selectAll("rect").data();r.map((t=>t.properties={[l.values]:+t[l.values]}));let a=Ne.scaleSqrt([0,n.valmax],[0,1.77*n.k]);if(1==n.dorling||1==n.demers){r.forEach((t=>{t.x=t.ctrx,t.y=t.ctry,t._x=t.ctrx,t._y=t.ctry,t._padding=Se(r,l).getthickness(t.properties[l.values]||0)/2+0}));const t=Pe(r);for(let e=0;e<n.iteration;e++)t.tick();s.join(r).selectAll("rect").transition().delay(o).duration(i).attr("x",(t=>t._x-a(Math.abs(t[n.values]))/2)).attr("y",(t=>t._y-a(Math.abs(t[n.values]))/2)).style("stroke-width",(t=>Se(s.selectAll("rect").data(),l).getthickness(t[l.values]||void 0))).attr("stroke-width",(t=>Se(s.selectAll("rect").data(),l).getthickness(t[l.values]||void 0)))}else s.selectAll("rect").transition().delay(o).duration(i).style("stroke-width",(t=>Se(s.selectAll("rect").data(),l).getthickness(t[l.values]||void 0))).attr("stroke-width",(t=>Se(s.selectAll("rect").data(),l).getthickness(t[l.values]||void 0)));"object"==typeof l&&je({type:"FeatureCollection",features:s.selectAll("rect").data()},t,void 0,void 0,l,e,o,i)}else s.selectAll("rect").transition().delay(o).duration(i).attr(ce(r),l).style(ce(r),l)}({svg:t,id:i,attr:o,width:l,height:a,value:s,legend:n,projection:r,duration:c,delay:p});break;case"spikes":console.log("update spike"),function({svg:t,id:e=null,attr:r=null,value:l=null,projection:a,legend:i=null,duration:o=0,delay:s=0}={}){let n=t.select(`g.${e}`),c=JSON.parse(n.attr("data-layer"));if(l="object"==typeof l&&"object"==typeof c[r]?{...c[r],...l}:l,c[r]=l,i&&(c.leg.leg_title=i),t.select(`g.${e}`).attr("data-layer",JSON.stringify(c)),"values"==r){let r=n.selectAll("path").data();r.forEach((t=>{t.coords=qe.geoPath(a).centroid(t.geometry)}));const i=qe.scaleLinear().domain([0,qe.max(r.map((t=>+t.properties[l])))]).range([0,c.k]),p=r.filter((t=>""!=t.properties[l])).map((t=>+t.properties[l])),d=[qe.min(p),i.invert(c.k/3),i.invert(c.k/1.5),qe.max(p)];c.leg.legval=d,t.select(`g.${e}`).attr("data-layer",JSON.stringify(c)),n.selectAll("path").transition().delay(s).duration(o).attr("d",(t=>`M ${-c.w/2}, 0 0, ${0-i(t.properties[c.values])} ${c.w/2}, 0`)).attr("transform",(t=>`translate(\n       ${t.coords[0]},\n       ${t.coords[1]})`)),t.select(`g.legspike_${e}`).remove(),Je(t,c.leg,e,s+o/2,o/2)}else if("k"==r){c.leg[r]=l,t.select(`g.${e}`).attr("data-layer",JSON.stringify(c)),n.selectAll("path").data().forEach((t=>{t.coords=qe.geoPath(a).centroid(t.geometry)}));const i=qe.scaleLinear().domain([0,qe.max(n.selectAll("path").data().map((t=>+t.properties[c.values])))]).range([0,l]);n.selectAll("path").transition().delay(s).duration(o).attr("d",(t=>`M ${-c.w/2}, 0 0, ${0-i(t.properties[c.values])} ${c.w/2}, 0`)).attr("transform",(t=>`translate(\n       ${t.coords[0]},\n       ${t.coords[1]})`)),t.select(`g.legspike_${e}`).remove(),Je(t,c.leg,e,s+o/2,o/2)}else if("fill"==r||"stroke"==r)switch(t.selectAll(`g.legbox${r}_${e}`).remove(),typeof l){case"string":n.selectAll("path").transition().delay(s).duration(o).style(r,l);break;case"object":n.selectAll("path").transition().delay(s).duration(o).style(r,(t=>ve(n.selectAll("path").data(),l).getcol(t.properties[l.values]))),"object"==typeof l&&je({type:"FeatureCollection",features:n.selectAll("path").data()},t,"fill"==r?l:void 0,"stroke"==r?l:void 0,void 0,e,s,o)}else"strokeWidth"==r?(t.selectAll(`g.legthickness_${e}`).remove(),n.selectAll("path").transition().delay(s).duration(o).style("stroke-width",(t=>Se(n.selectAll("path").data(),l).getthickness(t.properties[l.values]||void 0))).attr("stroke-width",(t=>Se(n.selectAll("path").data(),l).getthickness(t.properties[l.values]||void 0))),"object"==typeof l&&je({type:"FeatureCollection",features:n.selectAll("path").data()},t,void 0,void 0,l,e,s,o)):n.selectAll("path").transition().delay(s).duration(o).attr(ce(r),l).style(ce(r),l)}({svg:t,id:i,attr:o,width:l,height:a,value:s,legend:n,projection:r,duration:c,delay:p});break;case"simple":console.log("update simple"),function({svg:t,id:e=null,attr:r=null,value:l=null,legend:a=null,duration:i=0,delay:o=0}={}){let s=t.select(`g.${e}`),n=JSON.parse(s.attr("data-layer"));if(l="object"==typeof l&&"object"==typeof n[r]?{...n[r],...l}:l,n[r]=l,t.select(`g.${e}`).attr("data-layer",JSON.stringify(n)),"fill"==r||"stroke"==r)switch(t.selectAll(`g.legbox_${e}`).remove(),t.selectAll(`g.legbox${r}_${e}`).remove(),typeof l){case"string":s.selectAll("path").transition().delay(o).duration(i).style(r,l),n.leg.x>0&&n.leg.y>0&&(a&&(n.leg.text=a),n.leg[r]=l,t.select(`g.legbox_${e}`).remove(),Ce(t,n.leg,e,o,i));break;case"object":s.selectAll("path").transition().delay(o).duration(i).style(r,(t=>ve(s.selectAll("path").data(),l).getcol(t.properties[l.values]))),je({type:"FeatureCollection",features:s.selectAll("path").data()},t,"fill"==r?l:void 0,"stroke"==r?l:void 0,void 0,e,o,i)}else if("strokeWidth"==r)t.selectAll(`g.legthickness_${e}`).remove(),s.selectAll("path").transition().delay(o).duration(i).style("stroke-width",(t=>Se(s.selectAll("path").data(),l).getthickness(t.properties[l.values]||void 0))).attr("stroke-width",(t=>Se(s.selectAll("path").data(),l).getthickness(t.properties[l.values]||void 0))),"object"==typeof l&&je({type:"FeatureCollection",features:s.selectAll("path").data()},t,void 0,void 0,l,e,o,i);else if("symbol_size"==r||"symbol"==r){t.selectAll(`g.legbox_${e}`).remove();const c=new Map([["circle",De.symbolCircle],["cross",De.symbolCross],["diamond",De.symbolDiamond],["square",De.symbolSquare],["star",De.symbolStar],["triangle",De.symbolTriangle],["wye",De.symbolWye]]);"symbol_size"==r?s.selectAll("path").transition().delay(o).duration(i).attr("d",De.symbol().size(l).type(c.get(n.symbol))):(n.leg.type=l,s.selectAll("path").transition().delay(o).duration(i).attr("d",De.symbol().size(n.symbol_size).type(c.get(l)))),n.leg.x>0&&n.leg.y>0&&(a&&(n.leg.text=a),n[r]=l,n.leg[r]=l,t.select(`g.legbox_${e}`).remove(),Ce(t,n.leg,e,o,i))}else s.selectAll("path").transition().delay(o).duration(i).attr(ce(r),l).style(ce(r),l)}({svg:t,id:i,attr:o,width:l,height:a,value:s,duration:c,delay:p,legend:n});break;case"shadow":console.log("update shadow"),function({svg:t,id:e=null,attr:r=null,value:l=null,duration:a=0,delay:i=0}={}){let o=t.select(`g.${e}`),s=JSON.parse(o.attr("data-layer"));"dx"==r?o.selectAll("path").transition().delay(i).duration(a).attr("transform",`translate(${l} ${s.dy})`):"dy"==r?o.selectAll("path").transition().delay(i).duration(a).attr("transform",`translate(${s.dx} ${l})`):o.selectAll("path").transition().delay(i).duration(a).attr(ce(r),l).style(ce(r),l)}({svg:t,id:i,attr:o,value:s,duration:c,delay:p});break;case"ridge":console.log("update ridge"),function({svg:t,id:e=null,attr:r=null,value:l=null,duration:a=0,delay:i=0}={}){let o=t.select(`g.${e}`),s=JSON.parse(o.attr("data-layer"));if("k"==r){let t=Array.from(new Set(s.mygrid.map((t=>t.y)))),e=Fe.scaleLinear().domain([0,Fe.max(s.mygrid.map((t=>t.value)))]).range([0,l]),r=[];t.forEach((t=>{let l=[];s.mygrid.filter((e=>e.y==t)).forEach((t=>l.push([t.x,t.y-e(t.value)])));let a={type:"LineString",coordinates:l};r.push({type:"Feature",properties:{y:t},geometry:a})})),0==a&&0==i?o.join(r).selectAll("path").data(r).join("path").attr("d",Fe.geoPath()):o.join(r).selectAll("path").data(r).join("path").transition().delay(i).duration(a).attr("d",Fe.geoPath())}else o.selectAll("path").transition().delay(i).duration(a).attr(ce(r),l).style(ce(r),l)}({svg:t,id:i,attr:o,value:s,duration:c,delay:p,width:l});break;case"header":console.log("update header"),function({svg:t,id:e=null,attr:r=null,value:l=null,duration:a=0,delay:i=0}={}){"text"==r&&t.select(`g.${e}`).selectAll("text").transition().delay(i).duration(a/2).attr("opacity",0).transition().delay(0).duration(a/2).text(l).attr("opacity",1)}({svg:t,id:i,attr:o,value:s,duration:c,delay:p});break;case"footer":console.log("update footer"),function({svg:t,id:e=null,attr:r=null,value:l=null,duration:a=0,delay:i=0}={}){"text"==r&&t.select(`g.${e}`).selectAll("text").transition().delay(i).duration(a/2).attr("opacity",0).transition().delay(0).duration(a/2).text(l).attr("opacity",1)}({svg:t,id:i,attr:o,value:s,duration:c,delay:p});break;case"graticule":case"geolines":console.log("update default"),function({svg:t,id:e=null,attr:r=null,value:l=null,duration:a=0,delay:i=0}={}){t.select(`g.${e}`).selectAll("path").transition().delay(i).duration(a).attr(ce(r),l).style(ce(r),l)}({svg:t,id:i,attr:o,value:s,duration:c,delay:p})}}}const Be=Object.assign({},{geoPath:e,geoGraticule:d});function Ie(t){let e=[],r=-180;for(;r<=180;)e.push([r,t]),r+=2.5;return{type:"MultiLineString",coordinates:[e]}}const Re=Object.assign({},{geoPath:e});function Te(t,e,r,l={},a){if(!r){let r=null!=l.stroke?l.stroke:"#020e21";Array.isArray(r)||(r=Array(3).fill(r));let i=null!=l.strokeWidth?l.strokeWidth:[1.5,1.2,.7];Array.isArray(i)||(i=Array(3).fill(i));let o=null!=l.strokeOpacity?l.strokeOpacity:1;Array.isArray(o)||(o=Array(3).fill(o));let s=null!=l.strokeDasharray?l.strokeDasharray:["none",5,3];Array.isArray(s)||(s=Array(3).fill(s));let n=null!=l.strokeLinecap?l.strokeLinecap:"butt";Array.isArray(n)||(n=Array(3).fill(n));let c=function(){let t=[];return[["Equator",0],["Tropic of Cancer",23.43656],["Tropic of Capricorn",-23.43636],["Arctic Circle",66.56345],["Antarctic Circle",-66.56364]].forEach((e=>{t.push({type:"Feature",properties:{name:e[0],latitude:e[1]},geometry:Ie(e[1])})})),{type:"FeatureCollection",features:t}}().features,p=t.append("g").attr("class",l.id).attr("data-layer",JSON.stringify({_type:"geolines"}));p.attr("clip-path",null==a?"none":`url(#clip_${a})`),p.append("g").selectAll("path").data(c.filter((t=>"Equator"==t.properties.name))).join("path").attr("d",Re.geoPath(e)).attr("class","onglobe").attr("fill","none").attr("stroke",r[0]).attr("stroke-width",i[0]).attr("stroke-opacity",o[0]).attr("stroke-dasharray",s[0]).attr("stroke-linecap",n[0]),p.append("g").selectAll("path").data(c.filter((t=>t.properties.name.includes("Tropic")))).join("path").attr("d",Re.geoPath(e)).attr("class","onglobe").attr("fill","none").attr("stroke",r[1]).attr("stroke-width",i[1]).attr("stroke-opacity",o[1]).attr("stroke-dasharray",s[1]).attr("stroke-linecap",n[1]),p.append("g").selectAll("path").data(c.filter((t=>t.properties.name.includes("Circle")))).join("path").attr("d",Re.geoPath(e)).attr("class","onglobe").attr("fill","none").attr("stroke",r[2]).attr("stroke-width",i[2]).attr("stroke-opacity",o[2]).attr("stroke-dasharray",s[2]).attr("stroke-linecap",n[2])}}const Ye=Object.assign({},{geoPath:e});function Ue(t,e,r,l={}){if(!r){let r=l.fill?l.fill:"#add8f7",a=null!=l.fillOpacity?l.fillOpacity:1,i=l.stroke?l.stroke:"none",o=null!=l.strokeWidth?l.strokeWidth:1;t.append("g").attr("class",l.id).attr("data-layer",JSON.stringify({_type:"outline"})).attr("data-layer",void 0).append("path").attr("d",Ye.geoPath(e)({type:"Sphere"})).attr("fill",r).attr("fill-opacity",a).attr("stroke",i).attr("stroke-width",o)}}function Xe(t,e,r){const l=.33*e,a=.25*r;return t[0]<l&&t[1]<a?"bottomright":t[0]>e-l&&t[1]<a?"bottomleft":t[0]<l&&t[1]>r-a?"topright":t[0]>e-l&&t[1]>r-a?"topleft":t[1]>r-a?"top":t[0]<l?"right":t[0]>e-l?"left":"bottom"}function He(t,e){if(!e)return t.style("display","none");const r=1==Array.isArray(e.fields)?e.fields:[e.fields],l=e.fill?e.fill:"#fcf7e6",a=null!=e.strokeWidth?e.strokeWidth:1,i=null!=e.fillOpacity?e.fillOpacity:1,o=null!=e.strokeOpacity?e.strokeOpacity:1,s=e.stroke?e.stroke:"#4a4d4b",n=e.type?e.type:"bottom",c=r.length;let p=e.col?e.col:"#4d4545";Array.isArray(p)||(p=Array(c).fill(p));let d=e.fontWeight;null==d&&1==c&&(d=["bold"]),null==d&&c>1&&(d=["bold"].concat(Array(c-1).fill("normal"))),"string"==typeof d&&(d=Array(c).fill(d));let g=e.fontSize;null==g&&1==c&&(g=[18]),null==g&&c>1&&(g=[18].concat(Array(c-1).fill(12))),"number"==typeof g&&(g=Array(c).fill(g));let f=e.fontStyle;null==f&&(f=Array(c).fill("normal")),"string"==typeof f&&(f=Array(c).fill(f)),t.style("display",null).style("pointer-events","none").style("font","8px sans-serif");const u=t.selectAll("path").data([null]).join("path").attr("fill",l).attr("stroke",s).attr("stroke-width",a).attr("fill-opacity",i).attr("stroke-opacity",o),y=t.selectAll("text").data([null]).join("text").call((t=>t.selectAll("tspan").data(r).join("tspan").attr("x",0).attr("y",((t,e)=>`${g.slice(0,e+1).reduce(((t,e)=>t+e),0)+3*e}px`)).style("font-weight",((t,e)=>d[e])).style("font-size",((t,e)=>`${g[e]}px`)).style("font-style",((t,e)=>f[e])).style("fill",((t,e)=>p[e])).text((t=>t)))),{x:h,y:k,width:m,height:_}=y.node().getBBox();switch(n){case"bottom":y.attr("transform",`translate(${-m/2},${15-k})`),u.attr("d",`M${-m/2-10},5H-5l5,-5l5,5H${m/2+10}v${_+20}h-${m+20}z`);break;case"top":y.attr("transform",`translate(${-m/2},${-15-k-_})`),u.attr("d",`M${-m/2-10},-5H-5l5,5l5,-5H${m/2+10}v${-_-20}h-${m+20}z`);break;case"left":y.attr("transform",`translate(${-m-15},${-k-_/2})`),u.attr("d",`M0,0l-5,5v${_/2+5}h${-m-20}v${-_-20}h${m+20}v${_/2+5}z`);break;case"right":y.attr("transform",`translate(15,${-k-_/2})`),u.attr("d",`M0,0l5,5v${_/2+5}h${m+20}v${-_-20}h${-m-20}v${_/2+5}z`);break;case"topleft":y.attr("transform",`translate(${-m-10},${-15-k-_})`),u.attr("d",`M0,0v${-_-5-20}h${-m-20}v${_+20}h${m+15}z`);break;case"topright":y.attr("transform",`translate(10,${-15-k-_})`),u.attr("d",`M0,0v${-_-5-20}h${m+20}v${_+20}h${-m-15}z`);break;case"bottomleft":y.attr("transform",`translate(${-m-10},${15-k})`),u.attr("d",`M0,0v${+_+5+20}h${-m-20}v${-_-20}h${+m+15}z`);break;case"bottomright":y.attr("transform",`translate(10,${15-k})`),u.attr("d",`M0,0v${+_+5+20}h${m+20}v${-_-20}h${-m-15}z`)}}const Qe=Object.assign({},{select:y,pointers:u,forceX:H,forceY:Q,forceCollide:K,forceSimulation:V,geoPath:e,symbol:tt,symbolCircle:et,symbolDiamond:rt,symbolCross:lt,symbolSquare:at,symbolStar:it,symbolTriangle:ot,symbolWye:st});function Ke(t,e,r={},l,a,i){let o=["#66c2a5","#fc8d62","#8da0cb","#e78ac3","#a6d854","#ffd92f","#e5c494","#b3b3b3"],s=r.geojson,n=r.fill?r.fill:o[Math.floor(Math.random()*o.length)],c=r.strokeLinecap?r.strokeLinecap:"round",p=r.strokeLinejoin?r.strokeLinejoin:"round",d=null!=r.strokeDasharray?r.strokeDasharray:"none",g=r.stroke?r.stroke:"white",f=null!=r.strokeWidth?r.strokeWidth:.5,u=null!=r.fillOpacity?r.fillOpacity:1,y=null!=r.strokeOpacity?r.strokeOpacity:1,h=!!r.tooltip&&r.tooltip;Array.isArray(h)&&(h={fields:h}),"function"!=typeof h&&"string"!=typeof h||(h={fields:[h]});let k=r.symbol?r.symbol:"circle",m=null!=r.symbol_size?r.symbol_size:40,_=null!=r.symbol_iteration?r.symbol_iteration:200,x=null!=r.symbol_shift?r.symbol_shift:0,b=!!r.viewof,v={x:r.leg_x,y:r.leg_y,w:r.leg_w,h:r.leg_h,symbol_size:m,title:r.leg_title,text:r.leg_text,fontSize:r.leg_fontSize,fontSize2:r.leg_fontSize2,stroke:r.leg_stroke,fillOpacity:r.leg_fillOpacity?r.leg_fillOpacity:u,fill:r.leg_fill?r.leg_fill:n,strokeWidth:r.leg_strokeWidth,txtcol:r.leg_txtcol,symbol:r.symbol,symbol_size:r.symbol_size,symbol_iteration:r.symbol_iteration,symbol_shift:r.symbol_shift,viewof:r.viewof},O={},S=r.id?`info_${r.id}`:`info_${Date.now().toString(36)+Math.random().toString(36).substring(2)}`;if(t.append("g").attr("id",S).attr("class","info"),"l"==Qt(s)&&(g=r.stroke?r.stroke:o[Math.floor(Math.random()*o.length)],n=r.fill?r.fill:"none",f=r.strokeWidth?r.strokeWidth:1),"l"!=Qt(s)&&"z"!=Qt(s)||t.append("g").attr("class",r.id).attr("data-layer",JSON.stringify({_type:r._type?r._type:"simple",fill:n,stroke:g,strokeWidth:f,leg:v})).attr("clip-path",null==l?"none":`url(#clip_${l})`).selectAll("path").data(s.features).join("path").attr("d",Qe.geoPath(e)).attr("class","onglobe").attr("fill",(t=>ve(s.features,n).getcol(t.properties[n.values]))).attr("stroke",(t=>ve(s.features,g).getcol(t.properties[g.values]))).attr("stroke-width",(t=>Se(s.features,f).getthickness(t.properties[f.values]||void 0))).attr("fill-opacity",u).attr("stroke-opacity",y).attr("stroke-linecap",c).attr("stroke-linejoin",p).attr("stroke-dasharray",d).on("touchmove mousemove",(function(e,r){b&&(Qe.select(this).attr("stroke-opacity",y-.3).attr("fill-opacity",u-.3),O=r.properties,t.dispatch("input"),Object.defineProperty(t.node(),"value",{get:()=>O,configurable:!0})),h&&t.select(`#${S}`).call(He,{fields:function(){const t=h.fields;let e=[];return t.forEach((t=>{let l="";"function"==typeof t?l=[r].map(t)[0]:"string"==typeof t&&"$"==t[0]?l=`${r.properties[t.substring(1,t.length)]}`:"string"==typeof t&&(l=t),e.push(""==l?"N/A":l)})),e}(),fontWeight:h.fontWeight,fontSize:h.fontSize,fontStyle:h.fontStyle,fill:h.fill,stroke:h.stroke,strokeWidth:h.strokeWidth,fillOpacity:h.fillOpacity,strokeOpacity:h.strokeOpacity,col:h.col,type:Xe(Qe.pointers(e,this)[0],a,i)}),h&&(t.select(`#${S}`).attr("transform",`translate(${Qe.pointers(e,this)[0]})`),Qe.select(this).attr("stroke-opacity",y-.3).attr("fill-opacity",u-.3))})).on("touchend mouseleave",(function(){b&&(O={},t.dispatch("input")),t.select(`#${S}`).call(He,null),Qe.select(this).attr("stroke-opacity",y).attr("fill-opacity",u).lower()})),"p"==Qt(s)){if(v.type=r.symbol?r.symbol:"circle",x>0){const t=Qe.forceSimulation(s.features).force("x",Qe.forceX((t=>e(t.geometry.coordinates)[0]))).force("y",Qe.forceY((t=>e(t.geometry.coordinates)[1]))).force("collide",Qe.forceCollide(Math.sqrt(m)/2+x/2));for(let e=0;e<_;e++)t.tick()}s.features.forEach((t=>{t.coords=Qe.geoPath(e).centroid(t.geometry)}));const l=new Map([["circle",Qe.symbolCircle],["cross",Qe.symbolCross],["diamond",Qe.symbolDiamond],["square",Qe.symbolSquare],["star",Qe.symbolStar],["triangle",Qe.symbolTriangle],["wye",Qe.symbolWye]]);t.append("g").attr("class",r.id).attr("data-layer",JSON.stringify({_type:r._type?r._type:"simple",fill:n,stroke:g,strokeWidth:f,leg:v,symbol:k,symbol_size:m})).selectAll("path").data(s.features).join("path").attr("class","onglobe_translate").attr("d",Qe.symbol().size(m).type(l.get(k))).attr("transform",(t=>`translate(\n       ${x?t.x:t.coords[0]},\n       ${x?t.y:t.coords[1]})`)).attr("fill",(t=>ve(s.features,n).getcol(t.properties[n.values]||void 0))).attr("visibility",(t=>isNaN(t.coords[0])?"hidden":"visible")).attr("stroke",(t=>ve(s.features,g).getcol(t.properties[g.values]))).attr("stroke-width",(t=>Se(s.features,f).getthickness(t.properties[f.values]))).attr("fill-opacity",u).attr("stroke-opacity",y).attr("stroke-linecap",c).attr("stroke-linejoin",p).attr("stroke-dasharray",d).on("touchmove mousemove",(function(r,l){b&&(O=l.properties,t.dispatch("input"),Object.defineProperty(t.node(),"value",{get:()=>O,configurable:!0})),h&&t.select(`#${S}`).call(He,{fields:function(){const t=h.fields;let e=[];return t.forEach((t=>{let r="";"function"==typeof t?r=[l].map(t)[0]:"string"==typeof t&&"$"==t[0]?r=`${l.properties[t.substring(1,t.length)]}`:"string"==typeof t&&(r=t),e.push(""==r?"N/A":r)})),e}(),fontWeight:h.fontWeight,fontSize:h.fontSize,fontStyle:h.fontStyle,fill:h.fill,stroke:h.stroke,strokeWidth:h.strokeWidth,fillOpacity:h.fillOpacity,strokeOpacity:h.strokeOpacity,col:h.col,type:Xe(x?[l.x,l.y]:e(l.geometry.coordinates),a,i)}),h&&(t.select(`#${S}`).attr("transform",`translate(\n         ${x?l.x:e(l.geometry.coordinates)[0]},\n         ${x?l.y:e(l.geometry.coordinates)[1]})`),Qe.select(this).attr("stroke-opacity",y-.3).attr("fill-opacity",u-.3))})).on("touchend mouseleave",(function(){b&&(O={},t.dispatch("input")),t.select(`#${S}`).call(He,null),Qe.select(this).attr("stroke-opacity",y).attr("fill-opacity",u)}))}b&&Object.defineProperty(t.node(),"value",{get:()=>O,configurable:!0}),je(s,t,n,g,f,r.id),Ce(t,v,r.id)}const Ve=Object.assign({},{geoArea:c,geoCentroid:g,geoIdentity:n,geoPath:e});function Ze(t,e={}){if("p"===Qt(t))return t;{let r=!1!==e.largest,l=!0===e.planar,a=Ve.geoPath(Ve.geoIdentity());t=Ot(t);const i=function(t){var e={},r=0;return t.geometry.coordinates.forEach((function(t){var i={type:"Polygon",coordinates:t},o=l?a.area(i):Ve.geoArea(i);o>r&&(r=o,e=i)})),e};let o=t.features.map((t=>(t.geometry.coordinates=l?a.centroid(1==r?"Polygon"==t.geometry.type?t:i(t):t):Ve.geoCentroid(1==r?"Polygon"==t.geometry.type?t:i(t):t),t.geometry.type="Point",t)));return t.features=o,t}}function tr(t){return null!==t&&""!==t&&"boolean"!=typeof t&&isFinite(t)}const er=Object.assign({},{min:D,max:P,descending:N,scaleSqrt:w,select:y,pointers:u,geoPath:e});function rr(t,e,r,l={},a,i,o){let s,n=["#66c2a5","#fc8d62","#8da0cb","#e78ac3","#a6d854","#ffd92f","#e5c494","#b3b3b3"],c=l.geojson,p=l.values,d=null!=l.fixmax?l.fixmax:void 0,g=l.k?l.k:50,f=l.fill?l.fill:n[Math.floor(Math.random()*n.length)],u=l.stroke?l.stroke:"white",y=null!=l.strokeWidth?l.strokeWidth:.5,h=l.strokeDasharray?l.strokeDasharray:"none",k=null!=l.strokeOpacity?l.strokeOpacity:1,m=null!=l.fillOpacity?l.fillOpacity:1,_=!!l.dorling&&l.dorling,x=null!=l.iteration?l.iteration:200,b=!!l.tooltip&&l.tooltip,v=!!l.viewof;Array.isArray(b)&&(b={fields:b}),"function"!=typeof b&&"string"!=typeof b||(b={fields:[b]}),s="p"==Qt(c)?c.features:Ze(c,{planar:r}).features.filter((t=>!isNaN(t.geometry.coordinates[0])));const O=null!=d?d:er.max(s,(t=>Math.abs(+t.properties[p])));let S=er.scaleSqrt([0,O],[0,g]),j=s.map((t=>t.properties[p])).filter((t=>tr(t))).map((t=>Math.abs(t))),w=[er.min(j),S.invert(S(er.max(j))/3),S.invert(S(er.max(j))/1.5),er.max(j)];if(1==_){const t=$e(s,p,y,S,e);for(let e=0;e<x;e++)t.tick()}s.forEach((t=>{t.coords=er.geoPath(e).centroid(t.geometry)}));let $=l.id?`info_${l.id}`:`info_${Date.now().toString(36)+Math.random().toString(36).substring(2)}`;t.append("g").attr("id",$).attr("class","info");let z={};t.append("g").attr("class",l.id).attr("data-layer",JSON.stringify({_type:l._type?l._type:"bubble",valmax:O,k:g,dorling:_,iteration:x,strokeWidth:y,fill:f,stroke:u,values:p,fixmax:d,legval:w,leg_x:l.leg_x,leg_y:l.leg_y,leg_round:l.leg_round,leg_divisor:l.leg_divisor,leg_stroke:l.leg_stroke,leg_fill:l.leg_fill,leg_strokeWidth:l.leg_strokeWidth,leg_txtcol:l.leg_txtcol,leg_title:l.leg_title,leg_fontSize:l.leg_fontSize,leg_fontSize2:l.leg_fontSize2,leg_title:l.leg_title})).selectAll("circle").data(s.filter((t=>null!=t.geometry.coordinates)).filter((t=>null!=t.properties[p])).sort(((t,e)=>er.descending(Math.abs(+t.properties[p]),Math.abs(+e.properties[p]))))).join("circle").attr("class","onglobe_coords").attr("fill",(t=>ve(s,f).getcol(t.properties[f.values]))).attr("stroke",(t=>ve(s,u).getcol(t.properties[u.values]))).attr("stroke-width",(t=>Se(s,y).getthickness(t.properties[y.values]||void 0))).attr("fill-opacity",m).attr("stroke-dasharray",h).attr("stroke-opacity",k).attr("visibility",(t=>isNaN(t.coords[0])?"hidden":"visible")).attr("cx",(t=>_?t.x:t.coords[0])).attr("cy",(t=>_?t.y:t.coords[1])).attr("r",(t=>S(Math.abs(t.properties[p])))).on("touchmove mousemove",(function(e,r){v&&(er.select(this).attr("stroke-opacity",k-.3).attr("fill-opacity",m-.3),z=r.properties,t.dispatch("input"),Object.defineProperty(t.node(),"value",{get:()=>z,configurable:!0})),b&&t.select(`#${$}`).call(He,{fields:function(){const t=b.fields;let e=[];return t.forEach((t=>{let l="";"function"==typeof t?l=[r].map(t)[0]:"string"==typeof t&&"$"==t[0]?l=`${r.properties[t.substring(1,t.length)]}`:"string"==typeof t&&(l=t),e.push(""==l?"N/A":l)})),e}(),fontWeight:b.fontWeight,fontSize:b.fontSize,fontStyle:b.fontStyle,fill:b.fill,stroke:b.stroke,strokeWidth:b.strokeWidth,fillOpacity:b.fillOpacity,strokeOpacity:b.strokeOpacity,col:b.col,type:Xe(er.pointers(e,this)[0],i,o)}),b&&(t.select(`#${$}`).attr("transform",`translate(${er.pointers(e,this)[0]})`),er.select(this).attr("stroke-opacity",k-.3).attr("fill-opacity",m-.3))})).on("touchend mouseleave",(function(){v&&(z={},t.dispatch("input")),t.select(`#${$}`).call(He,null),er.select(this).attr("stroke-opacity",k).attr("fill-opacity",m)})),v&&Object.defineProperty(t.node(),"value",{get:()=>z,configurable:!0}),je(c,t,f,u,y,l.id),ue(t,l.id,{x:l.leg_x,y:l.leg_y,round:void 0!==l.leg_round?l.leg_round:void 0,divisor:l.leg_divisor,k:g,fixmax:d,stroke:l.leg_stroke,fill:l.leg_fill,strokeWidth:l.leg_strokeWidth,txtcol:l.leg_txtcol,title:l.leg_title,fontSize:l.leg_fontSize,fontSize2:l.leg_fontSize2,title:l.leg_title?l.leg_title:p,values:w})}const lr=Object.assign({},{min:D,max:P,descending:N,scaleSqrt:w,select:y,pointers:u});function ar(t,e,r,l={},a,i,o){let s,n=["#66c2a5","#fc8d62","#8da0cb","#e78ac3","#a6d854","#ffd92f","#e5c494","#b3b3b3"],c=l.geojson,p=l.values,d=null!=l.fixmax?l.fixmax:void 0,g=l.k?l.k:50,f=l.fill?l.fill:n[Math.floor(Math.random()*n.length)],u=l.stroke?l.stroke:"white",y=null!=l.strokeWidth?l.strokeWidth:.5,h=l.strokeDasharray?l.strokeDasharray:"none",k=null!=l.strokeOpacity?l.strokeOpacity:1,m=null!=l.fillOpacity?l.fillOpacity:1,_=!!l.dorling&&l.dorling,x=!!l.demers&&l.demers,b=null!=l.iteration?l.iteration:200,v=!!l.viewof,O=!!l.tooltip&&l.tooltip;Array.isArray(O)&&(O={fields:O}),"function"!=typeof O&&"string"!=typeof O||(O={fields:[O]}),s="p"==Qt(c)?c.features:Ze(c,{planar:r}).features;const S=null!=d?d:lr.max(s,(t=>Math.abs(+t.properties[p])));let j=lr.scaleSqrt([0,S],[0,1.77*g]),w=[...s].map((t=>Object.assign(t.properties,{ctrx:e(t.geometry.coordinates)[0],ctry:e(t.geometry.coordinates)[1],_x:e(t.geometry.coordinates)[0],_y:e(t.geometry.coordinates)[1],_size:j(Math.abs(t.properties[p])),_padding:Se(s,y).getthickness(t.properties[y.values]||0)/2+0}))).filter((t=>!isNaN(t._x))).filter((t=>!isNaN(t._y))).filter((t=>null!=t[p])),$=s.map((t=>t.properties[p])).filter((t=>tr(t))).map((t=>Math.abs(t))),z=[lr.min($),j.invert(j(lr.max($))/3),j.invert(j(lr.max($))/1.5),lr.max($)];if(1==_||1==x){const t=Pe(w);for(let e=0;e<b;e++)t.tick()}let A=l.id?`info_${l.id}`:`info_${Date.now().toString(36)+Math.random().toString(36).substring(2)}`;t.append("g").attr("id",A).attr("class","info");let W={};t.append("g").attr("class",l.id).attr("data-layer",JSON.stringify({_type:l._type?l._type:"square",valmax:S,k:g,demers:x,dorling:_,iteration:b,strokeWidth:y,fill:f,stroke:u,values:p,fixmax:d,legval:z,leg_x:l.leg_x,leg_y:l.leg_y,leg_round:l.leg_round,leg_divisor:l.leg_divisor,leg_stroke:l.leg_stroke,leg_fill:l.leg_fill,leg_strokeWidth:l.leg_strokeWidth,leg_txtcol:l.leg_txtcol,leg_title:l.leg_title,leg_fontSize:l.leg_fontSize,leg_fontSize2:l.leg_fontSize2,leg_title:l.leg_title})).selectAll("squares").data(w.sort(((t,e)=>lr.descending(Math.abs(+t[p]),Math.abs(+e[p]))))).join("rect").attr("class","onglobe_coords").attr("fill",(t=>ve(w,f).getcol(t[f.values]))).attr("stroke",(t=>ve(w,u).getcol(t[u.values]))).attr("stroke-width",(t=>Se(w,y).getthickness(t[y.values]||void 0))).attr("fill-opacity",m).attr("stroke-dasharray",h).attr("stroke-opacity",k).attr("x",(t=>t._x-t._size/2)).attr("y",(t=>t._y-t._size/2)).attr("width",(t=>t._size)).attr("height",(t=>t._size)).on("touchmove mousemove",(function(e,r){v&&(lr.select(this).attr("stroke-opacity",k-.3).attr("fill-opacity",m-.3),W=r,t.dispatch("input"),Object.defineProperty(t.node(),"value",{get:()=>W,configurable:!0})),O&&(r.properties=r,t.select(`#${A}`).call(He,{fields:function(){const t=O.fields;let e=[];return t.forEach((t=>{let l="";"function"==typeof t?l=[r].map(t)[0]:"string"==typeof t&&"$"==t[0]?l=`${r.properties[t.substring(1,t.length)]}`:"string"==typeof t&&(l=t),e.push(""==l?"N/A":l)})),e}(),fontWeight:O.fontWeight,fontSize:O.fontSize,fontStyle:O.fontStyle,fill:O.fill,stroke:O.stroke,strokeWidth:O.strokeWidth,fillOpacity:O.fillOpacity,strokeOpacity:O.strokeOpacity,col:O.col,type:Xe(lr.pointers(e,this)[0],i,o)})),O&&(t.select(`#${A}`).attr("transform",`translate(${lr.pointers(e,this)[0]})`),lr.select(this).attr("stroke-opacity",k-.3).attr("fill-opacity",m-.3))})).on("touchend mouseleave",(function(){v&&(W={},t.dispatch("input")),t.select(`#${A}`).call(He,null),lr.select(this).attr("stroke-opacity",k).attr("fill-opacity",m)})),v&&Object.defineProperty(t.node(),"value",{get:()=>W,configurable:!0}),je(c,t,f,u,y,l.id),We(t,{x:l.leg_x,y:l.leg_y,round:void 0!==l.leg_round?l.leg_round:void 0,divisor:l.leg_divisor,k:g,fixmax:d,stroke:l.leg_stroke,fill:l.leg_fill,strokeWidth:l.leg_strokeWidth,txtcol:l.leg_txtcol,title:l.leg_title,fontSize:l.leg_fontSize,fontSize2:l.leg_fontSize2,title:l.leg_title?l.leg_title:p,values:z},l.id)}const ir=Object.assign({},{booleanPointInPolygon:nt,intersect:pt,bbox:ct}),or=Object.assign({},{geoProject:O,range:E,rollup:J,ascending:q,blur2:F,sum:G,mean:B,flatGroup:I,geoPath:e});function sr({geojson:t,values:e=null,projection:r,width:l,height:a,step:i=20,output:o="dots",blur:s=0,keep:n=!1,operator:c="sum",geoprocessing:p="intersection"}={}){let d,g=function(t,e,r){let l=or.range(0+t/2,e,t),a=or.range(0+t/2,r,t).reverse();return{dots:l.map(((t,e)=>a.map((e=>[t,e])))).flat(),squares:l.map(((e,r)=>a.map((r=>[[e-t/2,r-t/2],[e+t/2,r-t/2],[e+t/2,r+t/2],[e-t/2,r+t/2],[e-t/2,r-t/2]])))).flat(),width:a.length,height:l.length}}(i,l,a),f=function(t){let e=!1;Array.isArray(t)&&2==t.length&&(e=!0);return e}(e),u=function(t,e){let r;r=null===e||null==e||Array.isArray(e)?null!==e&&Array.isArray(e)&&1==e.length?new Map(t.features.map(((t,r)=>[r,+t.properties[e[0]]]))):null!==e&&Array.isArray(e)&&2==e.length?[new Map(t.features.map(((t,r)=>[r,+t.properties[e[0]]]))),new Map(t.features.map(((t,r)=>[r,+t.properties[e[1]]])))]:new Map(t.features.map(((t,e)=>[e,1]))):new Map(t.features.map(((t,r)=>[r,+t.properties[e]])));return r}(t,e);return"p"==Qt(t)&&(d=function(t,e,r,l,a,i){let o=or.geoProject(t,l);o=o.features.map(((t,e)=>[e,t.geometry.coordinates]));let s=[];return e.squares.forEach((t=>{let e=[],l=[],n=[];o.forEach((i=>{ir.booleanPointInPolygon({type:"Point",coordinates:i[1]},{type:"Polygon",coordinates:[t]})&&(a?(l.push(r[0].get(i[0])),n.push(r[1].get(i[0]))):e.push(r.get(i[0])))})),a?s.push(or.sum(l)/or.sum(n)):"sum"==i?s.push(or.sum(e)):s.push(or.mean(e))})),s.map((t=>void 0===t?0:t))}(t,g,u,r,f,c)),"z"==Qt(t)&&("dotinpoly"==p&&(d=function(t,e,r,l,a,i){const o=or.geoProject(t,l);o.features.map((t=>or.geoPath().area(t)));let s=[];e.dots.forEach(((t,e)=>{for(let r=0;r<o.features.length;r++)ir.booleanPointInPolygon({type:"Point",coordinates:t},o.features[r])&&(s.push([e,r]),r=o.features.length)}));let n=or.rollup(s,(t=>t.length),(t=>t[1]));s=s.map((t=>{if("sum"==i){let e=null!=n.get(t[1])?n.get(t[1]):1;return a?[t[0],r[0].get(t[1])/e/(r[1].get(t[1])/e)]:[t[0],r.get(t[1])/e]}if(a){let e=null!=n.get(t[1])?n.get(t[1]):1;return[t[0],r[0].get(t[1])/e/(r[1].get(t[1])/e)]}return[t[0],r.get(t[1])]}));let c=new Map(s),p=e.dots.map(((t,e)=>c.get(e))).map((t=>void 0===t||isNaN(t)?0:t));return p}(t,g,u,r,f,c)),"intersection"==p&&(d=function(t,e,r,l,a,i,o){const s=or.geoProject(t,a),n=s.features.map((t=>or.geoPath().area(t))),c=r*r,p=new dt;p.load(s.features.map(((t,e)=>{const r=nr(t);return r.ix=e,r})));let d=[];e.squares.forEach(((t,e)=>{const r={type:"Polygon",coordinates:[t]};p.search(nr(r)).forEach((t=>{const l=t.ix,a=s.features[l];let i=ir.intersect(a,r);if(null!==i){let t=or.geoPath().area(i),r=n[l];d.push({id_square:e,id_poly:l,area_piece:t,area_poly:r,share:t/r,share2:t/c,feature:i})}}))}));let g=or.flatGroup(d,(t=>t.id_square)),f=[];if(i)g.forEach((t=>{f.push([t[0],or.sum(t[1].map((t=>t.share*l[0].get(t.id_poly))))/or.sum(t[1].map((t=>t.share*l[1].get(t.id_poly))))])}));else{let t="sum"==o?"share":"share2";g.forEach((e=>{f.push([e[0],or.sum(e[1].map((e=>e[t]*l.get(e.id_poly))))])}))}let u=new Map(f),y=e.dots.map(((t,e)=>u.get(e))).map((t=>void 0===t?0:t));return y}(t,g,i,u,r,f,c))),s>0&&(d=function(t,e,r,l){return or.blur2({data:t.map((t=>void 0===t?0:t)),width:r,height:l},e).data}(d,s,g.width,g.height)),function(t,e,r,l){let a=[];"dots"!=r&&"dot"!=r||e.dots.forEach(((e,r)=>{a.push({type:"Feature",properties:{id:r,value:t[r]},geometry:{type:"Point",coordinates:e}})}));"squares"!=r&&"square"!=r||e.squares.forEach(((e,r)=>{a.push({type:"Feature",properties:{id:r,value:t[r]},geometry:{type:"Polygon",coordinates:[e]}})}));return 1==l?{type:"FeatureCollection",features:a.sort(((t,e)=>or.ascending(t.properties.value,e.properties.value)))}:{type:"FeatureCollection",features:a.filter((t=>t.properties.value>0)).sort(((t,e)=>or.ascending(t.properties.value,e.properties.value)))}}(d,g,o,n)}const nr=t=>{const e=ir.bbox(t);return{minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]}};const cr=Object.assign({},{geoPath:e,max:P,scaleLinear:A,ascending:q,select:y});const pr=Object.assign({},{create:h});function dr(t,e,r,l={},a){let i=l.style?l.style:"fit",o=l.margin?l.margin:0,s=l.d,n=l.rotate?l.rotate:0,c=l.fill?l.fill:"#4a4a4a",p=l.strokeLinecap?l.strokeLinecap:"round",d=l.strokeLinejoin?l.strokeLinejoin:"round",g=null!=l.strokeDasharray?l.strokeDasharray:"none",f=l.stroke?l.stroke:"#2e2e2e",u=null!=l.strokeWidth?l.strokeWidth:1,y=null!=l.fillOpacity?l.fillOpacity:1,h=null!=l.strokeOpacity?l.strokeOpacity:1,k=l.x?l.x:0,m=l.y?l.y:0,_=l.scale?l.scale:1,x=t.append("path").attr("d",s),b=function(t){const e=t.clone(!0),r=pr.create("svg");r.node().appendChild(e.node()),document.body.appendChild(r.node());const{x:l,y:a,width:i,height:o}=e.node().getBBox();document.body.removeChild(r.node());let s={x:l,y:a,width:i,height:o};return s}(x);x.remove(),Array.isArray(o)||(o=[o,o,o,o]);let v=t.append("g").attr("class",l.id).attr("data-layer",JSON.stringify({_type:"path"}));if("fit"==i&&v.append("path").attr("fill",c).attr("fill-opacity",y).attr("stroke-opacity",h).attr("stroke",f).attr("stroke-width",u).attr("stroke-linecap",p).attr("stroke-linejoin",d).attr("stroke-dasharray",g).attr("d",s).attr("transform",`translate(${k-b.x*_+o[3]},${m-b.y*_+o[0]})  scale(${_}) rotate(${n} ${b.x+b.width/2} ${b.y+b.height/2})`),"raw"==i&&v.append("path").attr("fill",c).attr("fill-opacity",y).attr("stroke-opacity",h).attr("stroke",f).attr("stroke-width",u).attr("stroke-linecap",p).attr("stroke-linejoin",d).attr("stroke-dasharray",g).attr("d",s).attr("transform",`translate(${k},${m}) scale(${_}) rotate(${n} ${b.x+b.width/2} ${b.y+b.height/2} )`),"repeat"==i){let t=e/(b.width*_+o[1]+o[3]),l=r/(b.height*_+o[0]+o[2]),i=v.attr("clip-path",null==a?"none":`url(#clip_${a})`);for(let e=0;e<=t;e++)for(let t=0;t<=l;t++)i.append("path").attr("fill",c).attr("fill-opacity",y).attr("stroke-opacity",h).attr("stroke",f).attr("stroke-width",u).attr("stroke-linecap",p).attr("stroke-linejoin",d).attr("stroke-dasharray",g).attr("d",s).attr("transform",`translate(${k+o[3]-b.x*_+e*(b.width*_+o[1]+o[3])},${m+o[0]-b.y*_+t*(b.height*_+o[0]+o[2])})  scale(${_}) rotate(${n} ${b.x+b.width/2} ${b.y+b.height/2})`)}}const gr=Object.assign({},T,{sum:G,contourDensity:gt,geoIdentity:n,geoPath:e,scaleSequentialQuantile:W});function fr(t={}){let e=t.geojson,r=t.values,l=t.nb?t.nb:1e3,a=t.projection,i=[];if(null==r)e.features.forEach((t=>{i.push(a(t.geometry.coordinates))}));else{let t,o=1;t=gr.sum(e.features.map((t=>t.properties[r]))),t>l&&(o=t/l),e.features.forEach((t=>{let e=a(t.geometry.coordinates),l=Math.round(t.properties[r]/o);for(let t=0;t<=l;t++)i.push(e)}))}return i}const ur=Object.assign({},{descending:N,max:P,scaleSqrt:w,select:y,pointers:u});const yr=Object.assign({},{geoPath:e});function hr(t){return 180*(t/6371.0088%(2*Math.PI))/Math.PI}const kr=Object.assign({},{GeoJSONReader:ft,GeoJSONWriter:ut,BufferOp:ht});function mr(t,e={}){let r=e.step?e.step:8,l=!1!==e.wgs84,a=0;switch(typeof e.dist){case"number":a=l?hr(e.dist):e.dist;break;case"string":a=e.dist;break;default:a=0}let i=(new kr.GeoJSONReader).read(Ot(t)),o=[];return i.features.forEach((t=>{let e=0;e="number"==typeof a?a:l?hr(t.properties[a]):t.properties[a];let i=(new kr.GeoJSONWriter).write(kr.BufferOp.bufferOp(t.geometry,e,r));0!==i.coordinates[0].length&&o.push({type:"Feature",properties:t.properties,geometry:i})})),o={type:"FeatureCollection",features:o},e.merge&&(o=xr(o)),o}const _r=Object.assign({},{GeoJSONReader:ft,GeoJSONWriter:ut,UnionOp:yt});function xr(t,e={}){let r=(new _r.GeoJSONReader).read(mr(t));if(null!=e.id&&null!=e.id){let t=Array.from(new Set(r.features.map((t=>t.properties[e.id])))),l=[];return t.forEach((t=>{let a=r.features.filter((r=>r.properties[e.id]==t)),i=a[0].geometry;for(let t=1;t<a.length;t++)i=_r.UnionOp.union(i,a[t].geometry);l.push({type:"Feature",properties:{id:t},geometry:(new _r.GeoJSONWriter).write(i)})})),{type:"FeatureCollection",features:l}}{let t=r.features[0].geometry;for(let e=1;e<r.features.length;e++)t=_r.UnionOp.union(t,r.features[e].geometry);return{type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:(new _r.GeoJSONWriter).write(t)}]}}}const br=Object.assign({},{geoPath:e});const vr=Object.assign({},{scaleLinear:A,geoPath:e,geoProject:O});const Or=Object.assign({},{geoPath:e});const Sr=Object.assign({},kt);function jr(t,e,r,l={}){let a,i,o,s,n,c,p=l.position?l.position:"topright",d=l.text?l.text:"Your text here!",g=l.fontSize?l.fontSize:15,f=l.fontFamily?l.fontFamily:"Roboto",u=l.margin?l.margin:0,y=l.textDecoration?l.textDecoration:"none",h=l.fontWeight?l.fontWeight:"normal",k=l.fontStyle?l.fontStyle:"normal",m=l.anchor?l.anchor:"start",_=l.baseline?l.baseline:"baseline",x=l.fill?l.fill:"#474342",b=l.stroke?l.stroke:"none",v=l.frame_fill?l.frame_fill:"none",O=l.frame_stroke?l.frame_stroke:"none",S=l.strokeWidth?l.strokeWidth:1,j=l.frame_opacity?l.frame_opacity:1;switch(p){case"topleft":m="start",_="hanging",a=5,i=5;break;case"topright":m="end",_="hanging",a=e-5,i=5;break;case"top":m="middle",_="hanging",a=e/2,i=5;break;case"left":m="start",_="middle",a=5,i=r/2;break;case"middle":m="middle",_="middle",a=e/2,i=r/2;break;case"right":m="end",_="middle",a=e-5,i=r/2;break;case"bottomleft":m="start",_="baseline",a=5,i=r-5;break;case"bottom":m="middle",_="baseline",a=e/2,i=r-5;break;case"bottomright":m="end",_="baseline",a=e-5,i=r-5;break;default:a=p[0],i=p[1]}let w=d.split("\n"),$=[];w.forEach((t=>$.push(t.length)));let z=$.indexOf(Math.max(...$)),A=t.append("text").attr("font-size",`${g}px`).attr("font-family",f).attr("font-style",k).attr("text-decoration",y).attr("font-weight",h).text(w[z]);t.node().appendChild(A.node()),document.body.appendChild(t.node());const W=A.node().getBBox().width;document.body.removeChild(t.node()),A.remove();let M=g*$.length;"hanging"==_&&(n=0,s=u),"middle"==_&&(n=g*w.length/2,s=0),"baseline"==_&&(n=g*w.length,s=-u),"start"==m&&(c=0,o=u),"middle"==m&&(c=W/2,o=0),"end"==m&&(c=W,o=-u);let P=t.append("g").attr("class",l.id).attr("data-layer",JSON.stringify({_type:"text"}));P.append("rect").attr("x",a-u-c+o).attr("y",i-u-n+s).attr("height",M+2*u).attr("width",W+2*u).attr("fill",v).attr("stroke-width",S).attr("fill-opacity",j).attr("stroke",O),P.selectAll("text").data(w).join("text").attr("x",a+o).attr("y",i-+n+s).attr("font-size",`${g}px`).attr("font-style",k).attr("text-decoration",y).attr("font-weight",h).attr("font-family",f).attr("dy",((t,e)=>e*g)).attr("text-anchor",m).attr("dominant-baseline","hanging").attr("fill",x).attr("stroke",b).text((t=>t))}const wr=Object.assign({},{select:y,pointers:u,min:D,max:P,descending:N,scaleLinear:A,geoPath:e});const $r=Object.assign({},{sum:G,select:y,pointers:u,forceX:H,forceY:Q,forceCollide:K,forceSimulation:V});function zr(t,e,r){let l=[];t.features.forEach((t=>{l.push(function(t,e,r){let l=[],a=0,i=0;const o=Math.round(+t.properties[e]/r),s=ct(t);for(;a<o&&i<10*o;){const e=mt(s),r={type:"Feature",properties:t.properties,geometry:{type:"Point",coordinates:e}};nt(r,t)&&(l.push(r),a++),i++}return JSON.parse(JSON.stringify(l))}(t,e,r))}));const a=Object.keys(t).filter((t=>"features"!=t)),i={};return a.forEach((e=>{i[e]=t[e]})),i.features=l.flat(),i}const Ar=Object.assign({},{sum:G});const Wr=Object.assign({},{tile:_t,geoPath:e});const Mr=Object.assign({},{geoPath:e,geoArea:c});const Pr={type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:{type:"MultiPolygon",coordinates:[[[[9.8,1],[4.41,6.36],[-7.54,4.35],[-16.73,12.33],[-17.01,21.2],[-5.91,35.81],[11.31,37],[10.33,33.7],[19.06,30.27],[21.61,32.93],[34.48,31.58],[36.02,36.93],[27.67,36.66],[26.74,40.4],[41.5,42.64],[31.19,46.63],[22.57,40.05],[13.71,45.59],[15.61,40.07],[3.94,43.53],[-2.13,36.74],[-9,37.02],[-9.29,42.92],[-1.79,43.39],[-1.37,48.66],[9.44,54.81],[21.04,55.3],[21.85,65.54],[13.28,55.35],[7.42,62.6],[18.6,70.1],[27.77,71.19],[41.02,67.7],[34.77,64.56],[66.93,71.3],[102.03,77.22],[111.14,76.75],[106.36,73.19],[124.38,73.81],[130.57,70.96],[141.55,72.77],[160.54,69.36],[179.95,68.97],[179.61,62.71],[163.39,59.62],[156.72,50.89],[155.55,55.28],[164.03,61.35],[146.33,59.71],[135.22,54.89],[141.53,53.18],[140.17,48.45],[126.67,37.83],[117.76,39.11],[121.63,28.54],[116.49,22.94],[106.79,21.01],[109.44,14.1],[104.89,9.85],[91.62,22.54],[80.26,15.67],[76.54,8.94],[70.98,20.71],[66.25,25.47],[57.33,25.78],[47.95,29.99],[51.22,24.63],[56.08,26.11],[57.84,19.02],[43.95,12.6],[35.22,28.05],[39.72,15.26],[44.27,10.46],[51.29,11.83],[47.95,4.46],[40.17,-2.76],[39.86,-16.43],[27.1,-33.53],[19.95,-34.81],[11.85,-18.14],[13.64,-12.25],[9.8,1]],[[27.64,58],[27.64,58]],[[5.07,52.92],[5.07,52.92]],[[133.26,45.54],[133.26,45.54]],[[57.64,42.15],[57.64,42.15]],[[60.06,44.85],[60.06,44.85]],[[34.86,-13.51],[34.86,-13.51]],[[29.21,-3.33],[29.21,-3.33]],[[34,.25],[34,.25]],[[48.87,38.43],[54.01,36.82],[50.3,44.66],[48.87,38.43]]],[[[8.72,3.8],[8.72,3.8]]],[[[179.08,-8.36],[179.08,-8.36]]],[[[179.18,-8],[179.18,-8]]],[[[73.71,4.23],[73.71,4.23]]],[[[73.41,5.19],[73.41,5.19]]],[[[73.37,3.53],[73.37,3.53]]],[[[-61.77,17.13],[-61.77,17.13]]],[[[50.42,26.6],[50.42,26.6]]],[[[-78.15,25.26],[-78.15,25.26]]],[[[-77.25,25.13],[-77.25,25.13]]],[[[-59.53,13.06],[-59.53,13.06]]],[[[43.87,-12.2],[43.87,-12.2]]],[[[-23.9,15.8],[-23.9,15.8]]],[[[-61.45,15.56],[-61.45,15.56]]],[[[11.95,55.99],[11.95,55.99]]],[[[-16.13,28.6],[-16.13,28.6]]],[[[3.2,39.88],[3.2,39.88]]],[[[-7.41,62.14],[-7.41,62.14]]],[[[158.06,6.98],[158.06,6.98]]],[[[-2.51,49.41],[-2.51,49.41]]],[[[-61.56,12.03],[-61.56,12.03]]],[[[-4.6,54.09],[-4.6,54.09]]],[[[15.66,38.42],[15.66,38.42]]],[[[9.12,41.24],[9.12,41.24]]],[[[-2.12,49.26],[-2.12,49.26]]],[[[-158.96,2.2],[-158.96,2.2]]],[[[-62.67,17.34],[-62.67,17.34]]],[[[-60.95,13.71],[-60.95,13.71]]],[[[171.05,7.14],[171.05,7.14]]],[[[14.55,35.76],[14.55,35.76]]],[[[57.71,-20.1],[57.71,-20.1]]],[[[167.02,-.55],[167.02,-.55]]],[[[134.66,7.59],[134.66,7.59]]],[[[104.28,1.37],[104.28,1.37]]],[[[6.69,.07],[6.69,.07]]],[[[55.49,-4.52],[55.49,-4.52]]],[[[-175.25,-20.99],[-175.25,-20.99]]],[[[-61.2,13.1],[-61.2,13.1]]],[[[-172.27,-13.44],[-172.27,-13.44]]],[[[-53.38,-33.74],[-64.89,-40.71],[-65.97,-48.05],[-71.03,-53.81],[-75.43,-47.25],[-72.46,-41.99],[-70.39,-18.34],[-81.1,-6.07],[-77.34,6.54],[-94.85,16.43],[-103.5,18.33],[-123.73,38.92],[-122.21,47.99],[-134.24,58.21],[-151.57,60.99],[-156.55,56.98],[-166.37,63.1],[-166.55,68.36],[-156.82,71.31],[-135.87,68.91],[-127.84,70.24],[-113.86,67.7],[-96.46,67.47],[-96.88,71.01],[-81.24,67.46],[-92.45,62.79],[-92.42,57.35],[-79.77,54.65],[-77.49,62.59],[-67.03,58.18],[-64.07,60.45],[-55.81,53.33],[-66.41,50.26],[-64.51,46.24],[-73.65,41],[-76.07,35.38],[-84.02,30.11],[-97.55,27.01],[-95.75,18.77],[-86.83,21.43],[-88.69,15.84],[-83.13,15],[-82.25,9.01],[-62.62,9.74],[-52.99,5.46],[-50.4,-.07],[-35.51,-5.14],[-42.06,-22.95],[-48.58,-25.87],[-53.38,-33.74]],[[-79.06,43.28],[-79.06,43.28]],[[-82.64,42.56],[-82.64,42.56]],[[-89.58,48],[-89.58,48]],[[-69.37,-15.52],[-69.37,-15.52]],[[-84.11,46.35],[-84.11,46.35]]],[[[9.44,42.77],[9.44,42.77]]],[[[-61.9,16.22],[-61.9,16.22]]],[[[-60.6,14.51],[-60.6,14.51]]],[[[55.75,-20.58],[55.75,-20.58]]],[[[143.1,54.4],[143.1,54.4]]],[[[-179.96,65.13],[-179.94,68.93],[-170.01,66.09],[-179.96,65.13]]],[[[50.59,69.33],[50.59,69.33]]],[[[-179.92,70.99],[-179.92,70.99]]],[[[143.02,74.29],[143.02,74.29]]],[[[146.73,75.49],[146.73,75.49]]],[[[139.11,76.1],[139.11,76.1]]],[[[67.15,76.1],[67.15,76.1]]],[[[102.93,79.28],[102.93,79.28]]],[[[97.77,80.13],[97.77,80.13]]],[[[48.83,80.81],[48.83,80.81]]],[[[96.49,81.64],[96.49,81.64]]],[[[-68.63,-52.64],[-68.63,-52.64]]],[[[180,-90],[-180,-90],[-180,-84.35],[-157.56,-83.39],[-149.08,-79.48],[-157.93,-77.06],[-133.87,-74.93],[-98.4,-75.24],[-102.72,-73],[-77.24,-73.81],[-67.51,-72.83],[-64.78,-67.02],[-59.9,-72.99],[-63.16,-75.41],[-80.3,-78.85],[-61.85,-83.37],[-29.76,-80.18],[-33.72,-77.31],[-18.87,-75.25],[-9.45,-71.1],[26.45,-71.03],[50.32,-66.39],[69.56,-67.74],[67,-72.9],[84.96,-67.08],[113.2,-65.77],[130.73,-66.15],[167.7,-70.79],[162.19,-75.39],[166.09,-78.57],[160.13,-81.2],[180,-84.35],[180,-90]]],[[[-60.07,-79.69],[-60.07,-79.69]]],[[[-160.29,-79.27],[-160.29,-79.27]]],[[[-66.83,-78.44],[-66.83,-78.44]]],[[[-45.35,-78.69],[-45.35,-78.69]]],[[[-121.2,-73.5],[-121.2,-73.5]]],[[[-126.08,-73.3],[-126.08,-73.3]]],[[[-73.93,-72.46],[-73.93,-72.46]]],[[[-96.74,-71.63],[-96.74,-71.63]]],[[[-70.02,-69.19],[-70.02,-69.19]]],[[[144.4,-40.46],[144.4,-40.46]]],[[[137.56,-35.64],[137.56,-35.64]]],[[[130.24,-11.09],[130.24,-11.09]]],[[[142.55,-10.71],[146.28,-18.87],[153.21,-25.93],[150.01,-37.7],[140.36,-37.88],[131.18,-31.48],[115.12,-34.36],[113.65,-22.58],[130.99,-12.24],[140,-17.71],[142.55,-10.71]]],[[[109.65,2.08],[116.78,7.03],[115.97,-3.61],[109.65,2.08]]],[[[-66.84,-55.18],[-66.84,-55.18]]],[[[-73.17,-53.52],[-73.17,-53.52]]],[[[-74.68,-50],[-74.68,-50]]],[[[-73.89,-42.06],[-73.89,-42.06]]],[[[-75.1,19.9],[-75.1,19.9]]],[[[33.02,34.57],[33.02,34.57]]],[[[-71.76,19.71],[-71.76,19.71]]],[[[179.99,-16.17],[179.99,-16.17]]],[[[178.27,-17.35],[178.27,-17.35]]],[[[-59.2,-51.32],[-59.2,-51.32]]],[[[-58.78,-51.32],[-58.78,-51.32]]],[[[-7.25,55.07],[-7.25,55.07]]],[[[-3.35,58.65],[1.36,51.13],[-5.44,50.19],[-3.35,58.65]]],[[[23.9,35.53],[23.9,35.53]]],[[[23.39,39.02],[23.39,39.02]]],[[[-52.73,69.93],[-52.73,69.93]]],[[[-25.45,70.62],[-25.45,70.62]]],[[[-32.21,83.61],[-13.54,81.21],[-19.08,80.28],[-22.37,70.12],[-41.06,65.1],[-43.14,60.08],[-48.64,61.24],[-59.82,75.91],[-72.59,78.52],[-61,81.49],[-32.21,83.61]]],[[[120.01,-9.36],[120.01,-9.36]]],[[[124.47,-8.97],[124.47,-8.97]]],[[[116.82,-8.31],[116.82,-8.31]]],[[[117.97,-8.1],[117.97,-8.1]]],[[[124.04,-7.96],[124.04,-7.96]]],[[[115.49,-8.15],[115.49,-8.15]]],[[[138.52,-8.15],[138.52,-8.15]]],[[[115,-6.89],[115,-6.89]]],[[[106.16,-6.01],[106.16,-6.01]]],[[[134.58,-5.42],[134.58,-5.42]]],[[[127.07,-3.18],[127.07,-3.18]]],[[[129.1,-2.86],[129.1,-2.86]]],[[[107.85,-2.55],[107.85,-2.55]]],[[[124.53,-1.64],[124.53,-1.64]]],[[[135.48,-1.59],[135.48,-1.59]]],[[[105.88,-1.49],[105.88,-1.49]]],[[[98.86,-.79],[98.86,-.79]]],[[[140.98,-9.11],[133.89,-3.81],[137.79,-1.48],[147.45,-5.96],[140.98,-9.11]]],[[[97.41,1.72],[97.41,1.72]]],[[[125.06,1.67],[125.06,1.67]]],[[[128.17,1.92],[128.17,1.92]]],[[[95.5,5.61],[103.76,.24],[104.54,-5.84],[95.5,5.61]]],[[[92.79,13.31],[92.79,13.31]]],[[[-16.04,66.54],[-16.04,66.54]]],[[[-76.7,18.45],[-76.7,18.45]]],[[[130.98,33.79],[130.98,33.79]]],[[[134.16,34.36],[134.16,34.36]]],[[[141.28,41.35],[141.28,41.35]]],[[[142.02,45.46],[142.02,45.46]]],[[[80.41,9.71],[80.41,9.71]]],[[[49.35,-12.09],[47.13,-24.93],[43.94,-17.46],[49.35,-12.09]]],[[[22.85,78.36],[22.85,78.36]]],[[[16.82,79.88],[16.82,79.88]]],[[[23.14,80.38],[23.14,80.38]]],[[[172.9,-40.51],[172.9,-40.51]]],[[[173.08,-34.41],[173.08,-34.41]]],[[[125.64,9.61],[125.64,9.61]]],[[[123.27,10.98],[123.27,10.98]]],[[[124,11.08],[124,11.08]]],[[[119.82,11.47],[119.82,11.47]]],[[[124.44,11.45],[124.44,11.45]]],[[[122.3,11.76],[122.3,11.76]]],[[[124.92,12.56],[124.92,12.56]]],[[[121.17,13.38],[121.17,13.38]]],[[[120.91,18.57],[120.91,18.57]]],[[[154.81,-5.48],[154.81,-5.48]]],[[[152.23,-4.19],[152.23,-4.19]]],[[[151.04,-2.71],[151.04,-2.71]]],[[[-67.11,18.55],[-67.11,18.55]]],[[[161.69,-10.04],[161.69,-10.04]]],[[[159.62,-9.38],[159.62,-9.38]]],[[[160.8,-8.36],[160.8,-8.36]]],[[[158.6,-7.59],[158.6,-7.59]]],[[[-60.22,10.8],[-60.22,10.8]]],[[[121.64,25.22],[121.64,25.22]]],[[[-155.73,20.19],[-155.73,20.19]]],[[[-163.76,55.06],[-163.76,55.06]]],[[[-133.53,56.59],[-133.53,56.59]]],[[[-135.67,57.36],[-135.67,57.36]]],[[[-153.01,57.93],[-153.01,57.93]]],[[[-135.71,58.23],[-135.71,58.23]]],[[[-135.43,58.33],[-135.43,58.33]]],[[[-166.09,60.46],[-166.09,60.46]]],[[[-171.67,63.8],[-171.67,63.8]]],[[[166.95,-15.02],[166.95,-15.02]]],[[[-83.84,46.15],[-83.84,46.15]]],[[[-64.34,47.05],[-64.34,47.05]]],[[[-60.5,47],[-60.5,47]]],[[[-64.13,49.95],[-64.13,49.95]]],[[[-55.7,51.32],[-55.7,51.32]]],[[[-81.43,53.37],[-81.43,53.37]]],[[[-132.69,53.93],[-132.69,53.93]]],[[[-81.74,63.06],[-81.74,63.06]]],[[[-85.49,65.8],[-85.49,65.8]]],[[[-75.44,68.71],[-75.44,68.71]]],[[[-99.03,70.19],[-99.03,70.19]]],[[[-114.2,73.31],[-104.87,73.13],[-101.81,69.01],[-113.35,68.59],[-114.2,73.31]]],[[[-81.06,73.85],[-81.06,73.85]]],[[[-86.56,73.86],[-68.36,70.58],[-61.89,66.88],[-64.54,61.74],[-73.2,64.22],[-72.99,68.24],[-88.69,70.47],[-86.56,73.86]]],[[[-99.83,73.9],[-99.83,73.9]]],[[[-92.75,74.09],[-92.75,74.09]]],[[[-121.58,74.56],[-121.58,74.56]]],[[[-94.39,75.6],[-94.39,75.6]]],[[[-98.41,76.67],[-98.41,76.67]]],[[[-108.67,76.82],[-108.67,76.82]]],[[[-95.24,77.01],[-79.65,75.47],[-89.95,74.53],[-95.24,77.01]]],[[[-116.13,77.47],[-116.13,77.47]]],[[[-109.6,78.07],[-109.6,78.07]]],[[[-96.23,78.64],[-96.23,78.64]]],[[[-111.36,79.26],[-111.36,79.26]]],[[[-103.66,79.34],[-103.66,79.34]]],[[[-94.75,82.12],[-94.75,82.12]]],[[[-69.69,83.12],[-61.31,82.2],[-77.77,76.66],[-86.91,77.27],[-90.81,81.72],[-69.69,83.12]]],[[[-127.81,50.44],[-127.81,50.44]]],[[[163.52,-20.03],[163.52,-20.03]]],[[[110.69,20.15],[110.69,20.15]]]]}}]},Nr=Object.assign({},{geoMercator:f,create:h,geoPath:e,transition:k});function Lr({params:t={},layers:r={}}={}){let l="user"==t.projection,a=t.projection,i=t.height,o=!t.reverse;const s=r.map((t=>t.type));a=s.includes("tiles")?Nr.geoMercator():Ht(a),r.forEach((t=>{void 0!==t.geojson&&(t.geojson=le(t.geojson,{rewind:t.rewind}))}));let c=t.width?t.width:1e3,p=t.extent?t.extent:null;p=Array.isArray(p)&&Array.isArray(p[0])&&Array.isArray(p[1])?jt(p):p;let d=t.margin?t.margin:1;Array.isArray(d)||(d=[d,d,d,d]);let g=t.background,f=1==t.clip,u=function(t,e,r,l,a,i){let o;const s=t.map((t=>t.geojson)).filter((t=>void 0!==t)).length,n=t.map((t=>t.type));if(e||!(n.includes("outline")||n.includes("tissot")||n.includes("geolines"))||a||(o={type:"Sphere"}),!e&&s>0&&!n.includes("outline")&&!n.includes("tissot")&&!n.includes("geolines")||a){let e=t.map((t=>t.geojson)).filter((t=>void 0!==t)),r=[];e.forEach((t=>r.push(t.features))),o={type:"FeatureCollection",features:r.flat()}}!e&&0==s&&n.includes("tiles")&&(o={type:"Sphere"}),e&&(o=e);const[[c,p],[d,g]]=bt.geoPath(l.fitWidth(i-r[1]-r[3],o)).bounds(o);let f=l.translate();return l.translate([f[0]+r[3],f[1]+r[0]]),{height:Math.ceil(g-p)+r[0]+r[2],bbox:bt.geoBounds(o)}}(r,p,d,a,l,c);i=null==i?u.height:i;let y=0,h=r.find((t=>"header"==t.type));h&&(h.text&&(y=25*h.text.split("\n").length+10),h.fontSize&&(y=h.fontSize*h.text.split("\n").length+10));let k=0,m=r.find((t=>"footer"==t.type));m&&(m.text&&(k=10*m.text.split("\n").length+10),m.fontSize&&(k=m.fontSize*m.text.split("\n").length+10));const _=Nr.create("svg").attr("id","bertinmap").attr("width",c).attr("height",i+y+k).attr("viewBox",[0,-y,c,i+y+k]).attr("style","max-width: 100%; height: auto; height: intrinsic; background-color: white;");_.append("defs").append("style").attr("type","text/css").text("@import url('https://fonts.googleapis.com/css2?family=Pacifico&family=Roboto&family=Rubik&family=Ubuntu&display=swap');");let x=null;f&&(x=Date.now().toString(36)+Math.random().toString(36).substring(2),_.append("clipPath").attr("id",`clip_${x}`).append("path").datum({type:"Sphere"}).attr("d",Nr.geoPath(a))),g&&_.append("rect").attr("x",0).attr("y",0).attr("width",c).attr("height",i).attr("fill",g);let b=r.find((t=>"outline"==t.type));b&&Ue(_,a,l,{id:b.id,fill:b.fill,fillOpacity:b.fillOpacity,stroke:"none",strokeWidth:"none"}),(o?[...r].reverse():[...r]).forEach((t=>{if("graticule"==t.type&&function(t,e,r,l={},a,i){if(!r){let r=l.stroke?l.stroke:"white",o=null!=l.strokeWidth?l.strokeWidth:.8,s=null!=l.strokeOpacity?l.strokeOpacity:.5,n=null!=l.strokeDasharray?l.strokeDasharray:2,c=l.strokeLinecap?l.strokeLinecap:"round",p=l.strokeLinejoin?l.strokeLinejoin:"round",d=l.spread?l.spread:0,g=[[isNaN(i[0][0])||i[0][0]-d<-180||i[0][0]-d>180?-180:i[0][0]-d,isNaN(i[0][1])||i[0][1]-d<-90||i[0][1]-d>90?-90:i[0][1]-d],[isNaN(i[1][0])||i[1][0]+d<-180||i[1][0]+d>180?180:i[1][0]+d,isNaN(i[1][1])||i[1][1]+d<-90||i[1][1]+d>90?90:i[1][1]+d]],f=l.step?l.step:[10,10];f=Array.isArray(f)?f:[f,f],t.append("g").attr("class",l.id).attr("data-layer",JSON.stringify({_type:"graticule"})).attr("clip-path",null==a?"none":`url(#clip_${a})`).append("path").datum(Be.geoGraticule().step(f).extent(g)).attr("class","onglobe").attr("d",Be.geoPath(e)).style("fill","none").style("stroke",r).style("stroke-width",o).style("stroke-opacity",s).style("stroke-linecap",c).style("stroke-linejoin",p).style("stroke-dasharray",n)}}(_,a,l,{id:t.id,stroke:t.stroke,strokeWidth:t.strokeWidth,strokeOpacity:t.strokeOpacity,strokeDasharray:t.strokeDasharray,strokeLinecap:t.strokeLinecap,strokeLinejoin:t.strokeLinejoin,step:t.step,spread:t.spread},x,u.bbox),"geolines"==t.type&&Te(_,a,l,{id:t.id,stroke:t.stroke,strokeWidth:t.strokeWidth,strokeOpacity:t.strokeOpacity,strokeDasharray:t.strokeDasharray,strokeLinecap:t.strokeLinecap},x),"minimap"!=t.type&&"location"!=t.type||function({mainmap:t={selection:null,projection:null,width:null,height:null},id:e,x:r=5,y:l=5,geojson:a=Pr,extent:i=null,threshold:o=.1,precision:s=10,projection:n="Equirectangular",width:c=200,background:p={stroke:"black",strokeWidth:1,strokeOpacity:1,fill:"white",fillOpacity:1},frame:d={stroke:"none",strokeWidth:1,strokeOpacity:1,fill:"red",fillOpacity:.25},geometries:g={fill:"#CCC",stroke:"none",strokeWidth:1,fillOpacity:1,strokeOpacity:1},raise:f={fill:"red",stroke:"none",strokeWidth:1,fillOpacity:1,strokeOpacity:1},dot:u={fill:"red",r:5,stroke:"none",strokeWidth:1,fillOpacity:1,strokeOpacity:1}}={}){const y=Date.now().toString(36)+Math.random().toString(36).substring(2);i=Array.isArray(i)&&Array.isArray(i[0])&&Array.isArray(i[1])?jt(i):i;const h={type:"Sphere"};let k=t.selection.append("g").attr("class",e).attr("data-layer",JSON.stringify({_type:"minimap"}));n=(n=Ht(n)).fitWidth(c,i||h);const m=Mr.geoPath(n);let _="";null!=i&&(_=m.bounds(i),k.append("clipPath").attr("id",`extent_${y}`).append("rect").attr("x",0).attr("y",0).attr("width",_[1][0]).attr("height",_[1][1])),null==i?k.append("g").append("path").attr("d",m(h)).attr("fill",p.fill).attr("fill-opacity",p.fillOpacity).attr("stroke","none").attr("transform",`translate(${r} ${l})`):k.append("g").append("rect").attr("x",0).attr("y",0).attr("width",_[1][0]).attr("height",_[1][1]).attr("fill",p.fill).attr("fill-opacity",p.fillOpacity).attr("stroke","none").attr("transform",`translate(${r} ${l})`),k.append("g").append("path").datum(a).attr("fill",g.fill).attr("fill-opacity",g.fillOpacity).attr("stroke",g.stroke).attr("stroke-width",g.strokeWidth).attr("stroke-opacity",g.strokeOpacity).attr("d",m).attr("transform",`translate(${r} ${l})`).attr("clip-path",`url(#extent_${y})`),null==i?k.append("g").append("path").attr("d",m(h)).attr("fill","none").attr("stroke",p.stroke).attr("stroke-width",p.strokeWidth).attr("stroke-opacity",p.strokeOpacity).attr("transform",`translate(${r} ${l})`):k.append("g").append("rect").attr("x",0).attr("y",0).attr("width",_[1][0]).attr("height",_[1][1]).attr("fill","none").attr("stroke",p.stroke).attr("stroke-width",p.strokeWidth).attr("stroke-opacity",p.strokeOpacity).attr("transform",`translate(${r} ${l})`);let x=[];for(let e=0;e<=t.width;e+=t.width/s)x.push(e);let b=[];for(let e=0;e<=t.height;e+=t.width/s)b.push(e);let v=[];v.push(x.map((e=>t.projection.invert([e,0])))),v.push(b.map((e=>t.projection.invert([t.width,e])))),v.push(x.reverse().map((e=>t.projection.invert([e,t.height])))),v.push(b.reverse().map((e=>t.projection.invert([0,e]))));const O={type:"Feature",geometry:{type:"Polygon",coordinates:[v.flat()]}};if(Mr.geoArea(O)>o)k.append("g").append("path").datum(O).attr("fill",d.fill).attr("fill-opacity",d.fillOpacity).attr("stroke",d.stroke).attr("stroke-width",d.strokeWidth).attr("stroke-opacity",d.strokeOpacity).attr("d",m).attr("transform",`translate(${r} ${l})`),k.append("clipPath").attr("id",`clipminimap_${y}`).append("path").datum(O).attr("d",Mr.geoPath(n)),k.append("g").append("path").attr("clip-path",`url(#clipminimap_${y})`).datum(a).attr("fill",f.fill).attr("fill-opacity",f.fillOpacity).attr("stroke",f.stroke).attr("stroke-width",f.strokeWidth).attr("stroke-opacity",f.strokeOpacity).attr("d",m).attr("transform",`translate(${r} ${l})`);else{const e=t.projection.invert([t.width/2,t.height/2]);k.append("circle").attr("cx",n(e)[0]).attr("cy",n(e)[1]).attr("fill",u.fill).attr("fill-opacity",u.fillOpacity).attr("stroke",u.stroke).attr("stroke-width",u.strokeWidth).attr("stroke-opacity",u.strokeOpacity).attr("r",u.r).attr("transform",`translate(${r} ${l})`)}}({id:t.id,x:t.x,y:t.y,width:t.width,projection:t.projection,geojson:t.geojson,rewind:t.rewind,extent:t.extent,threshold:t.threshold,background:t.background,geometries:t.geometries,raise:t.raise,frame:t.frame,dot:t.dot,mainmap:{selection:_,projection:a,width:c,height:i}}),"tiles"==t.type&&function(t,e,r,l,a={}){let i=null!=a.opacity?a.opacity:1,o=null!=a.tileSize?a.tileSize:512,s=null!=a.clip?a.clip:void 0,n=a.style?a.style:"opentopomap",c=null!=a.zoomDelta?a.zoomDelta:1,p=null!=a.increasetilesize?a.increasetilesize:1,d=a.source?a.source:"bottomright";const g=[{name:"openstreetmap",provider:"OpenStreetMap contributors",url:(t,e,r)=>`https://tile.openstreetmap.org/${r}/${t}/${e}.png`},{name:"opentopomap",provider:"OpenStreetMap contributors",url:(t,e,r)=>`https://tile.opentopomap.org/${r}/${t}/${e}.png`},{name:"worldterrain",provider:"USGS, Esri, TANA, DeLorme, and NPS",url:(t,e,r)=>`https://server.arcgisonline.com/ArcGIS/rest/services/World_Terrain_Base/MapServer/tile/${r}/${e}/${t}.png`},{name:"worldimagery",provider:"Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community",url:(t,e,r)=>`https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/${r}/${e}/${t}.png`},{name:"worldStreet",provider:"Esri, DeLorme, NAVTEQ, USGS, Intermap, iPC, NRCAN, Esri Japan, METI, Esri China (Hong Kong), Esri (Thailand), TomTom, 2012",url:(t,e,r)=>`https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/${r}/${e}/${t}.png`},{name:"worldphysical",provider:"Esri, US National Park Service",url:(t,e,r)=>`https://server.arcgisonline.com/ArcGIS/rest/services/World_Physical_Map/MapServer/tile/${r}/${e}/${t}`},{name:"shadedrelief",provider:"ESRI",url:(t,e,r)=>`https://server.arcgisonline.com/ArcGIS/rest/services/World_Shaded_Relief/MapServer/tile/${r}/${e}/${t}.png`},{name:"oceanbasemap",provider:"GEBCO, NOAA, CHS, OSU, UNH, CSUMB, National Geographic, DeLorme, NAVTEQ, and Esri",url:(t,e,r)=>`https://server.arcgisonline.com/ArcGIS/rest/services/Ocean_Basemap/MapServer/tile/${r}/${e}/${t}.png`}];Object.hasOwn(n,"provider")&&Object.hasOwn(n,"url")&&(n.name="user",g.push(n),n=n.name);let f=g.find((t=>t.name==n)).url,u=Wr.tile().size([e,r]).scale(2*l.scale()*Math.PI).translate(l([0,0])).tileSize(o).zoomDelta(c);const y=Date.now().toString(36)+Math.random().toString(36).substring(2);let h=t.append("g").attr("class",a.id).attr("data-layer",JSON.stringify({_type:"tiles"}));s&&h.append("clipPath").attr("id",`tileclip_${y}`).append("path").datum(s).attr("d",Wr.geoPath(l)),h.append("g").attr("clip-path",`url(#tileclip_${y})`).selectAll("image").data(u()).join("image").attr("xlink:href",(t=>f(t[0],t[1],t[2]))).attr("x",(t=>Math.round((t[0]+u().translate[0])*u().scale))).attr("y",(t=>Math.round((t[1]+u().translate[1])*u().scale))).attr("width",u().scale+p+"px").attr("height",u().scale+p+"px").attr("opacity",i),jr(t,e,r,a={text:`Source: ${g.find((t=>t.name==n)).provider}`,position:d,fontSize:12,fill:"white",frame_fill:"black",frame_opacity:.3,fontFamily:"Roboto",margin:6})}(_,c,i,a,{id:t.id,opacity:t.opacity,tileSize:t.tileSize,zoomDelta:t.zoomDelta,style:t.style,clip:t.clip,increasetilesize:t.increasetilesize,source:t.source}),"layer"!=t.type&&"simple"!=t.type&&null!=t.type||Ke(_,a,{id:t.id,geojson:t.geojson,rewind:t.rewind,fill:t.fill,stroke:t.stroke,strokeWidth:t.strokeWidth,strokeLinecap:t.strokeLinecap,strokeLinejoin:t.strokeLinejoin,fillOpacity:t.fillOpacity,strokeOpacity:t.strokeOpacity,strokeDasharray:t.strokeDasharray,symbol:t.symbol,symbol_size:t.symbol_size,symbol_iteration:t.symbol_iteration,symbol_shift:t.symbol_shift,tooltip:t.tooltip,leg_x:t.leg_x,leg_y:t.leg_y,leg_w:t.leg_w,leg_h:t.leg_h,leg_title:t.leg_title,leg_text:t.leg_text,leg_type:t.leg_type,leg_fontSize:t.leg_fontSize,leg_fontSize2:t.leg_fontSize2,leg_stroke:t.leg_stroke,leg_fillOpacity:t.leg_fillOpacity,leg_fill:t.leg_fill,leg_strokeWidth:t.leg_strokeWidth,leg_txtcol:t.leg_txtcol,viewof:t.viewof},x,c,i),"dotdensity"==t.type&&function(t,e,r={},l,a,i){let o=null!=r.nbdots?r.nbdots:Ar.sum(r.geojson.features.map((t=>+t.properties[r.values])))/1e3;r.dotvalue=null!=r.dotvalue?r.dotvalue:o,r.symbol_size=null!=r.symbol_size?r.symbol_size:8,r.fill=r.fill?r.fill:"#cc190c",r.leg_text=r.leg_text?r.leg_text:`= ${r.dotvalue}`,r.leg_type=r.symbol?r.symbol:"circle";let s=re(r.geojson);s.features.forEach(((t,e)=>{t.properties.__value=+t.properties[r.values]*t.__share,t.__test=+t.properties[r.values]*t.__share}));const n=zr(s,"__value",r.dotvalue);r.geojson=JSON.parse(JSON.stringify(n)),r._type="dotdensity",Ke(t,e,r,l,a,i)}(_,a,{id:t.id,geojson:t.geojson,rewind:t.rewind,values:t.values,dotvalue:t.dotvalue,fill:t.fill,stroke:t.stroke,strokeWidth:t.strokeWidth,strokeLinecap:t.strokeLinecap,strokeLinejoin:t.strokeLinejoin,fillOpacity:t.fillOpacity,strokeOpacity:t.strokeOpacity,strokeDasharray:t.strokeDasharray,symbol:t.symbol,symbol_size:t.symbol_size,symbol_iteration:t.symbol_iteration,symbol_shift:t.symbol_shift,tooltip:t.tooltip,leg_type:t.leg_type,leg_x:t.leg_x,leg_y:t.leg_y,leg_w:t.leg_w,leg_h:t.leg_h,leg_title:t.leg_title,leg_text:t.leg_text,leg_fontSize:t.leg_fontSize,leg_fontSize2:t.leg_fontSize2,leg_stroke:t.leg_stroke,leg_fillOpacity:t.leg_fillOpacity,leg_fill:t.leg_fill,leg_strokeWidth:t.leg_strokeWidth,leg_txtcol:t.leg_txtcol},x,c,i),"spikes"==t.type&&function(t,e,r,l={},a,i,o){let s=l.geojson,n=l.values,c=null!=l.k?l.k:50,p=null!=l.w?l.w:10,d=l.fill?l.fill:"#ffa3e3",g=l.stroke?l.stroke:"#a31d88",f=null!=l.strokeWidth?l.strokeWidth:1,u=null!=l.fillOpacity?l.fillOpacity:1,y=l.strokeLinecap?l.strokeLinecap:"round",h=l.strokeLinejoin?l.strokeLinejoin:"round",k=null!=l.strokeDasharray?l.strokeDasharray:"none",m=null!=l.strokeOpacity?l.strokeOpacity:1,_=!!l.tooltip&&l.tooltip;Array.isArray(_)&&(_={fields:_}),"function"!=typeof _&&"string"!=typeof _||(_={fields:[_]});let x,b=!!l.viewof,v={};x="p"==Qt(s)?s.features:Ze(s,{planar:r}).features;const O=wr.scaleLinear().domain([0,wr.max(x.map((t=>+t.properties[n])))]).range([0,c]),S=x.filter((t=>""!=t.properties[n])).map((t=>+t.properties[n]));let j={legval:[wr.min(S),O.invert(c/3),O.invert(c/1.5),wr.max(S)],leg_x:l.leg_x?l.leg_x:null,leg_y:l.leg_y?l.leg_y:null,leg_title:l.leg_title?l.leg_title:null,leg_fontSize:l.leg_fontSize?l.leg_fontSize:14,leg_fontSize2:l.leg_fontSize2?l.leg_fontSize2:10,leg_stroke:l.leg_stroke?l.leg_stroke:g,fillOpacity:l.fillOpacity,leg_fill:l.leg_fill?l.leg_fill:d,leg_fillOpacity:l.leg_fillOpacity?l.leg_fillOpacity:u,leg_strokeWidth:l.leg_strokeWidth?l.leg_strokeWidth:.5,leg_txtcol:l.leg_txtcol?l.leg_txtcol:"#363636",leg_round:void 0!==l.leg_round?l.leg_round:void 0,w:p,k:c},w=l.id?`info_${l.id}`:`info_${Date.now().toString(36)+Math.random().toString(36).substring(2)}`;t.append("g").attr("id",w).attr("class","info"),x.forEach((t=>{t.coords=wr.geoPath(e).centroid(t.geometry)})),t.append("g").attr("class",l.id).attr("data-layer",JSON.stringify({_type:"spikes",fill:d,stroke:g,strokeWidth:f,values:n,k:c,w:p,leg:j})).selectAll("path").data(x.filter((t=>null!=t.geometry.coordinates)).filter((t=>null!=t.properties[n])).sort(((t,e)=>wr.descending(+t.properties[n],+e.properties[n])))).join("path").attr("class","onglobe_translate").attr("fill",(t=>ve(x,d).getcol(t.properties[d.values]))).attr("stroke",(t=>ve(x,g).getcol(t.properties[g.values]))).attr("stroke-width",(t=>Se(x,f).getthickness(t.properties[f.values]||void 0))).attr("fill-opacity",u).attr("stroke-opacity",m).attr("stroke-linecap",y).attr("stroke-linejoin",h).attr("stroke-dasharray",k).attr("d",(t=>`M ${-p/2}, 0 0, ${0-O(t.properties[n])} ${p/2}, 0`)).attr("transform",(t=>`translate(\n     ${t.coords[0]},\n     ${t.coords[1]})`)).on("touchmove mousemove",(function(r,l){b&&(wr.select(this).attr("stroke-opacity",m-.3).attr("fill-opacity",u-.3),v=l.properties,t.dispatch("input"),Object.defineProperty(t.node(),"value",{get:()=>v,configurable:!0})),_&&t.select(`#${w}`).call(He,{fields:function(){const t=_.fields;let e=[];return t.forEach((t=>{let r="";"function"==typeof t?r=[l].map(t)[0]:"string"==typeof t&&"$"==t[0]?r=`${l.properties[t.substring(1,t.length)]}`:"string"==typeof t&&(r=t),e.push(""==r?"N/A":r)})),e}(),fontWeight:_.fontWeight,fontSize:_.fontSize,fontStyle:_.fontStyle,fill:_.fill,stroke:_.stroke,strokeWidth:_.strokeWidth,fillOpacity:_.fillOpacity,strokeOpacity:_.strokeOpacity,col:_.col,type:Xe(l.coords,i,o)}),_&&(t.select(`#${w}`).attr("transform",`translate(\n                ${e(l.geometry.coordinates)[0]+wr.pointers(r,this)[0][0]},\n                ${e(l.geometry.coordinates)[1]+wr.pointers(r,this)[0][1]})`),wr.select(this).attr("stroke-opacity",m-.3).attr("fill-opacity",u-.3))})).on("touchend mouseleave",(function(){b&&(v={},t.dispatch("input")),t.select(`#${w}`).call(He,null),wr.select(this).attr("stroke-opacity",m).attr("fill-opacity",u)})),b&&Object.defineProperty(t.node(),"value",{get:()=>v,configurable:!0}),Je(t,j,l.id),je(s,t,d,g,f,l.id)}(_,a,l,{id:t.id,geojson:t.geojson,rewind:t.rewind,values:t.values,k:t.k,w:t.w,fill:t.fill,stroke:t.stroke,strokeWidth:t.strokeWidth,fillOpacity:t.fillOpacity,strokeLinecap:t.strokeLinecap,strokeLinejoin:t.strokeLinejoin,strokeDasharray:t.strokeDasharray,strokeOpacity:t.strokeOpacity,tooltip:t.tooltip,leg_x:t.leg_x,leg_y:t.leg_y,leg_w:t.leg_w,leg_h:t.leg_h,leg_title:t.leg_title,leg_fontSize:t.leg_fontSize,leg_fontSize2:t.leg_fontSize2,leg_stroke:t.leg_stroke,leg_fill:t.leg_fill,leg_fillOpacity:t.leg_fillOpacity,leg_strokeWidth:t.leg_strokeWidth,leg_txtcol:t.leg_txtcol,leg_round:t.leg_round,viewof:t.viewof},0,c,i),"mushroom"==t.type&&function(t,e,r,l={},a,i){let o=Date.now().toString(36)+Math.random().toString(36).substring(2),s=l.geojson,n=l.top_values,c=l.bottom_values,p=l.top_fill?l.top_fill:"#d64f4f",d=l.bottom_fill?l.bottom_fill:"#4fabd6",g=l.k?l.k:50,f=l.stroke?l.stroke:"white",u=l.strokeWidth?l.strokeWidth:.5,y=l.fillOpacity?l.fillOpacity:1,h=l.strokeOpacity?l.strokeOpacity:1,k=!!l.top_tooltip&&l.top_tooltip;Array.isArray(k)&&(k={fields:k}),"function"!=typeof k&&"string"!=typeof k||(k={fields:[k]});let m=!!l.bottom_tooltip&&l.bottom_tooltip;Array.isArray(m)&&(m={fields:m}),"function"!=typeof m&&"string"!=typeof m||(m={fields:[m]}),Array.isArray(m)&&(m={fields:m}),"string"==typeof m&&(m={fields:[m]});let _=l.leg_x?l.leg_x:null,x=l.leg_y?l.leg_y:null,b=l.leg_fontSize?l.leg_fontSize:14,v=l.leg_fontSize2?l.leg_fontSize2:10,O=l.leg_round?l.leg_round:void 0,S=l.leg_txtcol?l.leg_txtcol:"#363636",j=l.leg_title?l.leg_title:"Title, year",w=l.leg_top_txt?l.leg_top_txt:n,$=l.leg_bottom_txt?l.leg_bottom_txt:c,z=l.leg_top_fill?l.leg_top_fill:p,A=l.leg_bottom_fill?l.leg_bottom_fill:d,W=l.leg_stroke?l.leg_stroke:S,M=l.leg_strokeWidth?l.leg_strokeWidth:.8,P=!!l.viewof,N={};const L=Ze(s,{planar:r}).features.sort(((t,e)=>ur.descending(+t.properties[n],+e.properties[n]))).filter((t=>null!=t.geometry.coordinates)).filter((t=>!isNaN(t.geometry.coordinates[0]))),C=ur.max(L,(t=>+t.properties[n])),D=ur.max(L,(t=>+t.properties[c]));let E=ur.scaleSqrt([0,Math.max(C,D)],[0,g]);for(let r=0;r<L.length;r++){const s=e(L[r].geometry.coordinates)[0],g=e(L[r].geometry.coordinates)[1],_=E(L[r].properties[n]),x=E(L[r].properties[c]),b=Math.max(_,x);let v=l.id?`info_${l.id}`:`info_${Date.now().toString(36)+Math.random().toString(36).substring(2)}`;t.append("g").attr("id",v).attr("class","info");let O=t.append("g").attr("class",l.id).attr("data-layer",JSON.stringify({_type:"mushroom"}));O.append("circle").attr("cx",s).attr("cy",g).attr("r",_).style("fill",p).attr("stroke",f).attr("stroke-width",u).attr("clip-path","url(#top-clip_"+o+r+")").on("touchmove mousemove",(function(e){if(P&&(ur.select(this).attr("stroke-opacity",h-.3).attr("fill-opacity",y-.3),N=L[r].properties,t.dispatch("input"),Object.defineProperty(t.node(),"value",{get:()=>N,configurable:!0})),k){let l=L[r];t.select(`#${v}`).call(He,{fields:function(){const t=k.fields;let e=[];return t.forEach((t=>{let r="";"function"==typeof t?r=[l].map(t)[0]:"string"==typeof t&&"$"==t[0]?r=`${l.properties[t.substring(1,t.length)]}`:"string"==typeof t&&(r=t),e.push(""==r?"N/A":r)})),e}(),fontWeight:k.fontWeight,fontSize:k.fontSize,fontStyle:k.fontStyle,fill:k.fill,stroke:k.stroke,strokeWidth:k.strokeWidth,fillOpacity:k.fillOpacity,strokeOpacity:k.strokeOpacity,col:k.col,type:Xe(ur.pointers(e,this)[0],a,i)})}k&&(t.select(`#${v}`).attr("transform",`translate(${ur.pointers(e,this)[0]})`),ur.select(this).attr("stroke-opacity",h-.3).attr("fill-opacity",y-.3))})).on("touchend mouseleave",(function(){P&&(N={},t.dispatch("input")),t.select(`#${v}`).call(He,null),ur.select(this).attr("stroke-opacity",h).attr("fill-opacity",y)})),t.append("clipPath").attr("id","top-clip_"+o+r).append("rect").attr("x",s-_-u).attr("y",g+-_-u).attr("height",_+u).attr("width",2*_+2*u),O.append("circle").attr("cx",s).attr("cy",g).attr("r",x).style("fill",d).attr("stroke",f).attr("stroke-width",u).attr("clip-path","url(#bottom-clip_"+o+r+")").on("touchmove mousemove",(function(e){if(P&&(ur.select(this).attr("stroke-opacity",h-.3).attr("fill-opacity",y-.3),N=L[r].properties,t.dispatch("input"),Object.defineProperty(t.node(),"value",{get:()=>N,configurable:!0})),m){let l=L[r];t.select(`#${v}`).call(He,{fields:function(){const t=m.fields;let e=[];return t.forEach((t=>{let r="";"function"==typeof t?r=[l].map(t)[0]:"string"==typeof t&&"$"==t[0]?r=`${l.properties[t.substring(1,t.length)]}`:"string"==typeof t&&(r=t),e.push(""==r?"N/A":r)})),e}(),fontWeight:m.fontWeight,fontSize:m.fontSize,fontStyle:m.fontStyle,fill:m.fill,stroke:m.stroke,strokeWidth:m.strokeWidth,fillOpacity:m.fillOpacity,strokeOpacity:m.strokeOpacity,col:m.col,type:Xe(ur.pointers(e,this)[0],a,i)})}m&&(t.select(`#${v}`).attr("transform",`translate(${ur.pointers(e,this)[0]})`),ur.select(this).attr("stroke-opacity",h-.3).attr("fill-opacity",y-.3))})).on("touchend mouseleave",(function(){P&&(N={},t.dispatch("input")),t.select(`#${v}`).call(He,null),ur.select(this).attr("stroke-opacity",h).attr("fill-opacity",y)})),O.append("clipPath").attr("id","bottom-clip_"+o+r).append("rect").attr("x",s-x-u).attr("y",g).attr("height",x+u).attr("width",2*x+2*u).attr("fill","none").attr("stroke","red"),O.append("line").attr("x1",s-b).attr("x2",s+b).attr("y1",g).attr("y2",g).attr("stroke",f).attr("stroke-width",u)}if(P&&Object.defineProperty(t.node(),"value",{get:()=>N,configurable:!0}),null!=_&&null!=x){const e=30,r=3,a=E(Math.max(+C,+D));let i=t.append("g").attr("class","bertinlegend").attr("class","legmushroom_"+l.id),p=i.append("g");const d=E(ur.max(L,(t=>+t.properties[n])));let g=L.map((t=>+t.properties[n])),f=[E.invert(d/3),E.invert(d/1.5),ur.max(g)];p.selectAll("circle").data(f.sort(ur.descending)).join("circle").attr("cx",_+a).attr("cy",x+d+(j.split("\n").length+1)*b).attr("r",(t=>E(t))).attr("fill",z).attr("stroke",W).attr("stroke-width",M).attr("clip-path","url(#legtop-clip_"+o+")"),p.append("clipPath").attr("id","legtop-clip_"+o).append("rect").attr("x",_-M+a-d).attr("y",x+(j.split("\n").length+1)*b-M).attr("height",d+M).attr("width",2*d+2*M),p.selectAll("line").data(f).join("line").attr("x1",_+a).attr("y1",(t=>x+(j.split("\n").length+1)*b+d-E(t))).attr("x2",_+2*a+b).attr("y2",(t=>x+(j.split("\n").length+1)*b+d-E(t))).attr("stroke",W).attr("stroke-width",M).attr("stroke-dasharray",2),p.selectAll("text").data(f).join("text").attr("x",_+2*a+b+v/2).attr("y",(t=>x+(j.split("\n").length+1)*b+d-E(t))).attr("font-size",v).attr("dominant-baseline","central").attr("fill",S).text((t=>void 0!==O||0!==O?t.toFixed(O):t));let u=i.append("g");const y=E(ur.max(L,(t=>+t.properties[c])));let h=s.features.map((t=>+t.properties[c])),k=[E.invert(y/3),E.invert(y/1.5),ur.max(h)];u.selectAll("circle").data(k.sort(ur.descending)).join("circle").attr("cx",_+a).attr("cy",x+d+(j.split("\n").length+1)*b+e).attr("r",(t=>E(t))).attr("fill",A).attr("stroke",W).attr("stroke-width",M).attr("clip-path","url(#legbottom-clip_"+o+")"),u.append("clipPath").attr("id","legbottom-clip_"+o).append("rect").attr("x",_-M+a-y).attr("y",x+(j.split("\n").length+1)*b+e+d).attr("height",y+M).attr("width",2*y+2*M),u.selectAll("line").data(k).join("line").attr("x1",_+a).attr("y1",(t=>x+(j.split("\n").length+1)*b+d+e+E(t))).attr("x2",_+2*a+b).attr("y2",(t=>x+(j.split("\n").length+1)*b+d+e+E(t))).attr("stroke",W).attr("stroke-width",M).attr("stroke-dasharray",2),u.selectAll("text").data(k).join("text").attr("x",_+2*a+b+v/2).attr("y",(t=>x+(j.split("\n").length+1)*b+d+e+E(t))).attr("font-size",v).attr("dominant-baseline","central").attr("fill",S).text((t=>void 0!==O||0!==O?t.toFixed(O):t));let m=i.append("g");m.append("line").attr("x1",_+a-d).attr("x2",_+a+d).attr("y1",x+(j.split("\n").length+1)*b+d).attr("y2",x+(j.split("\n").length+1)*b+d).attr("stroke",S).attr("stroke-width",M),m.append("line").attr("x1",_+a-y).attr("x2",_+a+y).attr("y1",x+(j.split("\n").length+1)*b+d+e).attr("y2",x+(j.split("\n").length+1)*b+d+e).attr("stroke",S).attr("stroke-width",M),m.append("g").selectAll("text").data(j.split("\n")).join("text").attr("x",_).attr("y",x).attr("font-size",`${b}px`).attr("dy",((t,e)=>e*b)).attr("text-anchor","start").attr("dominant-baseline","hanging").attr("fill",S).text((t=>t)),m.append("text").attr("x",_+a).attr("y",x+(j.split("\n").length+1)*b+d+r).text(w).attr("fill",S).attr("font-size",`${v}px`).attr("text-anchor","middle").attr("dominant-baseline","hanging"),m.append("text").attr("x",_+a).attr("y",x+(j.split("\n").length+1)*b+d+e-r).text($).attr("fill",S).attr("font-size",`${v}px`).attr("text-anchor","middle").attr("dominant-baseline","baseline")}}(_,a,l,{id:t.id,geojson:t.geojson,rewind:t.rewind,top_values:t.top_values,bottom_values:t.bottom_values,top_fill:t.top_fill,bottom_fill:t.bottom_fill,k:t.k,stroke:t.stroke,strokeWidth:t.strokeWidth,fillOpacity:t.fillOpacity,strokeOpacity:t.strokeOpacity,top_tooltip:t.top_tooltip,bottom_tooltip:t.bottom_tooltip,leg_x:t.leg_x,leg_y:t.leg_y,leg_fontSize:t.leg_fontSize,leg_fontSize2:t.leg_fontSize2,leg_round:t.leg_round,leg_txtcol:t.leg_txtcol,leg_title:t.leg_title,leg_top_txt:t.leg_top_txt,leg_bottom_txt:t.leg_bottom_txt,leg_top_fill:t.leg_top_fill,leg_bottom_fill:t.leg_bottom_fill,leg_stroke:t.leg_stroke,leg_strokeWidth:t.leg_strokeWidth,viewof:t.viewof},c,i),"label"==t.type&&function(t,e,r,l={},a){let i,o=l.geojson,s=l.values,n=l.fill?l.fill:"#474342",c=l.fontSize?l.fontSize:10,p=l.fontFamily?l.fontFamily:"Roboto",d=l.textDecoration?l.textDecoration:"none",g=l.fontWeight?l.fontWeight:"normal",f=l.fontStyle?l.fontStyle:"normal",u=null!=l.opacity?l.opacity:1,y=1==l.halo,h=l.halo_style?l.halo_style:["white",4,.5];i="p"==Qt(o)?o.features:Ze(o,{planar:r}).features,t.append("g").attr("class",l.id).attr("data-layer",JSON.stringify({_type:"label"})).attr("data-layer",void 0).selectAll("text").data(i.filter((t=>null!=t.geometry.coordinates)).filter((t=>null!=t.properties[s]))).join("text").attr("class","onglobe_coords").attr("x",(t=>e(t.geometry.coordinates)[0])).attr("y",(t=>e(t.geometry.coordinates)[1])).attr("fill",n).attr("opacity",u).attr("font-size",c).attr("font-family",p).attr("font-style",f).attr("text-decoration",d).attr("font-weight",g).attr("text-anchor","middle").attr("dominant-baseline","middle").attr("paint-order","stroke").attr("stroke",y?h[0]:"none").attr("stroke-width",y?h[1]:0).attr("stroke-opacity",y?h[2]:0).attr("stroke-linejoin","round").attr("stroke-linecap","round").text((t=>t.properties[s]))}(_,a,l,{id:t.id,geojson:t.geojson,rewind:t.rewind,values:t.values,fill:t.fill,fontSize:t.fontSize,fontFamily:t.fontFamily,textDecoration:t.textDecoration,fontWeight:t.fontWeight,fontStyle:t.fontStyle,opacity:t.opacity,halo:t.halo,halo_style:t.halo_style}),"text"==t.type&&jr(_,c,i,{id:t.id,position:t.position,text:t.text,fill:t.fill,stroke:t.stroke,fontSize:t.fontSize,fontFamily:t.fontFamily,textDecoration:t.textDecoration,fontWeight:t.fontWeight,fontStyle:t.fontStyle,margin:t.margin,anchor:t.anchor,baseline:t.baseline,frame_fill:t.frame_fill,frame_stroke:t.frame_stroke,frame_opacity:t.frame_opacity,frame_strokeWidth:t.frame_strokeWidth}),"logo"==t.type&&function(t,e,r,l={}){let a=l.url?l.url:"https://github.com/neocarto/bertin/raw/main/img/logo.png",i=l.position?l.position:"left";const o=new Image;o.src=a,o.onload=()=>{let s,n,c=null!=l.size?l.size:100,p=o.height*c/o.width;switch(i){case"left":s=10,n=r-10-p;break;case"middle":s=e/2-c/2,n=r-10-p;break;case"right":s=e-10-c,n=r-10-p;break;default:s=i[0],n=i[1]}t.append("g").attr("class",l.id).attr("data-layer",JSON.stringify({_type:"logo"})).append("image").attr("xlink:href",a).attr("width",c).attr("height",p).attr("x",s).attr("y",n)}}(_,c,i,{id:t.id,url:t.url,size:t.size,position:t.position}),"missing"==t.type&&function(t,e,r={},l){let a=r.geojson,i=r.values,o=r.fill?r.fill:"white",s=r.stroke?r.stroke:"white",n=r.strokeWidth?r.strokeWidth:.5,c=r.fillOpacity?r.fillOpacity:1,p=a.features.filter((t=>null==t.properties[i]));"l"==Qt(a)&&(s=r.stroke?r.stroke:"white",o=r.fill?r.fill:"none",n=r.strokeWidth?r.strokeWidth:1),t.append("g").attr("class",r.id).attr("data-layer",JSON.stringify({_type:"missing"})).attr("clip-path",null==l?"none":`url(#clip_${l})`).selectAll("path").data(p).join("path").attr("class","onglobe").attr("d",yr.geoPath(e)).attr("fill",o).attr("stroke",s).attr("stroke-width",n).attr("fill-opacity",c),Ce(t,{x:r.leg_x,y:r.leg_y,w:r.leg_w,h:r.leg_h,text:r.leg_text?r.leg_text:"Missing data",fontSize:r.leg_fontSize2,stroke:r.leg_stroke,fillOpacity:r.leg_fillOpacity?r.leg_fillOpacity:c,fill:o,strokeWidth:r.leg_strokeWidth,txtcol:r.leg_txtcol})}(_,a,{id:t.id,geojson:t.geojson,rewind:t.rewind,values:t.values,fill:t.fill,stroke:t.stroke,strokeWidth:t.strokeWidth,fillOpacity:t.fillOpacity,leg_x:t.leg_x,leg_y:t.leg_y,leg_w:t.leg_w,leg_h:t.leg_h,leg_text:t.leg_text,leg_fontSize:t.leg_fontSize,leg_stroke:t.leg_stroke,leg_fillOpacity:t.fillOpacity,leg_fill:t.fill,leg_strokeWidth:t.leg_strokeWidth,leg_txtcol:t.leg_txtcol},x),"shadow"==t.type&&function(t,e,r,l={}){let a=l.geojson,i=l.fill?l.fill:"#35383d",o=null!=l.dx?l.dx:3,s=null!=l.dy?l.dy:3,n=null!=l.stdDeviation?l.stdDeviation:1.5,c=null!=l.opacity?l.opacity:.7,p=xr(a);t.append("defs").append("filter").attr("id","blur").append("feGaussianBlur").attr("stdDeviation",n);const d=br.geoPath(e);t.append("g").attr("class",l.id).attr("data-layer",JSON.stringify({_type:"shadow",dx:o,dy:s})).attr("clip-path",null==r?"none":`url(#clip_${r})`).append("path").datum(p).attr("class","onglobe").attr("d",d).attr("fill",i).attr("opacity",c).attr("stroke","none").attr("filter","url(#blur)").attr("transform",`translate(${o} ${s})`)}(_,a,x,{id:t.id,geojson:t.geojson,rewind:t.rewind,fill:t.fill,dx:t.dx,dy:t.dy,opacity:t.opacity,stdDeviation:t.stdDeviation}),"waterlines"==t.type&&function(t,e,r,l,a={}){let i=null!=a.precision?a.precision:3,o=null!=a.dist?a.dist:5,s=null!=a.nb?a.nb:3;null==a.steps||a.steps;let n=null!=a.stroke?a.stroke:"#5d81ba",c=null!=a.strokeOpacity?a.strokeOpacity:[1,.1],p=null!=a.strokeWidth?a.strokeWidth:[1.2,.2],d=null!=a.strokeDasharray?a.strokeDasharray:"none",g=null!=a.strokeLinecap?a.strokeLinecap:"round",f=null!=a.strokeLinejoin?a.strokeLinejoin:"round",u=[],y=mr(vr.geoProject(xr(r),e),{dist:o,wgs84:!1,step:i});u.push(y.features[0]);for(let t=1;t<=s;t++)y=mr(y,{dist:o,wgs84:!1,step:i}),u.push(y.features[0]);t.append("g").attr("class",a.id).attr("data-layer",JSON.stringify({_type:"waterlines"})).attr("clip-path",null==l?"none":`url(#clip_${l})`).selectAll("path").data(u).join("path").attr("d",vr.geoPath()).attr("fill","none").attr("stroke-opacity",((t,e)=>Array.isArray(c)?vr.scaleLinear().domain([1,s]).range(c)(e):c)).attr("stroke-width",((t,e)=>Array.isArray(p)?vr.scaleLinear().domain([1,s]).range(p)(e):p)).attr("stroke",((t,e)=>Array.isArray(n)?vr.scaleLinear().domain([1,s]).range(n)(e):n)).attr("stroke-dasharray",d).attr("stroke-linecap",g).attr("stroke-linejoin",f)}(_,a,t.geojson,x,{id:t.id,stroke:t.stroke,dist:t.dist,unit:t.unit,nb:t.nb,precision:t.precision,strokeOpacity:t.strokeOpacity,strokeWidth:t.strokeWidth,stroke:t.stroke,strokeDasharray:t.strokeDasharray,strokeLinecap:t.strokeLinecap,strokeLinejoin:t.strokeLinejoin}),"inner"==t.type&&function(t,e,r={}){let l=r.geojson,a=null!=r.thickness&&null!=r.thickness?r.thickness:7,i=null!=r.fill&&null!=r.fill?r.fill:"#9e9477",o=null!=r.fillOpacity&&null!=r.fillOpacity?r.fillOpacity:.2,s=null!=r.blur&&null!=r.blur?r.blur:4;const n=Date.now().toString(36)+Math.random().toString(36).substring(2);t.append("defs").append("filter").attr("id",`blur${n}`).append("feGaussianBlur").attr("stdDeviation",s);let c=xr(l);t.append("clipPath").attr("id",`inner${n}`).append("path").datum(c).attr("d",Or.geoPath(e)).attr("class","onglobe"),t.append("g").attr("class",r.id).attr("data-layer",JSON.stringify({_type:"inner"})).attr("data-layer",void 0).attr("clip-path",`url(#inner${n})`).append("path").datum(c).attr("fill","none").attr("stroke",i).attr("stroke-linecap","round").attr("stroke-linejoin","round").attr("stroke-opacity",o).attr("stroke-width",2*a).attr("filter",`url(#blur${n})`).attr("d",Or.geoPath(e)).attr("class","onglobe")}(_,a,{id:t.id,geojson:t.geojson,rewind:t.rewind,fill:t.fill,fillOpacity:t.fillOpacity,blur:t.blur,thickness:t.thickness}),"rhumbs"==t.type&&function(t,e,r,l,a={}){let i=a.visibility?a.visibility:"visible",o=null!=a.nb?a.nb:16,s=null!=a.position?a.position:[e/4,r-r/4],n=a.stroke?a.stroke:"#394a70",c=null!=a.strokeWidth?a.strokeWidth:1,p=null!=a.strokeOpacity?a.strokeOpacity:.3,d=a.strokeDasharray?a.strokeDasharray:[3,2],g=de(o),f=Math.max(e,r);t.append("g").attr("class",a.id).attr("data-layer",JSON.stringify({_type:"rhumbs"})).attr("fill","none").attr("visibility",i).attr("stroke",n).attr("stroke-opacity",p).attr("stroke-width",c).attr("stroke-dasharray",d).attr("clip-path",null==l?"none":`url(#clip_${l})`).selectAll("polyline").data(g).join("polyline").attr("points",(function(t,e){let r=s[0]+Math.cos(t)*f,l=s[1]+Math.sin(t)*f;return s[0]+","+s[1]+" "+r+","+l}))}(_,c,i,x,{id:t.id,nb:t.nb,position:t.position,stroke:t.stroke,strokeWidth:t.strokeWidth,strokeOpacity:t.strokeOpacity,strokeDasharray:t.strokeDasharray}),"tissot"==t.type&&function(t,r,l,a={},i){if(!l){let l=a.fill?a.fill:"#d91848",o=a.fillOpacity?a.fillOpacity:.5,s=a.stroke?a.stroke:"#d91848",n=null!=a.strokeWidth?a.strokeWidth:.2,c=null!=a.strokeOpacity?a.strokeOpacity:.6,p=a.step?a.step:10;t.append("g").attr("class",a.id).attr("data-layer",JSON.stringify({_type:"tissot"})).style("fill",l).style("fill-opacity",o).style("stroke",s).style("stroke-width",n).style("stroke-opacity",c).attr("clip-path",null==i?"none":`url(#clip_${i})`).append("path").datum(pe(p)).attr("class","test").attr("d",e(r)).attr("class","onglobe")}}(_,a,l,{id:t.id,step:t.step,fill:t.fill,fillOpacity:t.fillOpacity,stroke:t.stroke,strokeWidth:t.strokeWidth,strokeOpacity:t.strokeOpacity},x),"dotcartogram"==t.type&&function(t,e,r,l={},a,i,o){let s=["#66c2a5","#fc8d62","#8da0cb","#e78ac3"],n=l.geojson,c=l.values,p=null!=l.radius?l.radius:4,d=null!=l.nbmax?l.nbmax:200,g=null!=l.onedot?l.onedot:Math.round($r.sum(n.features.map((t=>+t.properties[c])))/d),f=null!=l.span?l.span:.5,u=null!=l.fill?l.fill:s[Math.floor(Math.random()*s.length)],y=null!=l.stroke?l.stroke:"none",h=null!=l.strokeWidth?l.strokeWidth:0,k=null!=l.fillOpacity?l.fillOpacity:1,m=null!=l.strokeDasharray?l.strokeDasharray:"none",_=null!=l.strokeOpacity?l.strokeOpacity:1,x=!!l.viewof,b=!!l.tooltip&&l.tooltip;Array.isArray(b)&&(b={fields:b}),"function"!=typeof b&&"string"!=typeof b||(b={fields:[b]});let v,O=null!=l.iteration?l.iteration:200;v="p"==Qt(n)?n.features:Ze(n,{planar:r}).features.filter((t=>!isNaN(t.geometry.coordinates[0])));let S=[];for(let t=0;t<=v.length-1;t++){let e=Math.round(+v[t].properties[c]/g);for(let r=1;r<=e;r++)S.push({...v[t]})}const j=$r.forceSimulation(S).force("x",$r.forceX((t=>e(t.geometry.coordinates)[0]))).force("y",$r.forceY((t=>e(t.geometry.coordinates)[1]))).force("collide",$r.forceCollide(p+f+h/2));for(let t=0;t<O;t++)j.tick();let w=l.id?`info_${l.id}`:`info_${Date.now().toString(36)+Math.random().toString(36).substring(2)}`;t.append("g").attr("id",w).attr("class","info");let $={};t.append("g").attr("class",l.id).attr("data-layer",JSON.stringify({_type:"dotcartogram"})).selectAll("circle").data(S.filter((t=>null!=t.geometry.coordinates))).join("circle").attr("fill",(t=>ve(S,u).getcol(t.properties[u.values]))).attr("stroke",(t=>ve(S,y).getcol(t.properties[y.values]))).attr("stroke-width",(t=>Se(S,h).getthickness(t.properties[h.values]||void 0))).attr("fill-opacity",k).attr("stroke-dasharray",m).attr("stroke-opacity",_).attr("cx",(t=>t.x)).attr("cy",(t=>t.y)).attr("r",p).on("touchmove mousemove",(function(e,r){x&&($r.select(this).attr("stroke-opacity",_-.3).attr("fill-opacity",k-.3),$=r.properties,t.dispatch("input"),Object.defineProperty(t.node(),"value",{get:()=>$,configurable:!0})),b&&t.select(`#${w}`).call(He,{fields:function(){const t=b.fields;let e=[];return t.forEach((t=>{let l="";"function"==typeof t?l=[r].map(t)[0]:"string"==typeof t&&"$"==t[0]?l=`${r.properties[t.substring(1,t.length)]}`:"string"==typeof t&&(l=t),e.push(""==l?"N/A":l)})),e}(),fontWeight:b.fontWeight,fontSize:b.fontSize,fontStyle:b.fontStyle,fill:b.fill,stroke:b.stroke,strokeWidth:b.strokeWidth,fillOpacity:b.fillOpacity,strokeOpacity:b.strokeOpacity,col:b.col,type:Xe($r.pointers(e,this)[0],i,o)}),b&&(t.select(`#${w}`).attr("transform",`translate(${$r.pointers(e,this)[0]})`),$r.select(this).attr("stroke-opacity",_-.3).attr("fill-opacity",k-.3))})).on("touchend mouseleave",(function(){x&&($={},t.dispatch("input")),t.select(`#${w}`).call(He,null),$r.select(this).attr("stroke-opacity",_).attr("fill-opacity",k)})),x&&Object.defineProperty(t.node(),"value",{get:()=>$,configurable:!0});const z=null!=l.leg_x?l.leg_x:null,A=null!=l.leg_y?l.leg_y:null,W=l.leg_title?l.leg_title:"leg_title",M=null!=l.leg_fontSize?l.leg_fontSize:14,P=null!=l.leg_fontSize2?l.leg_fontSize2:10,N=l.leg_txtcol?l.leg_txtcol:"#363636",L=l.leg_stroke?l.leg_stroke:y,C=null!=l.leg_strokeWidth?l.leg_strokeWidth:h,D="string"==typeof u?u:l.leg_fill,E=l.leg_txt?l.leg_txt:g;if(null!=z&&null!=A){let e=t.append("g").attr("class","bertinlegend").attr("class","legdotcartogram_"+l.id);null!=W&&(W.split("\n").length,e.append("g").selectAll("text").data(W.split("\n")).join("text").attr("x",z).attr("y",A).attr("font-size",`${M}px`).attr("dy",((t,e)=>e*M)).attr("text-anchor","start").attr("dominant-baseline","hanging").attr("fill",N).text((t=>t))),e.append("circle").attr("r",p).attr("fill",D).attr("stroke",L).attr("stroke-width",C).attr("cx",z+p).attr("cy",A+2*p+W.split("\n").length*M),e.append("text").attr("fill",N).attr("font-size",`${P}px`).attr("dominant-baseline","middle").attr("x",z+2*p+P).attr("y",A+2*p+W.split("\n").length*M).text(E)}je({type:"FeatureCollection",features:S},t,u,y,h)}(_,a,l,{id:t.id,geojson:t.geojson,rewind:t.rewind,values:t.values,radius:t.radius,nbmax:t.nbmax,onedot:t.onedot,span:t.span,fill:t.fill,stroke:t.stroke,strokeWidth:t.strokeWidth,fillOpacity:t.fillOpacity,strokeDasharray:t.strokeDasharray,strokeOpacity:t.strokeOpacity,iteration:t.iteration,tooltip:t.tooltip,leg_x:t.leg_x,leg_y:t.leg_y,leg_title:t.leg_title,leg_fontSize:t.leg_fontSize,leg_fontSize2:t.leg_fontSize2,leg_txtcol:t.leg_txtcol,leg_stroke:t.leg_stroke,leg_strokeWidth:t.leg_strokeWidth,leg_fill:t.leg_fill,leg_txt:t.leg_txt,viewof:t.viewof},0,c,i),"bubble"==t.type&&rr(_,a,l,{id:t.id,geojson:t.geojson,rewind:t.rewind,values:t.values,planar:t.planar,k:t.k,fixmax:t.fixmax,fill:t.fill,stroke:t.stroke,strokeWidth:t.strokeWidth,fillOpacity:t.fillOpacity,strokeDasharray:t.strokeDasharray,strokeOpacity:t.strokeOpacity,dorling:t.dorling,iteration:t.iteration,tooltip:t.tooltip,leg_x:t.leg_x,leg_y:t.leg_y,leg_stroke:t.leg_stroke,leg_fill:t.leg_fill,leg_strokeWidth:t.leg_strokeWidth,leg_txtcol:t.leg_txtcol,leg_title:t.leg_title,leg_fontSize:t.leg_fontSize,leg_fontSize2:t.leg_fontSize2,leg_round:t.leg_round,leg_divisor:t.leg_divisor,viewof:t.viewof},0,c,i),"square"==t.type&&ar(_,a,l,{id:t.id,geojson:t.geojson,rewind:t.rewind,values:t.values,planar:t.planar,k:t.k,fixmax:t.fixmax,fill:t.fill,stroke:t.stroke,strokeWidth:t.strokeWidth,fillOpacity:t.fillOpacity,strokeDasharray:t.strokeDasharray,strokeOpacity:t.strokeOpacity,dorling:t.dorling,demers:t.demers,iteration:t.iteration,tooltip:t.tooltip,leg_x:t.leg_x,leg_y:t.leg_y,leg_stroke:t.leg_stroke,leg_fill:t.leg_fill,leg_strokeWidth:t.leg_strokeWidth,leg_txtcol:t.leg_txtcol,leg_title:t.leg_title,leg_fontSize:t.leg_fontSize,leg_fontSize2:t.leg_fontSize2,leg_round:t.leg_round,leg_divisor:t.leg_divisor,viewof:t.viewof},0,c,i),"regularbubble"==t.type&&function(t,e,r={},l,a,i){r.geojson=sr({geojson:r.geojson,projection:e,width:a,height:i,step:r.step,values:r.values,blur:r.blur,geoprocessing:r.geoprocessing,operator:r.operator}),r.values="value",r._type="regularbubble",rr(t,n(),!0,r,0,a,i)}(_,a,{id:t.id,geojson:t.geojson,rewind:t.rewind,values:t.values,step:t.step,blur:t.blur,geoprocessing:t.geoprocessing,operator:t.operator,planar:t.planar,k:t.k,fixmax:t.fixmax,fill:t.fill,stroke:t.stroke,strokeWidth:t.strokeWidth,fillOpacity:t.fillOpacity,strokeDasharray:t.strokeDasharray,strokeOpacity:t.strokeOpacity,dorling:t.dorling,iteration:t.iteration,tooltip:t.tooltip,leg_x:t.leg_x,leg_y:t.leg_y,leg_stroke:t.leg_stroke,leg_fill:t.leg_fill,leg_strokeWidth:t.leg_strokeWidth,leg_txtcol:t.leg_txtcol,leg_title:t.leg_title,leg_fontSize:t.leg_fontSize,leg_fontSize2:t.leg_fontSize2,leg_round:t.leg_round,viewof:t.viewof},0,c,i),"ridge"==t.type&&function(t,e,r={},l,a,i){let o=r.k?r.k:100,s=r.fill?r.fill:"#508bab",n=r.stroke?r.stroke:"white",c=r.strokeWidth?r.strokeWidth:.5,p=r.fillOpacity?r.fillOpacity:1,d=r.strokeDasharray?r.strokeDasharray:"none",g=r.strokeOpacity?r.strokeOpacity:1,f=r.operator?r.operator:"sum",u=r.geoprocessing?r.geoprocessing:"dotinpoly",y=sr({geojson:r.geojson,blur:null==r.blur||null==r.blur?.4:r.blur,values:r.values,projection:e,width:a,height:i,keep:!0,step:r.step,operator:f,geoprocessing:u}).features.map((t=>({x:t.geometry.coordinates[0],y:t.geometry.coordinates[1],value:t.properties.value}))).sort(((t,e)=>cr.ascending(t.y,e.y)||cr.ascending(t.x,e.x))),h="ridge"+Date.now().toString(36)+Math.random().toString(36).substring(2),k=JSON.stringify({_type:"ridge",mygrid:y,clip:h,strokeWidth:c}),m=Array.from(new Set(y.map((t=>t.y)))),_=cr.scaleLinear().domain([0,cr.max(y.map((t=>t.value)))]).range([0,o]),x=[];m.forEach((t=>{let e=[];y.filter((e=>e.y==t)).forEach((t=>e.push([t.x,t.y-_(t.value)])));let r={type:"LineString",coordinates:e};x.push({type:"Feature",properties:{y:t},geometry:r})}));let b=t.append("g").attr("class",r.id).attr("data-layer",k).attr("fill",s).attr("stroke",n).attr("stroke-width",c).attr("fill-opacity",p).attr("stroke-opacity",g).attr("stroke-dasharray",d),v=t.append("g");x.forEach(((t,e)=>{v.append("clipPath").attr("id",h+e).append("rect").attr("x",0).attr("y",0).attr("height",t.properties.y-c-1).attr("width",a).attr("fill","blue"),b.append("path").datum(t).attr("d",cr.geoPath()).attr("clip-path","url(#"+h+e+")")}))}(_,a,{id:t.id,geojson:t.geojson,rewind:t.rewind,values:t.values,step:t.step,blur:t.blur,k:t.k,fill:t.fill,stroke:t.stroke,strokeWidth:t.strokeWidth,fillOpacity:t.fillOpacity,strokeDasharray:t.strokeDasharray,strokeOpacity:t.strokeOpacity,operator:t.operator,geoprocessing:t.geoprocessing},0,c,i),"regularsquare"==t.type&&function(t,e,r={},l,a,i){r.geojson=sr({geojson:r.geojson,projection:e,width:a,height:i,step:r.step,values:r.values,blur:r.blur,geoprocessing:r.geoprocessing,operator:r.operator}),r.values="value",r._type="regularsquare",ar(t,n(),!0,r,0,a,i)}(_,a,{id:t.id,geojson:t.geojson,rewind:t.rewind,values:t.values,step:t.step,blur:t.blur,geoprocessing:t.geoprocessing,operator:t.operator,planar:t.planar,k:t.k,fixmax:t.fixmax,fill:t.fill,stroke:t.stroke,strokeWidth:t.strokeWidth,fillOpacity:t.fillOpacity,strokeDasharray:t.strokeDasharray,strokeOpacity:t.strokeOpacity,dorling:t.dorling,demers:t.demers,iteration:t.iteration,tooltip:t.tooltip,leg_x:t.leg_x,leg_y:t.leg_y,leg_stroke:t.leg_stroke,leg_fill:t.leg_fill,leg_strokeWidth:t.leg_strokeWidth,leg_txtcol:t.leg_txtcol,leg_title:t.leg_title,leg_fontSize:t.leg_fontSize,leg_fontSize2:t.leg_fontSize2,leg_round:t.leg_round,viewof:t.viewof},0,c,i),"regulargrid"!=t.type&&"grid"!=t.type||function(t,e,r={},l,a,i){r.geojson=sr({geojson:r.geojson,output:"square",projection:e,width:a,height:i,step:r.step,values:r.values,blur:r.blur,geoprocessing:r.geoprocessing,operator:r.operator}),null==r.fill&&(r.fill={nbreaks:6,method:"quantile",colors:"Blues"}),"object"==typeof r.fill&&null==r.fill.values&&(r.fill.values="value"),"object"==typeof r.fill&&null==r.fill.type&&(r.fill.type="choro"),r._type="regulargrid",Ke(t,n(),r,l,a,i)}(_,a,{id:t.id,geojson:t.geojson,rewind:t.rewind,values:t.values,step:t.step,blur:t.blur,geoprocessing:t.geoprocessing,operator:t.operator,planar:t.planar,fill:t.fill,stroke:t.stroke,strokeWidth:t.strokeWidth,strokeLinecap:t.strokeLinecap,strokeLinejoin:t.strokeLinejoin,fillOpacity:t.fillOpacity,strokeOpacity:t.strokeOpacity,strokeDasharray:t.strokeDasharray,symbol:t.symbol,symbol_size:t.symbol_size,symbol_iteration:t.symbol_iteration,symbol_shift:t.symbol_shift,tooltip:t.tooltip,leg_x:t.leg_x,leg_y:t.leg_y,leg_w:t.leg_w,leg_h:t.leg_h,leg_title:t.leg_title,leg_text:t.leg_text,leg_type:t.leg_type,leg_fontSize:t.leg_fontSize,leg_fontSize2:t.leg_fontSize2,leg_stroke:t.leg_stroke,leg_fillOpacity:t.leg_fillOpacity,leg_fill:t.leg_fill,leg_strokeWidth:t.leg_strokeWidth,leg_txtcol:t.leg_txtcol,viewof:t.viewof},x,c,i),"smooth"!=t.type&&"contour"!=t.type&&"heatmap"!=t.type||function(t,e,r={},l,a,i){null!=r.clip&&r.clip;let o,s=null!=r.reverse&&r.reverse,n=r.fill?r.fill:"RdYlGn",c=r.strokeLinecap?r.strokeLinecap:"round",p=r.strokeLinejoin?r.strokeLinejoin:"round",d=null!=r.strokeDasharray?r.strokeDasharray:"none",g=r.stroke?r.stroke:"none",f=null!=r.strokeWidth?r.strokeWidth:.5,u=null!=r.fillOpacity?r.fillOpacity:.5,y=null!=r.strokeOpacity?r.strokeOpacity:1,h=null!=r.remove?r.remove:0,k=null!=r.thresholds?r.thresholds:100,m=null!=r.bandwidth?r.bandwidth:5,_=null!=r.cellSize?r.cellSize:1,x=null!=r.colorcurve?r.colorcurve:2,b=1e3,v=Date.now().toString(36)+Math.random().toString(36).substring(2);if("z"==Qt(r.geojson))if(r.clip&&t.append("clipPath").attr("id",`clip_${v}`).append("path").datum(r.geojson).attr("d",gr.geoPath(e)),null!=r.grid_step||null!=r.grid_blur){let t=null!=r.grid_step?r.grid_step:20,l=null!=r.grid_blur?r.grid_blur:0,s=null!=r.grid_geoprocessing?r.grid_geoprocessing:"intersection",n=null!=r.grid_operator?r.grid_operator:"sum";o=fr({geojson:sr({geojson:r.geojson,projection:e,width:a,height:i,step:t,blur:l,operator:n,geoprocessing:s,values:r.values}),values:"value",nb:b,projection:gr.geoIdentity()})}else r.geojson=Ze(r.geojson),o=fr({geojson:r.geojson,values:r.values,nb:b,projection:e});"p"==Qt(r.geojson)&&(o=fr({geojson:r.geojson,values:r.values,nb:b,projection:e}));let O,S=gr.contourDensity().x((t=>t[0])).y((t=>t[1])).size([a,i]).bandwidth(m).thresholds(k).cellSize(_)(o),j=new Map([["Blues",gr.interpolateBlues],["Greens",gr.interpolateGreens],["Greys",gr.interpolateGreys],["Oranges",gr.interpolateOranges],["Purples",gr.interpolatePurples],["Reds",gr.interpolateReds],["BrBG",gr.interpolateBrBG],["PRGn",gr.interpolatePRGn],["PiYG",gr.interpolatePiYG],["PuOr",gr.interpolatePuOr],["RdBu",gr.interpolateRdBu],["RdYlBu",gr.interpolateRdYlBu],["RdYlGn",gr.interpolateRdYlGn],["Spectral",gr.interpolateSpectral],["Turbo",gr.interpolateTurbo],["Viridis",gr.interpolateViridis],["Inferno",gr.interpolateInferno],["Magma",gr.interpolateMagma],["Plasma",gr.interpolatePlasma],["Cividis",gr.interpolateCividis],["Warm",gr.interpolateWarm],["Cool",gr.interpolateCool],["CubehelixDefault",gr.interpolateCubehelixDefault],["BuGn",gr.interpolateBuGn],["BuPu",gr.interpolateBuPu],["GnBu",gr.interpolateGnBu],["OrRd",gr.interpolateOrRd],["PuBuGn",gr.interpolatePuBuGn],["PuBu",gr.interpolatePuBu],["PuRd",gr.interpolatePuRd],["RdPu",gr.interpolateRdPu],["YlGnBu",gr.interpolateYlGnBu],["YlGn",gr.interpolateYlGn],["YlOrBr",gr.interpolateYlOrBr],["YlOrRd",gr.interpolateYlOrRd],["Rainbow",gr.interpolateRainbow],["Sinebow",gr.interpolateSinebow]]);O=s?gr.scaleSequentialQuantile([...S.map((t=>t.value))],(t=>j.get(n)(Math.pow(.01+t,1/x)))):gr.scaleSequentialQuantile([...S.map((t=>t.value))],(t=>j.get(n)(1-Math.pow(.01+t,1/x)))),S.splice(0,h),t.append("g").attr("class",r.id).attr("data-layer",JSON.stringify({_type:"smooth"})).attr("clip-path",null==r.clip?"none":`url(#clip_${v})`).selectAll("path").data(S).join("path").attr("d",gr.geoPath()).attr("fill",(t=>O(t.value))).attr("stroke",g).attr("stroke-width",f).attr("fill-opacity",u).attr("stroke-opacity",y).attr("stroke-linecap",c).attr("stroke-linejoin",p).attr("stroke-dasharray",d)}(_,a,{id:t.id,clip:t.clip,geojson:t.geojson,rewind:t.rewind,values:t.values,grid_step:t.grid_step,grid_blur:t.grid_blur,grid_operator:t.grid_operator,grid_geoprocessing:t.grid_geoprocessing,remove:t.remove,fill:t.fill,reverse:t.reverse,stroke:t.stroke,strokeWidth:t.strokeWidth,strokeLinecap:t.strokeLinecap,strokeLinejoin:t.strokeLinejoin,fillOpacity:t.fillOpacity,strokeOpacity:t.strokeOpacity,strokeDasharray:t.strokeDasharray,thresholds:t.thresholds,bandwidth:t.bandwidth,cellsize:t.cellsize,colorcurve:t.colorcurve},0,c,i),"custom"==t.type||"function"==t.type){const{render:e,type:r,...l}=t;e(_,{projection:a,width:c,height:i,clipid:x},{...l})}"header"==t.type&&function(t,e,r={}){let l;r.text&&(l=25),r.fontSize&&(l=r.fontSize);let a=r.text?r.text:"",i=r.fill?r.fill:"#9e9696",o=r.background?r.background:"white",s=null!=r.backgroundOpacity?r.backgroundOpacity:1,n=r.anchor?r.anchor:"middle";const c=l*a.split("\n").length;let p;"start"==n&&(p=5),"middle"==n&&(p=e/2),"end"==n&&(p=e-5);let d=t.append("g").attr("class",r.id).attr("data-layer",JSON.stringify({_type:"header"}));d.append("rect").attr("x",0).attr("y",0-c-10).attr("width",e).attr("height",c+10).attr("fill",o).attr("fill-opacity",s),d.selectAll("text").data(r.text.split("\n")).join("text").attr("x",p).attr("y",-c-5).attr("font-size",`${l}px`).attr("dy",((t,e)=>e*l+l/2)).attr("text-anchor",n).attr("dominant-baseline","central").attr("fill",i).attr("font-family","sans-serif").attr("font-weight","bold").attr("fill-opacity",1).text((t=>t))}(_,c,{fontSize:t.fontSize,text:t.text,fill:t.fill,background:t.background,backgroundOpacity:t.backgroundOpacity,anchor:t.anchor,id:t.id}),"footer"==t.type&&function(t,e,r,l={}){let a;l.text&&(a=10),l.fontSize&&(a=l.fontSize);let i=l.text?l.text:"",o=l.fill?l.fill:"#9e9696",s=l.background?l.background:"white",n=l.backgroundOpacity?l.backgroundOpacity:1,c=l.anchor?l.anchor:"end";const p=a*i.split("\n").length;let d;"start"==c&&(d=5),"middle"==c&&(d=e/2),"end"==c&&(d=e-5);let g=t.append("g").attr("class",l.id).attr("data-layer",JSON.stringify({_type:"footer"}));g.append("rect").attr("x",0).attr("y",r).attr("width",e).attr("height",p+10).attr("fill",s).attr("fill-opacity",n),g.selectAll("text").data(l.text.split("\n")).join("text").attr("x",d).attr("y",r+5).attr("font-size",`${a}px`).attr("dy",((t,e)=>e*a)).attr("text-anchor",c).attr("dominant-baseline","hanging").attr("fill",o).attr("font-family","sans-serif").attr("fill-opacity",1).text((t=>t))}(_,c,i,{fontSize:t.fontSize,text:t.text,fill:t.fill,background:t.background,backgroundOpacity:t.backgroundOpacity,anchor:t.anchor,id:t.id}),"hatch"!=t.type&&"hatching"!=t.type||function(t,e={},r,l){let a=t.append("defs"),i=e.visibility?e.visibility:"visible";const o=e.stroke?e.stroke:"#786d6c",s=null!=e.strokeWidth?e.strokeWidth:2,n=null!=e.strokeOpacity?e.strokeOpacity:.1,c=null!=e.angle?e.angle:45,p=null!=e.spacing?e.spacing:8,d=e.strokeDasharray?e.strokeDasharray:"none",g=Date.now().toString(36)+Math.random().toString(36).substring(2);a.append("pattern").attr("class","pattern"+e.id).attr("id",`hatch${g}`).attr("patternUnits","userSpaceOnUse").attr("width",p).attr("height",p).attr("patternTransform",`rotate(${c})`).append("line").attr("x1",0).attr("y1",0).attr("x2",0).attr("y1",p).attr("visibility",i).attr("stroke",o).attr("stroke-linejoin","butt").attr("stroke-width",s).attr("stroke-dasharray",d).attr("stroke-opacity",n),t.append("g").attr("class",e.id).attr("data-layer",JSON.stringify({_type:"hatch"})).append("rect").attr("x",0).attr("y",0).attr("width",r).attr("height",l).attr("fill","url('#hatch"+g+"')")}(_,{id:t.id,stroke:t.stroke,strokeWidth:t.strokeWidth,strokeOpacity:t.strokeOpacity,angle:t.angle,spacing:t.spacing,strokeDasharray:t.strokeDasharray},c,i),"path"==t.type&&dr(_,c,i,{id:t.id,d:t.d,x:t.x,y:t.y,rotate:t.rotate,margin:t.margin,style:t.style,scale:t.scale,fill:t.fill,stroke:t.stroke,strokeWidth:t.strokeWidth,strokeLinecap:t.strokeLinecap,strokeLinejoin:t.strokeLinejoin,fillOpacity:t.fillOpacity,strokeOpacity:t.strokeOpacity,strokeDasharray:t.strokeDasharray},x)}));let v=r.find((t=>"scalebar"==t.type));if(v&&function(t,e,r,l,a,i={}){if(!r){let r=i.x?i.x:20,o=i.y?i.y:a-30,s=i.units?i.units:"kilometers";r/=l,o/=a;const n=Sr.geoScaleBar().projection(e).size([l,a]).left(r).top(o).label("miles"==s?"Miles":"Km").units("miles"==s?Sr.geoScaleMiles:Sr.geoScaleKilometers).orient(Sr.geoScaleBottom).tickPadding(5).tickSize(0);t.append("g").attr("class",i.id).attr("data-layer",JSON.stringify({_type:"scalebar"})).attr("transform",`translate(${r}, ${o})`).append("g").call(n)}}(_,a,l,c,i,{id:v.id,x:v.x,y:v.y,units:v.units}),b&&Ue(_,a,l,{id:b.id,fill:"none",stroke:b.stroke,strokeWidth:b.strokeWidth}),_.selectAll(".info").raise(),_.selectAll(".bertinlegend").raise(),void 0===r.find((t=>t.viewof))){let t=[];_.on("mousemove",(function(e){const{offsetX:r,offsetY:l}=e;t=a.invert([r,l]),_.dispatch("input")})),Object.defineProperty(_.node(),"value",{get:()=>t})}return Object.assign(_.node(),{info:{width:c,height:i+y+k,height_map:i,height_header:y,height_footer:k,projection:a,bbox:u.bbox}}),_.node().update=function({id:t=null,attr:e=null,value:r=null,legend:l=null,duration:o=0,delay:s=0}={}){Ge({svg:_,projection:a,width:c,height:i,id:t,attr:e,value:r,legend:l,duration:o,delay:s})},t.projection&&"string"==typeof t.projection&&"globe"==t.projection.substring(0,5).toLowerCase()&&ne(_,a),_.node()}function Cr(t,e=1e3,r=5){let l=["#66c2a5","#fc8d62","#8da0cb","#e78ac3","#a6d854","#ffd92f","#e5c494","#b3b3b3"],a=[];if(Array.isArray(t)){let i=[];return t.forEach((t=>{let e,r,o,s=l.filter((t=>!a.includes(t)));s.length>0?(e=s[Math.floor(Math.random()*s.length)],a.push(e)):e="#"+(16777215*Math.random()<<0).toString(16),"l"==Qt(t)&&(r=e,o="none"),"p"!=Qt(t)&&"z"!=Qt(t)||(r="none",o=e),i.push({type:"layer",geojson:t,fill:o,stroke:r})})),Lr({params:{margin:r,width:e},layers:i})}return Lr({params:{margin:r,width:e},layers:[{type:"layer",geojson:t}]})}const Dr=Object.assign({},{create:h,scaleLinear:A});function Er(t,e,r,l){let a=(t=le(t)).features.map((t=>t.properties[e])),i=r.map((t=>t[l])),o=Array.from(new Set(a.concat(i))),s=a.filter((t=>i.includes(t))),n=a.filter((t=>!i.includes(t))),c=i.filter((t=>!a.includes(t))),p=s.filter((t=>i.includes(t))),d=s.filter((t=>a.includes(t))),g=1e3,f=100,u=30,y=Dr.scaleLinear().domain([0,o.length]).range([0,g]);const h=Dr.create("svg").attr("width",g).attr("height",f).attr("viewBox",[0,0,g,f]).attr("style","max-width: 100%; height: auto; height: intrinsic; background-color: white;");return h.append("defs").append("pattern").attr("id","hatch").attr("patternUnits","userSpaceOnUse").attr("width",5).attr("height",5).append("line").attr("x1",0).attr("y1",0).attr("x2",5).attr("y1",5).attr("stroke","#ffcc36").attr("stroke-width",1).attr("stroke-opacity",1),h.append("rect").attr("x",0).attr("y",25).attr("height",10).attr("width",y(n.length+s.length)).attr("stroke","none").attr("fill","#CCC").attr("fill-opacity",.35),h.append("rect").attr("x",g-y(c.length+s.length)).attr("y",65).attr("height",10).attr("width",y(c.length+s.length)).attr("stroke","none").attr("fill","#CCC").attr("fill-opacity",.35),h.append("rect").attr("x",y(n.length)).attr("y",u).attr("height",40).attr("width",y(s.length)).attr("fill","#ffe599"),h.append("rect").attr("x",y(n.length)).attr("y",u).attr("height",40).attr("width",y(s.length)).attr("fill","url('#hatch')"),h.append("text").attr("x",g-y(i.length)+y(s.length)/2).attr("y",53).attr("text-anchor","middle").attr("dominant-baseline","middle").text(`${Math.round(s.length/o.length*100)}%`).attr("font-size",40).attr("fill","black"),h.append("text").attr("x",g-y(i.length)+5).attr("y",37).attr("text-anchor","start").attr("dominant-baseline","hanging").text("Matched geom").attr("font-size",12).attr("fill","black"),h.append("text").attr("x",g-y(i.length)+5).attr("y",62).attr("text-anchor","start").attr("dominant-baseline","baseline").text(`${s.length}/${a.length}`).attr("font-size",14).attr("fill","black"),h.append("text").attr("x",g-y(c.length)-5).attr("y",37).attr("text-anchor","end").attr("dominant-baseline","hanging").text("Matched data").attr("font-size",12).attr("fill","black"),h.append("text").attr("x",g-y(c.length)-5).attr("y",62).attr("text-anchor","end").attr("dominant-baseline","baseline").text(`${s.length}/${i.length}`).attr("font-size",14).attr("fill","black"),h.append("line").attr("x1",0).attr("y1",u).attr("x2",y(a.length)).attr("y2",u).attr("stroke","black").attr("stroke-width",.5),h.append("line").attr("x1",.5).attr("y1",25).attr("x2",.5).attr("y2",35).attr("stroke","black").attr("stroke-width",.5),h.append("line").attr("x1",y(a.length)-.5).attr("y1",25).attr("x2",y(a.length)-.5).attr("y2",35).attr("stroke","black").attr("stroke-width",.5),h.append("line").attr("x1",g-y(i.length)).attr("y1",70).attr("x2",g).attr("y2",70).attr("stroke","black").attr("stroke-width",.5),h.append("line").attr("x1",999.5).attr("y1",65).attr("x2",999.5).attr("y2",75).attr("stroke","black").attr("stroke-width",.5),h.append("line").attr("x1",g-y(i.length)+.5).attr("y1",65).attr("x2",g-y(i.length)+.5).attr("y2",75).attr("stroke","black").attr("stroke-width",.5),h.append("text").attr("x",g-y(i.length/2)).attr("y",95).attr("text-anchor","middle").text("DATA").attr("font-size",28).attr("font-weight","bold").attr("fill","#CCC").attr("opacity",.45),h.append("text").attr("x",y(a.length/2)).attr("y",22).attr("text-anchor","middle").text("GEOMETRIES").attr("font-size",28).attr("font-weight","bold").attr("fill","#CCC").attr("opacity",.45),Object.assign(h.node(),{matched:s,unmatched_geom:n,unmatched_data:c,matched_data:p,matched_geom:d})}const Jr=Object.assign({},{index:R});function qr(t,e,r,l,a=!0){let i=le(t),o=JSON.parse(JSON.stringify(r)),s=i.features.map((t=>t.properties[e])),n=r.map((t=>t[l]));s.filter((t=>n.includes(t)));let c=Object.keys(i.features[0].properties);if(Object.keys(o[0]).includes(l)){let t=Jr.index(o,(t=>t[l]));i.features.forEach((r=>{const l=t.get(r.properties[e]);null!=l&&Object.keys(l).forEach((t=>{void 0!==c.find((e=>e==t))&&(l[`_${t}`]=l[t],delete l[t])})),r.properties=Object.assign(r.properties,l)})),!1===a&&(i.features=i.features.filter((t=>n.includes(t.properties[e]))))}return i}function Fr(t={}){let e,r=le(t.geojson),l=t.geojson_id,a=t.data,i=null!=t.data_i?t.data_i:"i",o=null!=t.data_j?t.data_j:"j",s=!!t.planar;e="p"==Qt(r)?r.features:Ze(r,{planar:s}).features;const n=new Map(e.map((t=>[t.properties[l],t.geometry.coordinates])));let c=[];return a.forEach((t=>{null!=n.get(t[i])&&null!=n.get(t[o])&&c.push({type:"Feature",properties:t,geometry:{type:"LineString",coordinates:[n.get(t[i]),n.get(t[o])]}})})),{type:"FeatureCollection",features:c}}const Gr=Object.assign({},{topology:xt,neighbors:_,mesh:x}),Br=Object.assign({},M);function Ir(t,e={}){let r=Ot(t);if(null==e.values&&null==e.id){const t=Gr.topology({d:r});return{type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:Gr.mesh(t,Object.entries(t.objects)[0][1],((t,e)=>t!==e))}]}}{const t=e.id,l=e.values,a=e.type?e.type:"rel",i=e.share?e.share:null,o=Gr.topology({d:r}),s=r.features.map((e=>e.properties[t])),n=Gr.neighbors(o.objects.d.geometries),c=new Map(r.features.map((e=>[e.properties[t],e.properties[l]])));let p=[];s.forEach((e=>{n[s.indexOf(e)].map((t=>({properties:{i:e,j:s[t],varoptionsi:+c.get(e),varoptionsj:+c.get(s[t]),disc:"rel"==a?0!=Br.min([+c.get(e),+c.get(s[t])])?Br.max([+c.get(e),+c.get(s[t])])/Br.min([+c.get(e),+c.get(s[t])]):null:Br.max([+c.get(e),+c.get(s[t])])-Br.min([+c.get(e),+c.get(s[t])])}}))).forEach((e=>{let r=Gr.mesh(o,o.objects.d,((r,l)=>r.properties[t]==e.properties.i&l.properties[t]==e.properties.j)),l=Object.assign({type:"Feature"},e);p.push(Object.assign(l,{geometry:r}))}))})),p.sort(((t,e)=>Br.descending(t.properties.disc,e.properties.disc)));const d=p.length;return p.map((t=>t.properties)).forEach(((t,e)=>{Object.assign(t,{share:(e+1)/d})})),null!=i&&(p=p.filter((t=>t.properties.share<i))),r.features=p,r}}function Rr({geojson:t,id:e,values:r,type:l="rel",share:a=null}){return null==e||null==r?Ir(t):Ir(t,{id:e,values:r,type:l,share:a})}function Tr({x:t,field:e}){let r=[...t.features.map((t=>({...t.properties})))];r.forEach((t=>{Array.isArray(e)?e.forEach((e=>delete t[e])):delete t[e]}));let l=JSON.parse(JSON.stringify(t));return l.features.map(((t,e)=>t.properties={...r[e]})),l}function Yr(t){return new Function(`return (${t})`)()}const Ur=Object.assign({},{table:function(t){return JSON.parse(JSON.stringify(t.features.map((t=>t.properties))))},remove:Tr,keep:function({x:t,field:e}){let r=[];return t.features.map((t=>t.properties)).forEach((t=>{r.push(Object.keys(t))})),r=Array.from(new Set(r.flat())),Tr({x:t,field:r.filter((t=>!e.includes(t)))})},add:function({x:t,field:e,expression:r}){let l=[...t.features.map((t=>({...t.properties})))],a=[];t.features.map((t=>t.properties)).forEach((t=>{a.push(Object.keys(t))})),a=Array.from(new Set(a.flat())),a.forEach((t=>{r=r.replace(t,`d.${t}`)})),r="d=> "+r;let i=l.map(Yr(r));l.forEach(((t,r)=>{t=Object.assign(t,{[e]:i[r]})}));let o=JSON.parse(JSON.stringify(t));return o.features.map(((t,e)=>t.properties={...l[e]})),o},filter:function({x:t,expression:e}){let r=[...t.features],l=[];t.features.map((t=>t.properties)).forEach((t=>{l.push(Object.keys(t))})),l=Array.from(new Set(l.flat())),l.forEach((t=>{e=e.replace(t,`d.properties.${t}`)})),e="d => "+e;let a=JSON.parse(JSON.stringify(t));return a.features=r.filter(Yr(e)),a},subset:function({x:t,field:e,selection:r,inverse:l=!1}){let a=[...t.features];r=Array.isArray(r)?r:[r],l&&(r=Array.from(new Set(a.map((t=>t.properties[e])))).filter((t=>!r.includes(t))));let i=[];r.forEach((t=>{i.push(a.filter((r=>r.properties[e]==t)))}));let o=JSON.parse(JSON.stringify(t));return o.features=i.flat(),o},head:function({x:t,field:e,nb:r=10}){let l=[...t.features];l=l.filter((t=>""!=t.properties[e])).filter((t=>null!=t.properties[e])).filter((t=>null!=t.properties[e])).filter((t=>t.properties[e]!=1/0)).filter((t=>t.properties[e]!=-1/0)).filter((t=>NaN!=t.properties[e])),l.sort(((t,r)=>+r.properties[e]-+t.properties[e])),l=l.slice(0,r);let a=JSON.parse(JSON.stringify(t));return a.features=l,a},tail:function({x:t,field:e,nb:r=10}){let l=[...t.features];l=l.filter((t=>""!=t.properties[e])).filter((t=>null!=t.properties[e])).filter((t=>null!=t.properties[e])).filter((t=>t.properties[e]!=1/0)).filter((t=>t.properties[e]!=-1/0)).filter((t=>NaN!=t.properties[e])),l.sort(((t,r)=>+t.properties[e]-+r.properties[e])),l=l.slice(0,r);let a=JSON.parse(JSON.stringify(t));return a.features=l,a}});let Xr={table:Ur.table,remove:function({geojson:t,field:e}){return Ur.remove({x:t,field:e})},keep:function({geojson:t,field:e}){return Ur.keep({x:t,field:e})},add:function({geojson:t,field:e,expression:r}){return Ur.add({x:t,field:e,expression:r})},filter:function({geojson:t,expression:e}){return Ur.filter({x:t,expression:e})},subset:function({geojson:t,field:e,selection:r,inverse:l}){return Ur.subset({x:t,field:e,selection:r,inverse:l})},head:function({geojson:t,field:e,nb:r}){return Ur.head({x:t,field:e,nb:r})},tail:function({geojson:t,field:e,nb:r}){return Ur.tail({x:t,field:e,nb:r})}};export{jt as bbox,Rr as borders,Lr as draw,Fr as links,Er as match,qr as merge,Xr as properties,Cr as quickdraw,Kt as table2geo};export default null;
